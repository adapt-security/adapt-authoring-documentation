{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0-rc.4"
  },
  "components": {
    "schemas": {
      "base": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "base",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          }
        }
      },
      "tag": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "tag",
        "description": "Tag metadata applied to other objects",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "title": {
            "description": "The tag title",
            "type": "string"
          }
        },
        "required": [
          "title"
        ]
      },
      "authuser": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "authuser",
        "description": "Extra user properties related to auth",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          }
        },
        "required": [
          "authType"
        ]
      },
      "authtoken": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "authtoken",
        "description": "An authorisation token",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          }
        },
        "required": [
          "signature",
          "userId",
          "createdAt",
          "authType"
        ]
      },
      "userroles": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "userroles",
        "description": "Extra user properties for specifying roles",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "roles": {
            "description": "Roles assigned to this user",
            "type": "array",
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "default": []
          }
        }
      },
      "maildata": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "maildata",
        "description": "Email data",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "to": {
            "description": "Recipient email address",
            "type": "string",
            "format": "email"
          },
          "from": {
            "description": "Sender email address",
            "type": "string",
            "format": "email"
          },
          "subject": {
            "description": "Email subject",
            "type": "string"
          },
          "text": {
            "description": "Email text content",
            "type": "string"
          },
          "html": {
            "description": "Email HTML content",
            "type": "string"
          }
        },
        "required": [
          "to",
          "from",
          "subject",
          "text"
        ]
      },
      "localpassword": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "localpassword",
        "description": "Local authentication password",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "password": {
            "description": "Password value",
            "type": "string",
            "password": "password"
          }
        },
        "required": [
          "password"
        ]
      },
      "coursethemepreset": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "coursethemepreset",
        "description": "A reusable collection of theme settings",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "displayName": {
            "description": "User-friendly name for the settings",
            "type": "string"
          },
          "parentTheme": {
            "description": "Name of the theme these settings should be applied to",
            "type": "string"
          },
          "properties": {
            "description": "The theme settings",
            "type": "object"
          }
        },
        "required": [
          "displayName",
          "parentTheme"
        ]
      },
      "courseasset": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "courseasset",
        "description": "Metadata related to where an asset is used in a course",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "courseId": {
            "description": "Course record unique ID",
            "type": "string",
            "isObjectId": true
          },
          "contentId": {
            "description": "The ID for the content record that uses this asset",
            "type": "string",
            "isObjectId": true
          },
          "assetId": {
            "description": "Asset record unique ID",
            "type": "string",
            "isObjectId": true
          }
        },
        "required": [
          "courseId",
          "contentId",
          "assetId"
        ]
      },
      "log": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "log",
        "description": "A system log message",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "level": {
            "description": "The priority level of the log message",
            "type": "string",
            "enum": [
              "debug",
              "info",
              "success",
              "warn",
              "error",
              "fatal"
            ]
          },
          "module": {
            "description": "Module responsible for creating the log",
            "type": "string"
          },
          "timestamp": {
            "description": "Time log was created",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "description": "The data to be logged",
            "type": "array"
          }
        },
        "required": [
          "level"
        ]
      },
      "adaptbuild": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "adaptbuild",
        "description": "An Adapt course build instance",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "action": {
            "description": "The course _id",
            "type": "string"
          },
          "courseId": {
            "description": "The course _id",
            "type": "string"
          },
          "location": {
            "description": "Location of the course preview",
            "type": "string"
          },
          "expiresAt": {
            "description": "When the preview should be purged from the server",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "User which initiated the build",
            "type": "string",
            "isObjectId": true
          },
          "versions": {
            "description": "Versions of framework and plugins used in the build",
            "type": "object"
          }
        },
        "required": [
          "action",
          "courseId",
          "location",
          "expiresAt",
          "createdBy"
        ]
      },
      "text-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "text-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_text": {
                    "type": "object",
                    "title": "Text",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "hotgraphic-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "hotgraphic-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_hotgraphic": {
                    "type": "object",
                    "title": "Hotgraphic",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Image with selectable areas. Select each button to show more information.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "item": {
                        "type": "string",
                        "title": "Item",
                        "default": "Item {{{itemNumber}}} of {{{totalItems}}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "previous": {
                        "type": "string",
                        "title": "Previous",
                        "default": "{{#if title}}Back to {{{title}}} (item {{itemNumber}} of {{totalItems}}){{else}}{{_globals._accessibility._ariaLabels.previous}}{{/if}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "next": {
                        "type": "string",
                        "title": "Next",
                        "default": "{{#if title}}Forward to {{{title}}} (item {{itemNumber}} of {{totalItems}}){{else}}{{_globals._accessibility._ariaLabels.next}}{{/if}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "popupPagination": {
                        "type": "string",
                        "title": "Popup pagination",
                        "description": "This is the aria label for each item. Use {{itemNumber}} and {{totalItems}} in your text to tell the user which item they are viewing and how many items there are in total",
                        "default": "{{itemNumber}} / {{totalItems}}",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "narrative-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "narrative-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_narrative": {
                    "type": "object",
                    "title": "Narrative",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Slide show. Select the next button to progress.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "previous": {
                        "type": "string",
                        "title": "Previous",
                        "default": "{{#if title}}Back to {{{title}}} (item {{itemNumber}} of {{totalItems}}){{else}}{{_globals._accessibility._ariaLabels.previous}}{{/if}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "next": {
                        "type": "string",
                        "title": "Next",
                        "default": "{{#if title}}Forward to {{{title}}} (item {{itemNumber}} of {{totalItems}}){{else}}{{_globals._accessibility._ariaLabels.next}}{{/if}}",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "media-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "media-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_media": {
                    "type": "object",
                    "title": "Media",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Media player{{#any _transcript._inlineTranscript _transcript._externalTranscript}} and transcript{{/any}}.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "skipToTranscript": {
                        "type": "string",
                        "title": "Skip to transcript",
                        "default": "Skip to transcript",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "playText": {
                        "type": "string",
                        "title": "Play",
                        "default": "Play",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "pauseText": {
                        "type": "string",
                        "title": "Pause",
                        "default": "Pause",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "stopText": {
                        "type": "string",
                        "title": "Stop",
                        "default": "Stop",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "audioPlayerText": {
                        "type": "string",
                        "title": "Audio Player",
                        "default": "Audio Player",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "videoPlayerText": {
                        "type": "string",
                        "title": "Video Player",
                        "default": "Video Player",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "tracksText": {
                        "type": "string",
                        "title": "Captions/Subtitles",
                        "default": "Captions/Subtitles",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "timeSliderText": {
                        "type": "string",
                        "title": "Time Slider",
                        "default": "Time Slider",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "muteText": {
                        "type": "string",
                        "title": "Mute Toggle",
                        "default": "Mute Toggle",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "unmuteStatusText": {
                        "type": "string",
                        "title": "Unmute",
                        "default": "Unmute",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "muteStatusText": {
                        "type": "string",
                        "title": "Mute",
                        "default": "Mute",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "volumeSliderText": {
                        "type": "string",
                        "title": "Volume Slider",
                        "default": "Volume Slider",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "fullscreenText": {
                        "type": "string",
                        "title": "Fullscreen",
                        "default": "Fullscreen",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "goFullscreenText": {
                        "type": "string",
                        "title": "Go Fullscreen",
                        "default": "Go Fullscreen",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "turnOffFullscreenText": {
                        "type": "string",
                        "title": "Turn off Fullscreen",
                        "default": "Turn off Fullscreen",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "noneText": {
                        "type": "string",
                        "title": "None",
                        "default": "None",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "skipBackText": {
                        "type": "string",
                        "title": "Skip back %1 seconds",
                        "default": "Skip back %1 seconds",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "allyVolumeControlText": {
                        "type": "string",
                        "title": "Use Up/Down Arrow keys to increase or decrease volume.",
                        "default": "Use Up/Down Arrow keys to increase or decrease volume.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "progessHelpText": {
                        "type": "string",
                        "title": "Use Left/Right Arrow keys to advance one second, Up/Down arrows to advance ten seconds.",
                        "default": "Use Left/Right Arrow keys to advance one second, Up/Down arrows to advance ten seconds.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "textinput-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "textinput-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_textinput": {
                    "type": "object",
                    "title": "Text Input",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Text input. Type your answer and then submit.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "matching-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "matching-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_matching": {
                    "type": "object",
                    "title": "Matching",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Matching. Select from lists and then submit.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "graphic-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "graphic-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_graphic": {
                    "type": "object",
                    "title": "Graphic",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Graphic",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "mcq-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "mcq-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_mcq": {
                    "type": "object",
                    "title": "MCQ",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Multiple choice question",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "assessment-article": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "assessment-article",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_assessment": {
            "type": "object",
            "title": "Assessment",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Make this article an assessment",
                "default": false
              },
              "_id": {
                "type": "string",
                "title": "Assessment ID",
                "description": "Unique name for the assessment. This is required by other plugins such as the 'Assessment Results' component to identify the assessment and display its variables",
                "default": ""
              },
              "_attempts": {
                "type": "number",
                "title": "Allowed attempts",
                "description": "Controls the number of attempts the user is allowed to have on this assessment. Set to -1 (or 0) to allow infinite attempts",
                "default": -1
              },
              "_isPercentageBased": {
                "type": "boolean",
                "title": "Set pass mark as percentage",
                "description": "Determines whether the pass mark values should be treated as percentages (default) or as the raw score and correctness",
                "default": true
              },
              "_scoreToPass": {
                "type": "number",
                "title": "Pass mark",
                "description": "The minimum score required by the learner to pass the assessment or the minimum percentage score if percentage-based",
                "default": 60
              },
              "_correctToPass": {
                "type": "number",
                "title": "Correct pass mark",
                "description": "The minimum number of correct questions required by the learner to pass the assessment or the minimum percentage correct if percentage-based",
                "default": 60
              },
              "_includeInTotalScore": {
                "type": "boolean",
                "title": "Include score in course total",
                "description": "Determines if the score from this assessment should be sent to the LMS. The score sent is a percentage according to 'Assessment weight'",
                "default": true
              },
              "_assessmentWeight": {
                "type": "number",
                "title": "Assessment weight",
                "description": "If there are multiple assessments in the course, this value controls the proportion of the LMS score which is attributed to this assessment, i.e. 1 equals 100%, 0.5 is 50%, etc.",
                "default": 1
              },
              "_suppressMarking": {
                "type": "boolean",
                "title": "Suppress marking until complete",
                "description": "Determines whether question marking should be delayed until completion of the assessment or until all attempts have been exhausted",
                "default": false
              },
              "_isResetOnRevisit": {
                "type": "boolean",
                "title": "Reset state on revisit",
                "description": "Controls whether the assessment should be reset automatically (up to the number of available attempts) when a user revisits the page",
                "default": false
              },
              "_allowResetIfPassed": {
                "type": "boolean",
                "title": "Allow retry once passed",
                "description": "Controls whether the assessment may be reset after it has been passed (whilst there are attempts remaining)",
                "default": false
              },
              "_scrollToOnReset": {
                "type": "boolean",
                "title": "Scroll to assessment article on reset",
                "description": "Controls whether to scroll to the assessment after reset or to stay at the top of the assessment page",
                "default": false
              },
              "_randomisation": {
                "type": "object",
                "title": "Randomised blocks",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Enable",
                    "description": "If randomisation is enabled, a specified number of blocks will be displayed to the user in a random order",
                    "default": false
                  },
                  "_blockCount": {
                    "type": "number",
                    "title": "Block count",
                    "description": "The number of blocks to present to the learner. Set to -1 (or 0) to display all blocks",
                    "default": -1
                  }
                }
              },
              "_banks": {
                "type": "object",
                "title": "Question banks",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Enable",
                    "description": "Enables associating blocks of question components with a 'bank', allowing questions to be grouped then rendered via the 'Question counts' property",
                    "default": false
                  },
                  "_split": {
                    "type": "string",
                    "title": "Question counts",
                    "description": "This is a comma-separated list of numbers corresponding to the number of questions to be drawn from each question bank. The position of the number in the list corresponds to the 'Bank ID' assigned, e.g. \"3,2\" would display three questions from Bank 1 and two from Bank 2",
                    "default": ""
                  },
                  "_randomisation": {
                    "type": "boolean",
                    "title": "Randomise question banks",
                    "description": "Controls whether the questions will be displayed in a random order",
                    "default": false
                  }
                }
              },
              "_questions": {
                "type": "object",
                "title": "Question overrides",
                "default": {},
                "properties": {
                  "_resetType": {
                    "type": "string",
                    "title": "Reset type",
                    "description": "Determines whether the question will register as completed when reset. When assigned a value of 'soft', the learner may continue to interact with it, but the complete attribute remains set to true. When assigned 'hard', complete is set to false, and the learner will be forced to complete it again if it is reset. For 'soft', when using trickle, please set the trickle Completion Attribute to `_isInteractionComplete'.",
                    "default": "hard",
                    "enum": [
                      "soft",
                      "hard"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_canShowFeedback": {
                    "type": "boolean",
                    "title": "Enable feedback",
                    "description": "Allows the user to view feedback on their answer",
                    "default": false
                  },
                  "_canShowMarking": {
                    "type": "boolean",
                    "title": "Enable marking",
                    "description": "Displays ticks and crosses on question completion",
                    "default": false
                  },
                  "_canShowModelAnswer": {
                    "type": "boolean",
                    "title": "Enable correct answer toggle",
                    "description": "Allows the user to view the 'model answer' should they answer the question incorrectly",
                    "default": false
                  }
                }
              }
            }
          }
        }
      },
      "assessment-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "assessment-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_assessment": {
            "type": "object",
            "title": "Assessment",
            "default": {},
            "properties": {
              "_isPercentageBased": {
                "type": "boolean",
                "title": "Set pass mark as percentage",
                "description": "Determines whether the pass mark values should be treated as percentages (default) or as the raw score and correctness",
                "default": true
              },
              "_scoreToPass": {
                "type": "number",
                "title": "Pass mark",
                "description": "The minimum score required by the learner to pass the assessment or the minimum percentage score if percentage-based",
                "default": 60
              },
              "_correctToPass": {
                "type": "number",
                "title": "Correct pass mark",
                "description": "The minimum number of correct questions required by the learner to pass the assessment or the minimum percentage correct if percentage-based",
                "default": 60
              }
            }
          }
        }
      },
      "assessment-block": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "assessment-block",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_assessment": {
            "type": "object",
            "title": "Assessment",
            "default": {},
            "properties": {
              "_quizBankID": {
                "type": "number",
                "title": "Bank ID",
                "description": "Used to group blocks of question components into associated banks. This works in conjunction with the 'Question counts' property when question banks are in use",
                "default": 1,
                "_backboneForms": {
                  "editorAttrs": {
                    "step": 1,
                    "min": 1
                  }
                }
              }
            }
          }
        }
      },
      "assessmentResults-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "assessmentResults-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_assessmentResults": {
                    "type": "object",
                    "title": "Assessment Results",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Assessment results.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "gmcq-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "gmcq-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_gmcq": {
                    "type": "object",
                    "title": "GMCQ",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Multiple choice question",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "resources-contentobject": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "resources-contentobject",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_resources": {
            "type": "object",
            "title": "Resources",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add resource links to the drawer",
                "description": "Controls whether the Resources extension is enabled or disabled",
                "default": true
              },
              "_resourcesItems": {
                "type": "array",
                "title": "Items",
                "items": {
                  "type": "object",
                  "properties": {
                    "_type": {
                      "type": "string",
                      "title": "Type",
                      "enum": [
                        "document",
                        "media",
                        "link"
                      ],
                      "_backboneForms": "Select"
                    },
                    "_forceDownload": {
                      "type": "boolean",
                      "title": "Force download",
                      "description": "Forces the resource to be downloaded rather than opened in the browser. Only supported in browsers that support the 'download' attribute and for resources that are part of the course content/hosted on the same URL",
                      "default": false
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "filename": {
                      "type": "string",
                      "title": "Filename",
                      "description": "Used to set the name of the downloaded file to something different to the source filename. Only supported in browsers that support the 'download' attribute and for resources that are part of the course content/hosted on the same URL. Forces the file to be downloaded regardless of what 'Force download' is set to",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "_link": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Source",
                      "_backboneForms": "Asset"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "resources-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "resources-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_extensions": {
                "type": "object",
                "default": {},
                "properties": {
                  "_resources": {
                    "type": "object",
                    "title": "Resources",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "Resources: ARIA region",
                        "default": "",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "resources": {
                        "type": "string",
                        "title": "Resources",
                        "default": "Additional resources.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "_resources": {
            "type": "object",
            "title": "Resources",
            "default": {},
            "required": [
              "title"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add resource links to the drawer",
                "description": "Controls whether the Resources extension is enabled or disabled",
                "default": true
              },
              "_drawerOrder": {
                "type": "number",
                "title": "Index position in the drawer",
                "description": "The order in which this extension should appear as a drawer item",
                "default": 0
              },
              "title": {
                "type": "string",
                "title": "Title",
                "default": "Resources",
                "description": "The title for the resources button which displays when more than one extension is using the drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "description": {
                "type": "string",
                "title": "Description",
                "default": "Select here to view resources for this course",
                "description": "The description text for the resources button which displays when more than one extension is using the drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "displayTitle": {
                "type": "string",
                "title": "Display title",
                "default": "",
                "description": "The title for the resources which displays at the top of the resources drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "body": {
                "type": "string",
                "title": "Body",
                "default": "",
                "description": "The body text for the resources which displays at the top of the resources drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "instruction": {
                "type": "string",
                "title": "Instruction",
                "default": "",
                "description": "The instruction text for the resources which displays at the top of the resources drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "_filterButtons": {
                "type": "object",
                "title": "Filter buttons",
                "default": {},
                "properties": {
                  "all": {
                    "type": "string",
                    "title": "All",
                    "default": "All",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "document": {
                    "type": "string",
                    "title": "Documents",
                    "default": "Documents",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "media": {
                    "type": "string",
                    "title": "Media",
                    "default": "Media",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "link": {
                    "type": "string",
                    "title": "Links",
                    "default": "Links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom1": {
                    "type": "string",
                    "title": "Custom type 1",
                    "default": "Custom type 1",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom2": {
                    "type": "string",
                    "title": "Custom type 2",
                    "default": "Custom type 2",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom3": {
                    "type": "string",
                    "title": "Custom type 3",
                    "default": "Custom type 3",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom4": {
                    "type": "string",
                    "title": "Custom type 4",
                    "default": "Custom type 4",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom5": {
                    "type": "string",
                    "title": "Custom type 5",
                    "default": "Custom type 5",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom6": {
                    "type": "string",
                    "title": "Custom type 6",
                    "default": "Custom type 6",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom7": {
                    "type": "string",
                    "title": "Custom type 7",
                    "default": "Custom type 7",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom8": {
                    "type": "string",
                    "title": "Custom type 8",
                    "default": "Custom type 8",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom9": {
                    "type": "string",
                    "title": "Custom type 9",
                    "default": "Custom type 9",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom10": {
                    "type": "string",
                    "title": "Custom type 10",
                    "default": "Custom type 10",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_filterAria": {
                "type": "object",
                "title": "Filter ARIA labels",
                "default": {},
                "properties": {
                  "allAria": {
                    "type": "string",
                    "title": "All",
                    "default": "View all resources",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "documentAria": {
                    "type": "string",
                    "title": "Documents",
                    "default": "View document resources",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "mediaAria": {
                    "type": "string",
                    "title": "Media",
                    "default": "View media resources",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "linkAria": {
                    "type": "string",
                    "title": "Links",
                    "default": "View resource links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom1Aria": {
                    "type": "string",
                    "title": "Custom type 1",
                    "default": "View custom type 1 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom2Aria": {
                    "type": "string",
                    "title": "Custom type 2",
                    "default": "View custom type 2 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom3Aria": {
                    "type": "string",
                    "title": "Custom type 3",
                    "default": "View custom type 3 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom4Aria": {
                    "type": "string",
                    "title": "Custom type 4",
                    "default": "View custom type 4 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom5Aria": {
                    "type": "string",
                    "title": "Custom type 5",
                    "default": "View custom type 5 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom6Aria": {
                    "type": "string",
                    "title": "Custom type 6",
                    "default": "View custom type 6 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom7Aria": {
                    "type": "string",
                    "title": "Custom type 7",
                    "default": "View custom type 7 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom8Aria": {
                    "type": "string",
                    "title": "Custom type 8",
                    "default": "View custom type 8 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom9Aria": {
                    "type": "string",
                    "title": "Custom type 9",
                    "default": "View custom type 9 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom10Aria": {
                    "type": "string",
                    "title": "Custom type 10",
                    "default": "View custom type 10 links",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_resourcesItems": {
                "type": "array",
                "title": "Items",
                "items": {
                  "type": "object",
                  "properties": {
                    "_type": {
                      "type": "string",
                      "title": "Type",
                      "enum": [
                        "document",
                        "media",
                        "link"
                      ],
                      "_backboneForms": "Select"
                    },
                    "_forceDownload": {
                      "type": "boolean",
                      "title": "Force download",
                      "description": "Forces the resource to be downloaded rather than opened in the browser. Only supported in browsers that support the 'download' attribute and for resources that are part of the course content/hosted on the same URL",
                      "default": false
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "filename": {
                      "type": "string",
                      "title": "Filename",
                      "description": "Used to set the name of the downloaded file to something different to the source filename. Only supported in browsers that support the 'download' attribute and for resources that are part of the course content/hosted on the same URL. Forces the file to be downloaded regardless of what 'Force download' is set to",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "_link": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Source",
                      "_backboneForms": "Asset"
                    },
                    "_isGlobal": {
                      "type": "boolean",
                      "title": "Is displayed on every page",
                      "default": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "vanilla-article": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "vanilla-article",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the article title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the article body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the article instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_backgroundImage": {
                "type": "object",
                "title": "Background image",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Extra Large",
                    "description": "Extra large background image, e.g. hd laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_large": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Large",
                    "description": "Large background image, e.g. laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_medium": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Medium",
                    "description": "Medium background image, e.g. tablet devices",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_small": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Small",
                    "description": "Small background image, e.g. mobile / cellphones",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              },
              "_backgroundStyles": {
                "type": "object",
                "title": "Background image styles",
                "default": {},
                "properties": {
                  "_backgroundRepeat": {
                    "type": "string",
                    "title": "Repeat",
                    "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                    "default": "no-repeat",
                    "enum": [
                      "repeat",
                      "repeat-x",
                      "repeat-y",
                      "no-repeat"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundSize": {
                    "type": "string",
                    "title": "Size",
                    "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible. 100% 100%: Resize the background image to match the dimensions of the container",
                    "default": "cover",
                    "enum": [
                      "auto",
                      "cover",
                      "contain",
                      "100% 100%"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundPosition": {
                    "type": "string",
                    "title": "Position",
                    "description": "The first value is the horizontal position and the second value is the vertical",
                    "default": "center top",
                    "enum": [
                      "left top",
                      "left center",
                      "left bottom",
                      "center top",
                      "center center",
                      "center bottom",
                      "right top",
                      "right center",
                      "right bottom"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_responsiveClasses": {
                "type": "object",
                "title": "Responsive classes",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "title": "Extra large",
                    "description": "Extra large CSS class, e.g. hd laptop/desktop computers",
                    "default": ""
                  },
                  "_large": {
                    "type": "string",
                    "title": "Large",
                    "description": "Large CSS class, e.g. laptop/desktop computers",
                    "default": ""
                  },
                  "_medium": {
                    "type": "string",
                    "title": "Medium",
                    "description": "Medium CSS class, e.g. tablet devices",
                    "default": ""
                  },
                  "_small": {
                    "type": "string",
                    "title": "Small",
                    "description": "Small CSS class, e.g. mobile / cellphones",
                    "default": ""
                  }
                }
              }
            }
          }
        }
      },
      "vanilla-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "vanilla-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          }
        }
      },
      "vanilla-block": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "vanilla-block",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the block title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the block body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the block instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_backgroundImage": {
                "type": "object",
                "title": "Background image",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Extra large",
                    "description": "Extra large background image, e.g. hd laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_large": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Large",
                    "description": "Large background image, e.g. laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_medium": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Medium",
                    "description": "Medium background image, e.g. tablet devices",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_small": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Small",
                    "description": "Small background image, e.g. mobile / cellphones",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              },
              "_backgroundStyles": {
                "type": "object",
                "title": "Background image styles",
                "default": {},
                "properties": {
                  "_backgroundRepeat": {
                    "type": "string",
                    "title": "Repeat",
                    "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                    "default": "no-repeat",
                    "enum": [
                      "repeat",
                      "repeat-x",
                      "repeat-y",
                      "no-repeat"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundSize": {
                    "type": "string",
                    "title": "Size",
                    "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible. 100% 100%: Resize the background image to match the dimensions of the container",
                    "default": "cover",
                    "enum": [
                      "auto",
                      "cover",
                      "contain",
                      "100% 100%"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundPosition": {
                    "type": "string",
                    "title": "Position",
                    "description": "The first value is the horizontal position and the second value is the vertical",
                    "default": "center top",
                    "enum": [
                      "left top",
                      "left center",
                      "left bottom",
                      "center top",
                      "center center",
                      "center bottom",
                      "right top",
                      "right center",
                      "right bottom"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_minimumHeights": {
                "type": "object",
                "title": "Block minimum height",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "number",
                    "title": "Extra large",
                    "description": "Minimum height should only be used in instances where the block height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. hd laptop/desktop computers",
                    "default": 0
                  },
                  "_large": {
                    "type": "number",
                    "title": "Large",
                    "description": "Minimum height should only be used in instances where the block height needs to be greater than the content e.g. to prevent a background image being cropped.For e.g. laptop/desktop computers",
                    "default": 0
                  },
                  "_medium": {
                    "type": "number",
                    "title": "Medium",
                    "description": "Minimum height should only be used in instances where the block height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. tablet devices",
                    "default": 0
                  },
                  "_small": {
                    "type": "number",
                    "title": "Small",
                    "description": "Minimum height should only be used in instances where the block height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. mobile / cellphones",
                    "default": 0
                  }
                }
              },
              "_responsiveClasses": {
                "type": "object",
                "title": "Responsive classes",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "title": "Extra large",
                    "description": "Extra large CSS class, e.g. hd laptop/desktop computers",
                    "default": ""
                  },
                  "_large": {
                    "type": "string",
                    "title": "Large",
                    "description": "Large CSS class, e.g. laptop/desktop computers",
                    "default": ""
                  },
                  "_medium": {
                    "type": "string",
                    "title": "Medium",
                    "description": "Medium CSS class, e.g. tablet devices",
                    "default": ""
                  },
                  "_small": {
                    "type": "string",
                    "title": "Small",
                    "description": "Small CSS class, e.g. mobile / cellphones",
                    "default": ""
                  }
                }
              },
              "_isDividerBlock": {
                "type": "boolean",
                "title": "Set this block as a divider",
                "description": "If enabled, applies a divider class to the block",
                "default": false
              },
              "_paddingTop": {
                "type": "string",
                "title": "Spacing top",
                "description": "Changes the value of the blocks top spacing. Double: Doubles the blocks top spacing. Standard: Retains the standard blocks top spacing. Half: Halves the blocks top spacing. Remove: Removes the blocks top spacing. The default value is `standard`.",
                "default": "standard",
                "enum": [
                  "double",
                  "standard",
                  "half",
                  "remove"
                ],
                "_backboneForms": "Select"
              },
              "_paddingBottom": {
                "type": "string",
                "title": "Spacing bottom",
                "description": "Changes the value of the blocks bottom spacing. Double: Doubles the blocks bottom spacing. Standard: Retains the standard blocks bottom spacing. Half: Halves the blocks bottom spacing. Remove: Removes the blocks bottom spacing. The default value is `standard`.",
                "default": "standard",
                "enum": [
                  "double",
                  "standard",
                  "half",
                  "remove"
                ],
                "_backboneForms": "Select"
              },
              "_componentVerticalAlignment": {
                "type": "string",
                "title": "Set the vertical alignment of the child component(s)",
                "description": "Defines the vertical alignment of the child component(s) in relation to the block. Top: Aligns descendents to the top of the block. Center: Aligns descendents to the center of the block. Bottom: Aligns descendents to the bottom of the block. The default alignment is `top`.",
                "default": "top",
                "enum": [
                  "top",
                  "center",
                  "bottom"
                ],
                "_backboneForms": "Select"
              },
              "_componentHorizontalAlignment": {
                "type": "string",
                "title": "Set the horizontal alignment of the child component(s)",
                "description": "Defines the horizontal alignment of the child component(s) in relation to the block. The default alignment is `left`.",
                "default": "left",
                "enum": [
                  "left",
                  "center",
                  "right"
                ],
                "_backboneForms": "Select"
              }
            }
          }
        }
      },
      "vanilla-contentobject": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "vanilla-contentobject",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_backgroundImage": {
                "type": "object",
                "title": "Background image",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Extra large",
                    "description": "Extra large background image, e.g. hd laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_large": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Large",
                    "description": "Large background image, e.g. laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_medium": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Medium",
                    "description": "Medium background image, e.g. tablet devices",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_small": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Small",
                    "description": "Small background image, e.g. mobile / cellphones",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              },
              "_backgroundStyles": {
                "type": "object",
                "title": "Background image styles",
                "default": {},
                "properties": {
                  "_backgroundRepeat": {
                    "type": "string",
                    "title": "Repeat",
                    "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                    "default": "no-repeat",
                    "enum": [
                      "repeat",
                      "repeat-x",
                      "repeat-y",
                      "no-repeat"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundSize": {
                    "type": "string",
                    "title": "Size",
                    "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible. 100% 100%: Resize the background image to match the dimensions of the container",
                    "default": "cover",
                    "enum": [
                      "auto",
                      "cover",
                      "contain",
                      "100% 100%"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundPosition": {
                    "type": "string",
                    "title": "Position",
                    "description": "The first value is the horizontal position and the second value is the vertical",
                    "default": "center top",
                    "enum": [
                      "left top",
                      "left center",
                      "left bottom",
                      "center top",
                      "center center",
                      "center bottom",
                      "right top",
                      "right center",
                      "right bottom"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_responsiveClasses": {
                "type": "object",
                "title": "Responsive classes",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "title": "Extra large",
                    "description": "Extra large CSS class, e.g. hd laptop/desktop computers",
                    "default": ""
                  },
                  "_large": {
                    "type": "string",
                    "title": "Large",
                    "description": "Large CSS class, e.g. laptop/desktop computers",
                    "default": ""
                  },
                  "_medium": {
                    "type": "string",
                    "title": "Medium",
                    "description": "Medium CSS class, e.g. tablet devices",
                    "default": ""
                  },
                  "_small": {
                    "type": "string",
                    "title": "Small",
                    "description": "Small CSS class, e.g. mobile / cellphones",
                    "default": ""
                  }
                }
              },
              "_pageHeader": {
                "type": "object",
                "title": "Header",
                "default": {},
                "properties": {
                  "_textAlignment": {
                    "type": "object",
                    "title": "Text alignment",
                    "default": {},
                    "properties": {
                      "_title": {
                        "type": "string",
                        "title": "Title alignment",
                        "description": "Set the alignment of the page title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_body": {
                        "type": "string",
                        "title": "Body alignment",
                        "description": "Set the alignment of the page body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_instruction": {
                        "type": "string",
                        "title": "Instruction alignment",
                        "description": "Set the alignment of the page instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      }
                    }
                  },
                  "_backgroundImage": {
                    "type": "object",
                    "title": "Header background image",
                    "default": {},
                    "properties": {
                      "_xlarge": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Extra large",
                        "description": "Extra large background image, e.g. hd laptop/desktop computers",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_large": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Large",
                        "description": "Large background image, e.g. laptop/desktop computers",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_medium": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Medium",
                        "description": "Medium background image, e.g. tablet devices",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_small": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Small",
                        "description": "Small background image, e.g. mobile / cellphones",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      }
                    }
                  },
                  "_backgroundStyles": {
                    "type": "object",
                    "title": "Header background image styles",
                    "default": {},
                    "properties": {
                      "_backgroundRepeat": {
                        "type": "string",
                        "title": "Repeat",
                        "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                        "default": "no-repeat",
                        "enum": [
                          "repeat",
                          "repeat-x",
                          "repeat-y",
                          "no-repeat"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_backgroundSize": {
                        "type": "string",
                        "title": "Size",
                        "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible. 100% 100%: Resize the background image to match the dimensions of the container",
                        "default": "cover",
                        "enum": [
                          "auto",
                          "cover",
                          "contain",
                          "100% 100%"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_backgroundPosition": {
                        "type": "string",
                        "title": "Position",
                        "description": "The first value is the horizontal position and the second value is the vertical",
                        "default": "center top",
                        "enum": [
                          "left top",
                          "left center",
                          "left bottom",
                          "center top",
                          "center center",
                          "center bottom",
                          "right top",
                          "right center",
                          "right bottom"
                        ],
                        "_backboneForms": "Select"
                      }
                    }
                  },
                  "_minimumHeights": {
                    "type": "object",
                    "title": "Header minimum height",
                    "default": {},
                    "properties": {
                      "_xlarge": {
                        "type": "number",
                        "title": "Extra large",
                        "description": "Minimum height should only be used in instances where the page header height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. hd laptop/desktop computers",
                        "default": 0
                      },
                      "_large": {
                        "type": "number",
                        "title": "Large",
                        "description": "Minimum height should only be used in instances where the page header height needs to be greater than the content e.g. to prevent a background image being cropped. For , e.g. laptop/desktop computers",
                        "default": 0
                      },
                      "_medium": {
                        "type": "number",
                        "title": "Medium",
                        "description": "Minimum height should only be used in instances where the page header height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. tablet devices",
                        "default": 0
                      },
                      "_small": {
                        "type": "number",
                        "title": "Small",
                        "description": "Minimum height should only be used in instances where the page header height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. mobile / cellphones",
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "vanilla-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "vanilla-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_vanilla": {
            "type": "object",
            "title": "Theme",
            "default": {},
            "properties": {
              "_favIcon": {
                "type": "object",
                "default": {},
                "title": "Favicon",
                "properties": {
                  "_src": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Image",
                    "description": "Select a favicon to improve user experience and enforce brand consistency. This will be displayed in places like your browser's address bar, page tabs and bookmarks menu. Usually, a favicon is 16 x 16 pixels in size and stored in the GIF, PNG, or ICO file format.",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "vanilla-theme": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "vanilla-theme",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_global": {
            "type": "object",
            "title": "Global",
            "default": {},
            "properties": {
              "font-color": {
                "type": "string",
                "title": "Font colour",
                "description": "Global body font colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "font-color-inverted": {
                "type": "string",
                "title": "Font colour - inverted",
                "description": "Global body font colour inverted. Either a lightened/darkened alternative to Font colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "link": {
                "type": "string",
                "title": "Link font colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "link-inverted": {
                "type": "string",
                "title": "Link font colour - inverted",
                "description": "Global link font colour inverted. Either a lightened/darkened alternative to Link colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "link-hover": {
                "type": "string",
                "title": "Link font colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "link-inverted-hover": {
                "type": "string",
                "title": "Link font colour - inverted hover",
                "description": "Global link font colour when hovered over inverted. Either a lightened/darkened alternative to Link hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "heading-color": {
                "type": "string",
                "title": "Heading colour",
                "description": "Global title colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "heading-color-inverted": {
                "type": "string",
                "title": "Heading colour - inverted",
                "description": "Global title colour inverted. Either a lightened/darkened alternative to Title colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_items": {
            "type": "object",
            "title": "Items (components)",
            "default": {},
            "properties": {
              "item-color": {
                "type": "string",
                "title": "Item colour",
                "description": "Defines the clickable areas or points of interest in components",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "item-color-inverted": {
                "type": "string",
                "title": "Item colour - inverted",
                "description": "Defines the item text/icon colour. Should be a colour that provides good contrast against the item colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "item-color-hover": {
                "type": "string",
                "title": "Item colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "item-color-inverted-hover": {
                "type": "string",
                "title": "Item colour - inverted hover",
                "description": "Defines the item text/icon colour when hovered over. Should be a colour that provides good contrast against the item hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "item-color-selected": {
                "type": "string",
                "title": "Item colour - selected",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "item-color-inverted-selected": {
                "type": "string",
                "title": "Item colour - inverted selected",
                "description": "Defines the item text/icon colour when selected. Should be a colour that provides good contrast against the Item selected colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "visited": {
                "type": "string",
                "title": "Visited colour",
                "description": "Defines the item colour when it has been visited",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "visited-inverted": {
                "type": "string",
                "title": "Visited colour - inverted",
                "description": "Defines the item text/icon colour when visited. Should be a colour that provides good contrast against the item visited colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_buttons": {
            "type": "object",
            "title": "Buttons",
            "default": {},
            "properties": {
              "btn-color": {
                "type": "string",
                "title": "Button colour",
                "description": "Defines component question buttons and navigational elements",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "btn-color-inverted": {
                "type": "string",
                "title": "Button colour - inverted",
                "description": "Defines the button text/icon colour. Should be a colour that provides good contrast against the button colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "btn-color-hover": {
                "type": "string",
                "title": "Button colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "btn-color-inverted-hover": {
                "type": "string",
                "title": "Button colour - inverted hover",
                "description": "Defines the button text/icon colour when hovered over. Should be a colour that provides good contrast against the button hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "btn-icon-color": {
                "type": "string",
                "title": "Button icon colour",
                "description": "Defines the standardised icon button background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "btn-icon-color-inverted": {
                "type": "string",
                "title": "Button icon colour - inverted",
                "description": "Defines the button icon colour. Should be a colour that provides good contrast against the button colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "btn-icon-color-hover": {
                "type": "string",
                "title": "Button icon colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "btn-icon-color-inverted-hover": {
                "type": "string",
                "title": "Button icon colour - inverted hover",
                "description": "Defines the button icon colour when hovered over. Should be a colour that provides good contrast against the button hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "disabled": {
                "type": "string",
                "title": "Disabled colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "disabled-inverted": {
                "type": "string",
                "title": "Disabled colour - inverted",
                "description": "Defines the button text/icon colour when it is disabled. Should be a colour that provides good contrast against the button disabled colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_validation": {
            "type": "object",
            "title": "Validation states",
            "default": {},
            "properties": {
              "validation-success": {
                "type": "string",
                "title": "Validation success colour",
                "description": "Defines the question marking success colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "validation-success-inverted": {
                "type": "string",
                "title": "Validation success colour - inverted",
                "description": "Defines the question marking success text/icon colour. Should be a colour that provides good contrast against the question marking success colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "validation-error": {
                "type": "string",
                "title": "Validation error colour",
                "description": "Defines the question marking error colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "validation-error-inverted": {
                "type": "string",
                "title": "Validation error colour - inverted",
                "description": "Defines the question marking error text/icon colour. Should be a colour that provices good contrast against the question marking error colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_progress": {
            "type": "object",
            "title": "Progress bars",
            "default": {},
            "properties": {
              "progress": {
                "type": "string",
                "title": "Progress fill colour",
                "description": "Defines the global progress width fill colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "progress-inverted": {
                "type": "string",
                "title": "Progress background colour",
                "description": "Defines the global progress fill background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "progress-border": {
                "type": "string",
                "title": "Progress border colour",
                "description": "Defines the global border colour that appears around the progress fill bar",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_menu": {
            "type": "object",
            "title": "Menu",
            "default": {},
            "properties": {
              "menu-header-background-color": {
                "type": "string",
                "title": "Menu header background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-header-title-color": {
                "type": "string",
                "title": "Menu header title colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-header-body-color": {
                "type": "string",
                "title": "Menu header body colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-header-instruction-color": {
                "type": "string",
                "title": "Menu header instruction colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item": {
                "type": "string",
                "title": "Menu item colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-inverted": {
                "type": "string",
                "title": "Menu item colour - inverted",
                "description": "Defines the menu item text colour. Should be a colour that provides good contrast against the menu item colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-border-color": {
                "type": "string",
                "title": "Menu item border colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-progress": {
                "type": "string",
                "title": "Menu item progress fill colour",
                "description": "Defines the menu-item-specific progress width fill override colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-progress-inverted": {
                "type": "string",
                "title": "Menu item progress background colour",
                "description": "Defines the menu-item-specific progress fill background override colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-progress-border": {
                "type": "string",
                "title": "Menu item progress border colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-btn-color": {
                "type": "string",
                "title": "Menu item button background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-btn-color-inverted": {
                "type": "string",
                "title": "Menu item button background colour - inverted",
                "description": "Defines the menu item button text colour. Should be a colour that provides good contrast against the menu item button colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-btn-color-hover": {
                "type": "string",
                "title": "Menu item button background colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "menu-item-btn-color-inverted-hover": {
                "type": "string",
                "title": "Menu item button background colour - inverted hover",
                "description": "Defines the menu item button text colour when hovered over. Should be a colour that provides good contrast against the menu item button hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_nav": {
            "type": "object",
            "title": "Navigation bar",
            "default": {},
            "properties": {
              "nav": {
                "type": "string",
                "title": "Navigation background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-inverted": {
                "type": "string",
                "title": "Navigation background colour - inverted",
                "description": "Defines the general navigation inverted colour. Should be a colour that provides good contrast against the navigation colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-icon": {
                "type": "string",
                "title": "Navigation button background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-icon-inverted": {
                "type": "string",
                "title": "Navigation button background colour - inverted",
                "description": "Defines the navigation button text/icon colour. Should be a colour that provides good contrast against the navigation button colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-icon-hover": {
                "type": "string",
                "title": "Navigation button background colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-icon-inverted-hover": {
                "type": "string",
                "title": "Navigation button background colour - inverted hover",
                "description": "Defines the navigation button text/icon colour when hovered over. Should be a colour that provides good contrast against the navigation button hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-progress": {
                "type": "string",
                "title": "Navigation progress fill color",
                "description": "Defines the navigation-specific progress width fill override colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-progress-inverted": {
                "type": "string",
                "title": "Navigation progress background color - inverted",
                "description": "Defines the navigation-specific progress fill background override colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-progress-border": {
                "type": "string",
                "title": "Navigation progress border colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-progress-hover": {
                "type": "string",
                "title": "Navigation progress fill color - hover",
                "description": "Defines the navigation-specific progress width fill override colour when hovered over",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-progress-inverted-hover": {
                "type": "string",
                "title": "Navigation progress background color - inverted hover",
                "description": "Defines the navigation-specific progress fill background override colour when hovered over",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "nav-progress-border-hover": {
                "type": "string",
                "title": "Navigation progress border colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_notify": {
            "type": "object",
            "title": "Notify (popup)",
            "default": {},
            "properties": {
              "notify": {
                "type": "string",
                "title": "Notify background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-inverted": {
                "type": "string",
                "title": "Notify background colour - inverted",
                "description": "Defines the notify text colour. Should be a colour that provides good contrast against the notify colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-link": {
                "type": "string",
                "title": "Notify link font colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-link-hover": {
                "type": "string",
                "title": "Notify link font colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-btn": {
                "type": "string",
                "title": "Notify button background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-btn-inverted": {
                "type": "string",
                "title": "Notify button background colour - inverted",
                "description": "Defines the notify button text/icon colour. Should be a colour that provides good contrast against the notify button colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-btn-hover": {
                "type": "string",
                "title": "Notify button background colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-btn-inverted-hover": {
                "type": "string",
                "title": "Notify button background colour - inverted hover",
                "description": "Defines the notify button text/icon colour when hovered over. Should be a colour that provides good contrast against the notify button hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-icon": {
                "type": "string",
                "title": "Notify icon button background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-icon-inverted": {
                "type": "string",
                "title": "Notify icon button background colour - inverted",
                "description": "Defines the notify icon inverse colour. Should be a colour that provides good contrast against the notify icon colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-icon-hover": {
                "type": "string",
                "title": "Notify icon button background colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "notify-icon-inverted-hover": {
                "type": "string",
                "title": "Notify icon button background colour - inverted hover",
                "description": "Defines the notify icon colour when hovered over. Should be a colour that provides good contrast against the notify icon colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_drawer": {
            "type": "object",
            "title": "Drawer",
            "default": {},
            "properties": {
              "drawer": {
                "type": "string",
                "title": "Drawer background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-inverted": {
                "type": "string",
                "title": "Drawer background colour - inverted",
                "description": "Defines the drawer text colour. Should be a colour that provides good contrast against the drawer colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-link": {
                "type": "string",
                "title": "Drawer link font colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-link-hover": {
                "type": "string",
                "title": "Drawer link font colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-icon": {
                "type": "string",
                "title": "Drawer icon button background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-icon-inverted": {
                "type": "string",
                "title": "Drawer icon button background colour - inverted",
                "description": "Defines the drawer icon button inverse colour. Should be a colour that provides good contrast against the drawer icon button colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-icon-hover": {
                "type": "string",
                "title": "Drawer icon button background colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-icon-inverted-hover": {
                "type": "string",
                "title": "Drawer icon button background colour - inverted hover",
                "description": "Defines the drawer icon button inverse colour when hovered over. Should be a colour that provides good contrast against the drawer icon button hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-item": {
                "type": "string",
                "title": "Drawer item background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-item-inverted": {
                "type": "string",
                "title": "Drawer item background colour - inverted",
                "description": "Defines the drawer item text/icon colour. Should be a colour that provides good contrast against the drawer item colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-item-hover": {
                "type": "string",
                "title": "Drawer item background colour - hover",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-item-inverted-hover": {
                "type": "string",
                "title": "Drawer item background colour - inverted hover",
                "description": "Defines the drawer item text/icon colour when hovered over. Should be a colour that provides good contrast against the drawer item hover colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-item-selected": {
                "type": "string",
                "title": "Drawer item background colour - selected",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-item-inverted-selected": {
                "type": "string",
                "title": "Drawer item background colour - inverted selected",
                "description": "Defines the drawer item text/icon colour when selected. Should be a colour that provides good contrast against the drawer item selected colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-progress": {
                "type": "string",
                "title": "Drawer progress fill colour",
                "description": "Defines the drawer-specific progress width fill override colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-progress-inverted": {
                "type": "string",
                "title": "Drawer progress background colour",
                "description": "Defines the drawer-specific progress fill background override colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-progress-border": {
                "type": "string",
                "title": "Drawer progress border colour",
                "description": "Defines the drawer-specific border override colour that appears around the progress fill bar",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-progress-hover": {
                "type": "string",
                "title": "Drawer progress colour - hover",
                "description": "Defines the drawer-specific progress width fill override colour when hovered over",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-progress-inverted-hover": {
                "type": "string",
                "title": "Drawer progress colour - inverted hover",
                "description": "Defines the drawer-specific progress fill background override colour when hovered over",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "drawer-progress-border-hover": {
                "type": "string",
                "title": "Drawer progress border colour - hover",
                "description": "Defines the drawer-specific border override colour that appears around the progress fill bar when hovered over",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          },
          "_misc": {
            "type": "object",
            "title": "Miscellaneous",
            "default": {},
            "properties": {
              "background": {
                "type": "string",
                "title": "Background colour",
                "description": "Sets the generic background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "background-inverted": {
                "type": "string",
                "title": "Background colour - inverted",
                "description": "Defines the background text/icon colour. Should be a colour that provides good contrast against the background colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "shadow": {
                "type": "string",
                "title": "Shadow background colour (loading/popup background)",
                "default": "",
                "_backboneForms": "ColourPicker"
              },
              "shadow-inverted": {
                "type": "string",
                "title": "Shadow background colour - inverted",
                "description": "Defines the shadow text/icon colour. Should be a colour that provides good contrast against the shadow colour",
                "default": "",
                "_backboneForms": "ColourPicker"
              }
            }
          }
        }
      },
      "boxMenu-contentobject": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "boxMenu-contentobject",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_boxMenu": {
            "type": "object",
            "title": "Box Menu",
            "default": {},
            "properties": {
              "_renderAsGroup": {
                "type": "boolean",
                "title": "Make this a parent group of menu items",
                "description": "Enable this option to render items into a group on the menu. Groups can display a title, body, and instruction text",
                "default": false
              }
            }
          }
        }
      },
      "boxMenu-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "boxMenu-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_menu": {
                "type": "object",
                "default": {},
                "properties": {
                  "_boxMenu": {
                    "type": "object",
                    "title": "Box Menu",
                    "default": {},
                    "properties": {
                      "itemCount": {
                        "type": "string",
                        "title": "Item count label",
                        "default": "Item {{_nthChild}} of {{_totalChild}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "durationLabel": {
                        "type": "string",
                        "title": "Duration label",
                        "default": "Duration:",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "_boxMenu": {
            "type": "object",
            "title": "Box Menu",
            "default": {},
            "properties": {
              "_graphic": {
                "type": "object",
                "title": "Menu logo image",
                "default": {},
                "properties": {
                  "_src": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Source",
                    "description": "This image will appear above the menu page title",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "alt": {
                    "type": "string",
                    "title": "Alternative text",
                    "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_backgroundImage": {
                "type": "object",
                "title": "Background image",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Extra large",
                    "description": "Extra large background image, e.g. hd laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_large": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Large",
                    "description": "Large background image, e.g. laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_medium": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Medium",
                    "description": "Medium background image, e.g. tablet devices",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_small": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Small",
                    "description": "Small background image, e.g. mobile / cellphones",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              },
              "_backgroundStyles": {
                "type": "object",
                "title": "Background image styles",
                "default": {},
                "properties": {
                  "_backgroundRepeat": {
                    "type": "string",
                    "title": "Repeat",
                    "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                    "default": "",
                    "enum": [
                      "",
                      "repeat",
                      "repeat-x",
                      "repeat-y",
                      "no-repeat"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundSize": {
                    "type": "string",
                    "title": "Size",
                    "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible",
                    "default": "",
                    "enum": [
                      "",
                      "auto",
                      "cover",
                      "contain"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundPosition": {
                    "type": "string",
                    "title": "Position",
                    "description": "The first value is the horizontal position and the second value is the vertical",
                    "default": "",
                    "enum": [
                      "",
                      "left top",
                      "left center",
                      "left bottom",
                      "center top",
                      "center center",
                      "center bottom",
                      "right top",
                      "right center",
                      "right bottom"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_menuHeader": {
                "type": "object",
                "title": "Header",
                "default": {},
                "properties": {
                  "_textAlignment": {
                    "type": "object",
                    "title": "Text alignment",
                    "default": {},
                    "properties": {
                      "_title": {
                        "type": "string",
                        "title": "Title alignment",
                        "description": "Set the alignment of the menu title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_body": {
                        "type": "string",
                        "title": "Body alignment",
                        "description": "Set the alignment of the menu body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_instruction": {
                        "type": "string",
                        "title": "Instruction alignment",
                        "description": "Set the alignment of the menu instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      }
                    }
                  },
                  "_backgroundImage": {
                    "type": "object",
                    "title": "Header background image",
                    "default": {},
                    "properties": {
                      "_xlarge": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Extra large",
                        "description": "Extra large background image, e.g. hd laptop/desktop computers",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_large": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Large",
                        "description": "Large background image, e.g. laptop/desktop computers",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_medium": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Medium",
                        "description": "Medium background image, e.g. tablet devices",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_small": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Small",
                        "description": "Small background image, e.g. mobile / cellphones",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      }
                    }
                  },
                  "_backgroundStyles": {
                    "type": "object",
                    "title": "Header background image styles",
                    "default": {},
                    "properties": {
                      "_backgroundRepeat": {
                        "type": "string",
                        "title": "Repeat",
                        "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                        "default": "",
                        "enum": [
                          "",
                          "repeat",
                          "repeat-x",
                          "repeat-y",
                          "no-repeat"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_backgroundSize": {
                        "type": "string",
                        "title": "Size",
                        "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible",
                        "default": "",
                        "enum": [
                          "",
                          "auto",
                          "cover",
                          "contain"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_backgroundPosition": {
                        "type": "string",
                        "title": "Position",
                        "description": "The first value is the horizontal position and the second value is the vertical",
                        "default": "",
                        "enum": [
                          "",
                          "left top",
                          "left center",
                          "left bottom",
                          "center top",
                          "center center",
                          "center bottom",
                          "right top",
                          "right center",
                          "right bottom"
                        ],
                        "_backboneForms": "Select"
                      }
                    }
                  },
                  "_minimumHeights": {
                    "type": "object",
                    "title": "Header minimum height",
                    "default": {},
                    "properties": {
                      "_xlarge": {
                        "type": "number",
                        "title": "Extra Large",
                        "description": "Minimum height should only be used in instances where the menu header height needs to be greater than the content e.g. to prevent a background image being cropped",
                        "default": 0
                      },
                      "_large": {
                        "type": "number",
                        "title": "Large",
                        "description": "Minimum height should only be used in instances where the menu header height needs to be greater than the content e.g. to prevent a background image being cropped",
                        "default": 0
                      },
                      "_medium": {
                        "type": "number",
                        "title": "Medium",
                        "description": "Minimum height should only be used in instances where the menu header height needs to be greater than the content e.g. to prevent a background image being cropped",
                        "default": 0
                      },
                      "_small": {
                        "type": "number",
                        "title": "Small",
                        "description": "Minimum height should only be used in instances where the menu header height needs to be greater than the content e.g. to prevent a background image being cropped",
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "slider-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "slider-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_slider": {
                    "type": "object",
                    "title": "Slider",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Slider. Respond to the question by selecting a value on the scale and then submit.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "labelStart": {
                        "type": "string",
                        "title": "Scale start ARIA label",
                        "default": "Start of the scale",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "labelEnd": {
                        "type": "string",
                        "title": "Scale end ARIA label",
                        "default": "End of the scale",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "bookmarking-contentobject": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "bookmarking-contentobject",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_bookmarking": {
            "type": "object",
            "title": "Bookmarking",
            "default": {},
            "required": [
              "_level"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Bookmarking",
                "description": "Controls whether Bookmarking is enabled or disabled for this page of the course",
                "default": true
              },
              "_level": {
                "type": "string",
                "title": "Level",
                "description": "Whether you want to inherit the 'Level' setting from Project settings or override it for this page of the course",
                "default": "inherit",
                "enum": [
                  "inherit",
                  "page",
                  "block",
                  "component"
                ],
                "_backboneForms": "Select"
              }
            }
          }
        }
      },
      "bookmarking-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "bookmarking-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_bookmarking": {
            "type": "object",
            "title": "Bookmarking",
            "default": {},
            "required": [
              "_level"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Bookmarking",
                "description": "Controls whether the Bookmarking extension is enabled or disabled",
                "default": true
              },
              "_level": {
                "type": "string",
                "title": "Level",
                "description": "Allows you to set whether Bookmarking is done at page, block or component level",
                "default": "component",
                "enum": [
                  "page",
                  "block",
                  "component"
                ],
                "_backboneForms": "Select"
              },
              "_showPrompt": {
                "type": "boolean",
                "title": "Enable prompt",
                "description": "Controls whether the Bookmarking prompt is enabled or disabled. If not enabled, the user will be returned to their bookmarked position automatically",
                "default": true
              },
              "title": {
                "type": "string",
                "title": "Prompt title",
                "default": "Bookmarking",
                "_adapt": {
                  "translatable": true
                }
              },
              "body": {
                "type": "string",
                "title": "Prompt body",
                "default": "Would you like to continue where you left off?",
                "_adapt": {
                  "translatable": true
                }
              },
              "_buttons": {
                "type": "object",
                "title": "Prompt buttons",
                "default": {},
                "properties": {
                  "yes": {
                    "type": "string",
                    "title": "Confirm button text",
                    "default": "Yes",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "no": {
                    "type": "string",
                    "title": "Cancel button text",
                    "default": "No",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "languagePicker-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "languagePicker-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_extensions": {
                "type": "object",
                "default": {},
                "properties": {
                  "_languagePicker": {
                    "type": "object",
                    "title": "Language Picker",
                    "default": {},
                    "properties": {
                      "languageSelector": {
                        "type": "string",
                        "title": "Language selector",
                        "default": "Language selector",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_navOrder": {
                        "type": "number",
                        "title": "Navigation bar order",
                        "description": "Determines the order in which the button is displayed in the navigation bar. Negative numbers (e.g. -100) are left-aligned. Positive numbers (e.g. 100) are right-aligned.",
                        "default": 0
                      },
                      "_navTooltip": {
                        "type": "object",
                        "title": "Navigation tooltip",
                        "properties": {
                          "_isEnabled": {
                            "type": "boolean",
                            "title": "Enable tooltip for language picker button",
                            "default": true
                          },
                          "text": {
                            "type": "string",
                            "title": "Tooltip text",
                            "default": "Language selector",
                            "_adapt": {
                              "translatable": true
                            }
                          }
                        }
                      },
                      "_showLabel": {
                        "type": "boolean",
                        "title": "Enable navigation button label",
                        "description": "Determines whether a label is shown on the navigation bar button.",
                        "default": true
                      },
                      "navigationBarLabel": {
                        "type": "string",
                        "title": "Navigation button label",
                        "description": "The tooltip text to display on hover.",
                        "default": "Select course language",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_drawerPosition": {
                        "type": "string",
                        "default": "auto",
                        "title": "Drawer position",
                        "description": "Determines the starting position of the drawer to open.",
                        "enum": [
                          "auto",
                          "left",
                          "right"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "languagePicker-config": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "languagePicker-config",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_languagePicker": {
            "type": "object",
            "title": "Language Picker",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Language Picker",
                "description": "Controls whether the Language Picker extension is enabled or disabled",
                "default": false
              },
              "title": {
                "type": "string",
                "title": "Browser window title",
                "description": "Text to be shown in the browser's title bar when the language picker is displayed",
                "default": ""
              },
              "displayTitle": {
                "type": "string",
                "title": "Language Picker title",
                "description": "Header text for the Language Picker",
                "default": ""
              },
              "body": {
                "type": "string",
                "title": "Language Picker body",
                "description": "Introductory or explanatory text for the Language Picker",
                "default": ""
              },
              "_showOnCourseLoad": {
                "type": "boolean",
                "title": "Show on course load",
                "description": "Controls whether the Language Picker should be displayed on course load or not",
                "default": true
              },
              "_languagePickerIconClass": {
                "type": "string",
                "title": "Icon class",
                "description": "Your default options here are: icon-globe, icon-language-1, icon-language-2",
                "default": "icon-language-2"
              },
              "_restoreStateOnLanguageChange": {
                "type": "boolean",
                "title": "Restore course state on language change",
                "description": "Determines whether or not the language picker will try to restore the 'state' of the course when the user changes language. It is advised that you only enable this setting if all course languages have exactly the same structure; if they do not, some loss of tracking data will occur. If this setting is disabled, tracking data will be cleared when the user switches language - the 'Confirm Message' should be used to warn the user of this",
                "default": false
              },
              "_classes": {
                "type": "string",
                "title": "Custom classes",
                "description": "",
                "default": ""
              },
              "_languages": {
                "type": "array",
                "title": "Languages",
                "items": {
                  "type": "object",
                  "properties": {
                    "_language": {
                      "type": "string",
                      "title": "Language code",
                      "description": "This text must match the name of the language-specific folder located in the course root, e.g. en, fr, es",
                      "default": ""
                    },
                    "_direction": {
                      "type": "string",
                      "title": "Text direction",
                      "description": "",
                      "default": "ltr",
                      "enum": [
                        "ltr",
                        "rtl"
                      ],
                      "_backboneForms": "Select"
                    },
                    "_isDisabled": {
                      "type": "boolean",
                      "title": "Disable selection of this language",
                      "description": "Allows you to disable selection of this language. This can be useful in situations where localisation into a particular language has not yet been completed",
                      "default": false
                    },
                    "displayName": {
                      "type": "string",
                      "title": "Language name",
                      "description": "A user friendly name for the language, e.g. English, Français, Español",
                      "default": ""
                    },
                    "warningTitle": {
                      "type": "string",
                      "title": "Confirm Title",
                      "description": "This text appears as the header of the dialog confirming the learner's intent to change languages",
                      "default": ""
                    },
                    "warningMessage": {
                      "type": "string",
                      "title": "Confirm body",
                      "description": "This text appears as the body of the dialog confirming the learner's intent to change languages.  Note: the warning message should indicate that any progress will be lost when the language is switched",
                      "default": ""
                    },
                    "_buttons": {
                      "type": "object",
                      "title": "Prompt buttons",
                      "default": {},
                      "required": [
                        "yes",
                        "no"
                      ],
                      "properties": {
                        "yes": {
                          "type": "string",
                          "title": "Confirm button text",
                          "default": "Yes"
                        },
                        "no": {
                          "type": "string",
                          "title": "Cancel button text",
                          "default": "No"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "accordion-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "accordion-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_accordion": {
                    "type": "object",
                    "title": "Accordion",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "List of expandable sections. Select each button to expand the content.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "spoor-config": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "spoor-config",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_spoor": {
            "type": "object",
            "title": "Spoor (SCORM)",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable SCORM support",
                "description": "If enabled, the plugin will try to find and track to a SCORM conformant LMS. Uncheck to switch off SCORM tracking",
                "default": true
              },
              "_tracking": {
                "type": "object",
                "title": "Tracking",
                "default": {},
                "properties": {
                  "_shouldStoreResponses": {
                    "type": "boolean",
                    "title": "Store question state",
                    "description": "If enabled, the user's responses to questions will be saved and restored in each session. Note: this setting should be enabled in the majority of cases",
                    "default": true
                  },
                  "_shouldStoreAttempts": {
                    "type": "boolean",
                    "title": "Store question attempt states",
                    "description": "If enabled, a history of the user's responses to questions will be saved and restored in each session. Note: this setting should be disabled in the majority of cases",
                    "default": false
                  },
                  "_shouldRecordInteractions": {
                    "type": "boolean",
                    "title": "Record interactions",
                    "description": "If enabled, the course will record the user's responses to questions to the cmi.interactions SCORM data fields",
                    "default": true
                  }
                }
              },
              "_reporting": {
                "type": "object",
                "title": "Reporting",
                "default": {},
                "properties": {
                  "_onTrackingCriteriaMet": {
                    "type": "string",
                    "title": "Tracking success status",
                    "description": "What status to report back to the LMS when the tracking criteria are met",
                    "default": "completed",
                    "enum": [
                      "completed",
                      "passed",
                      "failed",
                      "incomplete"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_onAssessmentFailure": {
                    "type": "string",
                    "title": "Assessment failure status",
                    "description": "What status to report back to the LMS when the assessment is failed",
                    "default": "incomplete",
                    "enum": [
                      "completed",
                      "failed",
                      "incomplete"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_resetStatusOnLanguageChange": {
                    "type": "boolean",
                    "title": "Reset status on language change",
                    "description": "If enabled, the the course status will be reset to 'incomplete' when the user changes the course language",
                    "default": false
                  }
                }
              },
              "_advancedSettings": {
                "type": "object",
                "title": "Advanced settings",
                "default": {},
                "required": [
                  "_manifestIdentifier"
                ],
                "properties": {
                  "_scormVersion": {
                    "type": "string",
                    "title": "SCORM version",
                    "description": "The SCORM standard to use - SCORM 1.2 or SCORM 2004 4th Edition",
                    "default": "1.2",
                    "enum": [
                      "1.2",
                      "2004"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_showDebugWindow": {
                    "type": "boolean",
                    "title": "Enable SCORM debug window",
                    "description": "If enabled, a popup window will be shown on course launch that gives detailed information about what SCORM calls are being made. This can be very useful for debugging SCORM issues. Note that this popup window will appear automatically if the SCORM code encounters an error, even if this is set to false",
                    "default": false
                  },
                  "_commitOnStatusChange": {
                    "type": "boolean",
                    "title": "Commit data on status change",
                    "description": "If enabled, a 'commit' call will be made any time the lesson_status is changed",
                    "default": true
                  },
                  "_commitOnAnyChange": {
                    "type": "boolean",
                    "title": "Commit data on any change",
                    "description": "If enabled, a 'commit' (save all data) call will be made any time a value is changed. Note that enabling this setting may have a detrimental impact on the server and should only be used if absolutely necessary and only after careful load testing. Consider trying a lower value for 'Frequency of automatic commits' before changing this setting",
                    "default": false
                  },
                  "_timedCommitFrequency": {
                    "type": "number",
                    "title": "Frequency of automatic commits",
                    "description": "The frequency (in minutes) at which a 'commit' call should be made automatically. Set to 0 to disable automatic commits altogether",
                    "default": 10
                  },
                  "_maxCommitRetries": {
                    "type": "number",
                    "title": "Maximum number of commit retries",
                    "description": "If a 'commit' call fails, this setting controls how many times it should be retried before giving up and throwing an error",
                    "default": 5
                  },
                  "_commitRetryDelay": {
                    "type": "number",
                    "title": "Commit retry delay",
                    "description": "How much of a delay (in milliseconds) to leave between commit retries",
                    "default": 2000
                  },
                  "_suppressErrors": {
                    "type": "boolean",
                    "title": "Supress LMS errors",
                    "description": "If enabled, error messages will not be displayed when SCORM tracking problems occur",
                    "default": false
                  },
                  "_commitOnVisibilityChangeHidden": {
                    "type": "boolean",
                    "title": "Commit when browser tab is hidden",
                    "description": "If enabled, a 'commit' call will be made whenever the course window is hidden/minimised. Requires a browser that supports the 'visibilitychange' event",
                    "default": true
                  },
                  "_manifestIdentifier": {
                    "type": "string",
                    "title": "Manifest identifier",
                    "description": "Sets the 'identifier' attribute in the imsmanifest.xml",
                    "default": "adapt_manifest"
                  },
                  "_exitStateIfIncomplete": {
                    "type": "string",
                    "title": "Incomplete course exit status",
                    "default": "auto",
                    "enum": [
                      "auto",
                      "suspend",
                      "normal",
                      ""
                    ],
                    "_backboneForms": "Select"
                  },
                  "_exitStateIfComplete": {
                    "type": "string",
                    "title": "Complete course exit status",
                    "default": "auto",
                    "enum": [
                      "auto",
                      "suspend",
                      "normal",
                      ""
                    ],
                    "_backboneForms": "Select"
                  },
                  "_setCompletedWhenFailed": {
                    "type": "boolean",
                    "title": "Completed when failed",
                    "description": "If enabled, `cmi.completion_status` will be set to \"completed\" if the assessment is \"failed\". Only valid for SCORM 2004, where the logic for completion and success is separate.",
                    "default": true
                  },
                  "_maxCharLimitOverride": {
                    "type": "number",
                    "title": "Override value for maximum character limit on fill-in type answers",
                    "description": "If your LMS allows it, you may set a value to override the default character limit for fill-in answers (250 for SCORM2004, 255 for SCORM1.2).",
                    "default": 0
                  },
                  "_connectionTest": {
                    "type": "object",
                    "title": "Connection Test",
                    "default": {},
                    "properties": {
                      "_isEnabled": {
                        "type": "boolean",
                        "title": "Enable connection test",
                        "description": "Determines whether the connection should be tested.",
                        "default": true
                      },
                      "_testOnSetValue": {
                        "type": "boolean",
                        "title": "Test on set value",
                        "description": "Determines whether the connection should be tested for each call to set data on the LMS.",
                        "default": true
                      },
                      "_silentRetryLimit": {
                        "type": "number",
                        "title": "Silent Retry Limit",
                        "description": "The limit for silent retry attempts to establish a connection before raising an error.",
                        "default": 2
                      },
                      "_silentRetryDelay": {
                        "type": "number",
                        "title": "Silent Retry Delay",
                        "description": "The interval in milliseconds between silent connection retries.",
                        "default": 1000
                      }
                    }
                  },
                  "_uniqueInteractionIds": {
                    "type": "boolean",
                    "title": "Unique Interaction Ids",
                    "description": "If enabled, `cmi.interactions.n.id` will be prepended with an index, making the id unique. Some LMSes require unique ids, this will inhibit the grouping of interactions by id on the server-side.",
                    "default": false
                  }
                }
              },
              "_showCookieLmsResetButton": {
                "type": "boolean",
                "title": "Show reset button (scorm_test_harness.html only)",
                "description": "If enabled, a reset button will be available to relaunch the course and optionally clear tracking data (scorm_test_harness.html only).",
                "default": false
              },
              "_shouldPersistCookieLMSData": {
                "type": "boolean",
                "title": "Persist cookie data (scorm_test_harness.html only)",
                "description": "If enabled, the course data will persist over browser sessions (scorm_test_harness.html only).",
                "default": true
              }
            }
          }
        }
      },
      "spoor-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "spoor-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_spoor": {
            "type": "object",
            "title": "Spoor (SCORM)",
            "default": {},
            "properties": {
              "_messages": {
                "type": "object",
                "title": "Error messages",
                "description": "Optional object that can be used to amend/translate the error messages shown by the spoor extension",
                "default": {},
                "_backboneForms": {
                  "type": "CodeEditor",
                  "mode": "json"
                }
              }
            }
          }
        }
      },
      "tutor-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "tutor-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "tutor-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "tutor-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_extensions": {
                "type": "object",
                "default": {},
                "properties": {
                  "_tutor": {
                    "type": "object",
                    "title": "Tutor",
                    "default": {},
                    "properties": {
                      "hideFeedback": {
                        "type": "string",
                        "title": "Hide feedback",
                        "default": "Hide feedback",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "pageLevelProgress-article": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "pageLevelProgress-article",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": false
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          }
        }
      },
      "pageLevelProgress-block": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "pageLevelProgress-block",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": false
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          }
        }
      },
      "pageLevelProgress-contentobject": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "pageLevelProgress-contentobject",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_showPageCompletion": {
                "type": "boolean",
                "title": "Include overall page completion",
                "description": "Controls whether the progress calculations for this page are based on all components and the overall page - or only the components that are set to be displayed in Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              },
              "_excludeAssessments": {
                "type": "boolean",
                "title": "Exclude assessment completion",
                "description": "Controls whether the progress calculations will include assessments",
                "default": false
              }
            }
          }
        }
      },
      "pageLevelProgress-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "pageLevelProgress-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          }
        }
      },
      "pageLevelProgress-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "pageLevelProgress-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_extensions": {
                "type": "object",
                "default": {},
                "properties": {
                  "_pageLevelProgress": {
                    "type": "object",
                    "title": "Page Level Progress",
                    "default": {},
                    "properties": {
                      "pageLevelProgress": {
                        "type": "string",
                        "title": "Page Level Progress",
                        "default": "List of page sections and completion status. Select incomplete sections to jump directly to the content.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "pageLevelProgressIndicatorBar": {
                        "type": "string",
                        "title": "Page Level Progress indicator bar",
                        "default": "Page progress. {{percentageComplete}}%. Open page sections.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "pageLevelProgressMenuBar": {
                        "type": "string",
                        "title": "Page Level Progress menu bar",
                        "default": "Page completion {{percentageComplete}}%",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "optionalContent": {
                        "type": "string",
                        "title": "Optional content",
                        "default": "Optional content",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_navOrder": {
                        "type": "number",
                        "title": "Navigation bar order",
                        "description": "Determines the order in which the page level progress is displayed in the navigation bar. Negative numbers (e.g. -100) are left-aligned. Positive numbers (e.g. 100) are right-aligned.",
                        "default": 90
                      },
                      "_navTooltip": {
                        "type": "object",
                        "title": "Page Level Progress navigation tooltip",
                        "properties": {
                          "_isEnabled": {
                            "type": "boolean",
                            "title": "Enable tooltip for navigation button",
                            "default": true
                          },
                          "text": {
                            "type": "string",
                            "title": "",
                            "default": "Page progress",
                            "_adapt": {
                              "translatable": true
                            }
                          }
                        }
                      },
                      "_showLabel": {
                        "type": "boolean",
                        "title": "Enable navigation bar button label",
                        "default": true
                      },
                      "navLabel": {
                        "type": "string",
                        "title": "Navigation bar button label",
                        "default": "Page Progress",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_drawerPosition": {
                        "type": "string",
                        "default": "auto",
                        "title": "Drawer position",
                        "description": "Determines the starting position of the drawer to open",
                        "enum": [
                          "auto",
                          "left",
                          "right"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_showPageCompletion": {
                "type": "boolean",
                "title": "Include overall page completion",
                "description": "Controls whether the progress calculations are based on all components - or only those that are set to be displayed in Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              },
              "_isShownInNavigationBar": {
                "type": "boolean",
                "title": "Show progress in the navigation bar",
                "default": true
              },
              "_showAtCourseLevel": {
                "type": "boolean",
                "title": "Display all content objects and the current page components",
                "description": "Controls whether to display all content objects and the current page components together, or just the current page components",
                "default": false
              }
            }
          }
        }
      },
      "trickle-block": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "trickle-block",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_trickle": {
            "type": "object",
            "title": "Trickle",
            "default": {},
            "required": [
              "_scrollDuration"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Trickle",
                "default": false
              },
              "_isInherited": {
                "type": "boolean",
                "title": "Inherit settings from parent article",
                "default": false
              },
              "_autoScroll": {
                "type": "boolean",
                "title": "Scroll automatically",
                "default": false
              },
              "_scrollDuration": {
                "type": "number",
                "title": "Scroll duration",
                "description": "Duration of the scroll animation in milliseconds",
                "default": 500
              },
              "_scrollTo": {
                "type": "string",
                "title": "Scroll target",
                "description": "Set how trickle scrolls",
                "default": "@block +1"
              },
              "_completionAttribute": {
                "type": "string",
                "title": "Completion attribute",
                "description": "Set which attribute is used to determine completion",
                "default": "_isComplete",
                "enum": [
                  "_isInteractionComplete",
                  "_isComplete"
                ],
                "_backboneForms": "Select"
              },
              "_button": {
                "type": "object",
                "title": "Button",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Add Trickle button",
                    "default": true
                  },
                  "_styleBeforeCompletion": {
                    "type": "string",
                    "title": "Visibility before completion",
                    "default": "hidden",
                    "enum": [
                      "hidden",
                      "visible",
                      "disabled"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_styleAfterClick": {
                    "type": "string",
                    "title": "Visibility after completion",
                    "default": "hidden",
                    "enum": [
                      "hidden",
                      "visible",
                      "disabled"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_isFullWidth": {
                    "type": "boolean",
                    "title": "Make full width",
                    "default": true
                  },
                  "_autoHide": {
                    "type": "boolean",
                    "title": "Hide button when no longer in view",
                    "description": "Hides the button when it scrolls from view; not recommended for use in courses that need to be screenreader compatible",
                    "default": false
                  },
                  "_showEndOfPage": {
                    "type": "boolean",
                    "title": "Show end of page button",
                    "default": true
                  },
                  "_className": {
                    "type": "string",
                    "title": "Custom classes",
                    "default": ""
                  },
                  "_hasIcon": {
                    "type": "boolean",
                    "title": "Enable icon",
                    "description": "Displays an icon alongside, or in place of, the Trickle button text. Default icon is a small downwards arrow",
                    "default": false
                  },
                  "text": {
                    "type": "string",
                    "title": "Default button text",
                    "default": "Continue",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Default button ARIA label",
                    "default": "Continue",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "startText": {
                    "type": "string",
                    "title": "First button text",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Begin",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "startAriaLabel": {
                    "type": "string",
                    "title": "First button ARIA label",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Begin",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "finalText": {
                    "type": "string",
                    "title": "Final button text",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Finish",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "finalAriaLabel": {
                    "type": "string",
                    "title": "Final button ARIA label",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Finish",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "_component": {
                    "type": "string",
                    "title": "Trickle plugin",
                    "default": "trickle-button"
                  }
                }
              },
              "_stepLocking": {
                "type": "object",
                "title": "Step locking",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Hide subsequent content",
                    "default": true
                  },
                  "_isCompletionRequired": {
                    "type": "boolean",
                    "title": "Require content to be completed",
                    "default": true
                  },
                  "_isLockedOnRevisit": {
                    "type": "boolean",
                    "title": "Reset state on revisit",
                    "default": false
                  }
                }
              }
            }
          }
        }
      },
      "trickle-course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "trickle-course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_globals": {
            "type": "object",
            "default": {},
            "properties": {
              "_extensions": {
                "type": "object",
                "default": {},
                "properties": {
                  "_trickle": {
                    "type": "object",
                    "title": "Trickle",
                    "default": {},
                    "properties": {
                      "incompleteContent": {
                        "type": "string",
                        "title": "Incomplete content",
                        "default": "There is incomplete content above. You must complete this before you can proceed through the course.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "trickle-config": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "trickle-config",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_trickle": {
            "type": "object",
            "title": "Trickle",
            "default": {},
            "properties": {
              "_logState": {
                "type": "boolean",
                "title": "Log state",
                "default": false,
                "description": "Controls whether the Trickle extension logs its state to the browser console."
              },
              "_completionAttribute": {
                "type": "string",
                "title": "Completion attribute",
                "description": "Set which attribute is used to determine completion",
                "default": "_isComplete",
                "enum": [
                  "_isInteractionComplete",
                  "_isComplete"
                ],
                "_backboneForms": "Select"
              }
            }
          }
        }
      },
      "trickle-article": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "trickle-article",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_trickle": {
            "type": "object",
            "title": "Trickle",
            "default": {},
            "required": [
              "_scrollDuration"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Trickle",
                "default": false
              },
              "_autoScroll": {
                "type": "boolean",
                "title": "Scroll automatically",
                "default": false
              },
              "_scrollDuration": {
                "type": "number",
                "title": "Scroll duration",
                "description": "Duration of the scroll animation in milliseconds",
                "default": 500
              },
              "_onChildren": {
                "type": "boolean",
                "title": "Enable on child blocks",
                "description": "Set to false on the article to use trickle at article level",
                "default": false
              },
              "_scrollTo": {
                "type": "string",
                "title": "Scroll target",
                "description": "Set how trickle scrolls",
                "default": "@block +1"
              },
              "_completionAttribute": {
                "type": "string",
                "title": "Completion attribute",
                "description": "Set which attribute is used to determine completion",
                "default": "_isComplete",
                "enum": [
                  "_isInteractionComplete",
                  "_isComplete"
                ],
                "_backboneForms": "Select"
              },
              "_button": {
                "type": "object",
                "title": "Button",
                "default": {},
                "required": [
                  "_styleBeforeCompletion",
                  "_styleAfterClick"
                ],
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Add Trickle button",
                    "default": false
                  },
                  "_styleBeforeCompletion": {
                    "type": "string",
                    "title": "Visibility before completion",
                    "default": "hidden",
                    "enum": [
                      "hidden",
                      "visible",
                      "disabled"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_styleAfterClick": {
                    "type": "string",
                    "title": "Visibility after completion",
                    "default": "hidden",
                    "enum": [
                      "hidden",
                      "visible",
                      "disabled"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_isFullWidth": {
                    "type": "boolean",
                    "title": "Make full width",
                    "default": true
                  },
                  "_autoHide": {
                    "type": "boolean",
                    "title": "Hide button when no longer in view",
                    "description": "Hides the button when it scrolls from view; not recommended for use in courses that need to be screenreader compatible",
                    "default": false
                  },
                  "_showEndOfPage": {
                    "type": "boolean",
                    "title": "Show end of page button",
                    "default": true
                  },
                  "_className": {
                    "type": "string",
                    "title": "Custom classes",
                    "default": ""
                  },
                  "_hasIcon": {
                    "type": "boolean",
                    "title": "Enable icon",
                    "description": "Displays an icon alongside, or in place of, the Trickle button text. Default icon is a small downwards arrow",
                    "default": false
                  },
                  "text": {
                    "type": "string",
                    "title": "Default button text",
                    "default": "Continue",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Default button ARIA label",
                    "default": "Continue",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "startText": {
                    "type": "string",
                    "title": "First button text",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Begin",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "startAriaLabel": {
                    "type": "string",
                    "title": "First button ARIA label",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Begin",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "finalText": {
                    "type": "string",
                    "title": "Final button text",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Finish",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "finalAriaLabel": {
                    "type": "string",
                    "title": "Final button ARIA label",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Finish",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "_component": {
                    "type": "string",
                    "title": "Trickle plugin",
                    "default": "trickle-button"
                  }
                }
              },
              "_stepLocking": {
                "type": "object",
                "title": "Step locking",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Hide subsequent content",
                    "default": true
                  },
                  "_isCompletionRequired": {
                    "type": "boolean",
                    "title": "Require content to be completed",
                    "default": true
                  },
                  "_isLockedOnRevisit": {
                    "type": "boolean",
                    "title": "Reset state on revisit",
                    "default": false
                  }
                }
              }
            }
          }
        }
      },
      "tags": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "tags",
        "description": "Extra properties to define tags",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          }
        }
      },
      "role": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "role",
        "description": "A user role",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "shortName": {
            "description": "Short name for the role",
            "type": "string"
          },
          "displayName": {
            "description": "Human-readable representation of the role",
            "type": "string"
          },
          "extends": {
            "description": "The parent role that this role should inherit scopes from",
            "type": "string"
          },
          "scopes": {
            "description": "Scopes relevant to this role",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "shortName",
          "displayName",
          "scopes"
        ]
      },
      "asset": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "asset",
        "description": "Asset metadata",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "description": {
            "title": "Description",
            "description": "The asset description",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "description": "The asset title",
            "type": "string"
          },
          "url": {
            "title": "URL",
            "description": "If using an external asset, this should be the URL to the asset",
            "type": "string",
            "format": "uri"
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          }
        },
        "required": [
          "title",
          "description",
          "createdAt",
          "createdBy",
          "updatedAt"
        ]
      },
      "authored": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "authored",
        "description": "Adds properties relating to authoring",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt"
        ]
      },
      "contentplugin": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "contentplugin",
        "description": "An Adapt framework plugin",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "name": {
            "description": "Unique name for the plugin",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly name for the plugin",
            "type": "string"
          },
          "version": {
            "description": "Version number for the plugin",
            "type": "string"
          },
          "framework": {
            "description": "",
            "type": "string"
          },
          "isLocalInstall": {
            "description": "Whether the plugin has been installed locally (as opposed to with the CLI)",
            "type": "boolean"
          },
          "isEnabled": {
            "description": "",
            "type": "boolean",
            "default": true
          },
          "type": {
            "description": "",
            "type": "string"
          },
          "targetAttribute": {
            "description": "",
            "type": "string"
          },
          "description": {
            "description": "",
            "type": "string"
          },
          "pluginDependencies": {
            "description": "",
            "type": "object"
          },
          "isAddedByDefault": {
            "description": "Whether the plugin should be added by default for new courses",
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "framework",
          "name",
          "type",
          "version",
          "isLocalInstall"
        ]
      },
      "defaultplugins": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "defaultplugins",
        "description": "Defines whether plugins should be added as default",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "isAddedByDefault": {
            "description": "Whether the plugin should be added by default for new courses",
            "type": "boolean",
            "default": false
          }
        }
      },
      "user": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "user",
        "description": "A system user",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "email": {
            "description": "Email address for the user",
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "description": "First name of the user",
            "type": "string",
            "default": "Adapt"
          },
          "lastName": {
            "description": "Last name of the user",
            "type": "string",
            "default": "User"
          },
          "roles": {
            "description": "Roles assigned to this user",
            "type": "array",
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "default": []
          }
        },
        "required": [
          "email",
          "authType"
        ]
      },
      "config": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "config",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type",
            "default": "config"
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_enabledPlugins": {
            "type": "array",
            "title": "Enabled plugins",
            "default": []
          },
          "_theme": {
            "type": "string",
            "title": "Theme",
            "default": "adapt-contrib-vanilla"
          },
          "_menu": {
            "type": "string",
            "title": "Menu",
            "default": "adapt-contrib-boxMenu"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id"
          },
          "_completionCriteria": {
            "type": "object",
            "title": "Completion criteria",
            "default": {},
            "properties": {
              "_requireContentCompleted": {
                "type": "boolean",
                "title": "Require all course content to be completed",
                "default": true
              },
              "_requireAssessmentCompleted": {
                "type": "boolean",
                "title": "Require all assessments to be completed",
                "default": false
              },
              "_submitOnEveryAssessmentAttempt": {
                "type": "boolean",
                "title": "Submit completion on every assessment attempt",
                "description": "If enabled and the course completion criteria is met, the completion status will be reported every time the assessment is completed (regardless of whether the user passes or fails)",
                "default": false
              },
              "_shouldSubmitScore": {
                "type": "boolean",
                "title": "Submit score to LMS",
                "description": "If enabled, the score attained in any assessment attempt will be reported (regardless of whether the user passes or fails)",
                "default": false
              }
            }
          },
          "_defaultLanguage": {
            "type": "string",
            "title": "Default language code",
            "default": "en"
          },
          "_defaultDirection": {
            "type": "string",
            "title": "Default text direction",
            "default": "ltr",
            "enum": [
              "ltr",
              "rtl"
            ],
            "_backboneForms": "Select"
          },
          "_accessibility": {
            "type": "object",
            "title": "Accessibility",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable accessibility support",
                "default": true
              },
              "_isSkipNavigationEnabled": {
                "type": "boolean",
                "title": "Add link to skip navigation",
                "description": "Adds a link to the start of the page to allow assistive technology users to skip over the navigation and straight into to the page content",
                "default": true
              },
              "_ariaLevels": {
                "type": "object",
                "title": "Default ARIA levels",
                "description": "Defines what value to assign to the aria-level attribute for the various elements of Adapt",
                "default": {},
                "properties": {
                  "_menu": {
                    "type": "string",
                    "title": "Menu",
                    "default": "1"
                  },
                  "_menuGroup": {
                    "type": "string",
                    "title": "Menu group",
                    "default": "@menu+1"
                  },
                  "_menuItem": {
                    "type": "string",
                    "title": "Menu item",
                    "description": "This will need to be changed to 3 if menu groups are being used and A11Y support is required",
                    "default": "@menu+1"
                  },
                  "_page": {
                    "type": "string",
                    "title": "Page",
                    "default": "1"
                  },
                  "_article": {
                    "type": "string",
                    "title": "Article",
                    "default": "@page+1"
                  },
                  "_block": {
                    "type": "string",
                    "title": "Block",
                    "default": "@article+1"
                  },
                  "_component": {
                    "type": "string",
                    "title": "Component",
                    "default": "@block+1"
                  },
                  "_componentItem": {
                    "type": "string",
                    "title": "Component item",
                    "default": "@component+1"
                  },
                  "_notify": {
                    "type": "string",
                    "title": "Notify popup title",
                    "default": "1"
                  }
                }
              },
              "_options": {
                "type": "object",
                "title": "Advanced options",
                "description": "Optional object that can be used to customize the accessibility behaviour",
                "default": {},
                "_backboneForms": {
                  "type": "CodeEditor",
                  "mode": "json"
                }
              }
            }
          },
          "_fixes": {
            "type": "object",
            "title": "Miscellaneous fixes",
            "description": "Optional object that can be used to customize the application of fixes",
            "default": {
              "_imgLazyLoad": true
            },
            "_backboneForms": {
              "type": "CodeEditor",
              "mode": "json"
            }
          },
          "screenSize": {
            "type": "object",
            "title": "Device breakpoints",
            "default": {},
            "properties": {
              "small": {
                "type": "number",
                "title": "Small",
                "description": "Pixel width for the start of the small breakpoint, e.g. cellphones",
                "default": 0
              },
              "medium": {
                "type": "number",
                "title": "Medium",
                "description": "Pixel width for the start of the medium breakpoint, e.g. tablet devices",
                "default": 720
              },
              "large": {
                "type": "number",
                "title": "Large",
                "description": "Pixel width for the start of the large breakpoint, e.g. laptop/desktop computers",
                "default": 960
              },
              "xlarge": {
                "type": "number",
                "title": "Extra Large",
                "description": "Pixel width for the start of the extra large breakpoint, e.g. hd laptop/desktop computers",
                "default": 1280
              }
            }
          },
          "_questionWeight": {
            "type": "number",
            "title": "Default question weight",
            "default": 1,
            "_adapt": {
              "isSetting": true
            }
          },
          "_drawer": {
            "type": "object",
            "title": "Drawer animation",
            "default": {},
            "properties": {
              "_showEasing": {
                "type": "string",
                "title": "Opening easing function",
                "default": "easeOutQuart",
                "enum": [
                  "easeInSine",
                  "easeOutSine",
                  "easeInOutSine",
                  "easeInQuad",
                  "easeOutQuad",
                  "easeInOutQuad",
                  "easeInCubic",
                  "easeOutCubic",
                  "easeInOutCubic",
                  "easeInQuart",
                  "easeOutQuart",
                  "easeInOutQuart",
                  "easeInQuint",
                  "easeOutQuint",
                  "easeInOutQuint",
                  "easeInExpo",
                  "easeOutExpo",
                  "easeInOutExpo",
                  "easeInCirc",
                  "easeOutCirc",
                  "easeInOutCirc",
                  "easeInBack",
                  "easeOutBack",
                  "easeInOutBack",
                  "easeInElastic",
                  "easeOutElastic",
                  "easeInOutElastic",
                  "easeInBounce",
                  "easeOutBounce",
                  "easeInOutBounce"
                ],
                "_backboneForms": "Select"
              },
              "_hideEasing": {
                "type": "string",
                "title": "Closing easing function",
                "default": "easeInQuart",
                "enum": [
                  "easeInSine",
                  "easeOutSine",
                  "easeInOutSine",
                  "easeInQuad",
                  "easeOutQuad",
                  "easeInOutQuad",
                  "easeInCubic",
                  "easeOutCubic",
                  "easeInOutCubic",
                  "easeInQuart",
                  "easeOutQuart",
                  "easeInOutQuart",
                  "easeInQuint",
                  "easeOutQuint",
                  "easeInOutQuint",
                  "easeInExpo",
                  "easeOutExpo",
                  "easeInOutExpo",
                  "easeInCirc",
                  "easeOutCirc",
                  "easeInOutCirc",
                  "easeInBack",
                  "easeOutBack",
                  "easeInOutBack",
                  "easeInElastic",
                  "easeOutElastic",
                  "easeInOutElastic",
                  "easeInBounce",
                  "easeOutBounce",
                  "easeInOutBounce"
                ],
                "_backboneForms": "Select"
              },
              "_duration": {
                "type": "number",
                "title": "Duration",
                "default": 400
              },
              "_position": {
                "type": "string",
                "title": "Position",
                "default": "auto",
                "enum": [
                  "auto",
                  "left",
                  "right"
                ]
              }
            },
            "_adapt": {
              "isSetting": false
            }
          },
          "_generateSourcemap": {
            "type": "boolean",
            "title": "Generate source maps",
            "description": "Allows the course JavaScript & CSS to be debugged via the browser's developer tools",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_forceRouteLocking": {
            "type": "boolean",
            "title": "Enforce route locking",
            "description": "If locking is enabled, this setting prevents navigating to locked routes",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_disableAnimationFor": {
            "type": "array",
            "title": "Disable animation on selectors",
            "description": "Allows you to disable some animations (e.g. the drawer close animation) on platform(s) where they are not performing well, using CSS selectors to target the relevant platform(s) via the classes on the HTML element",
            "default": [],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "List"
          },
          "_logging": {
            "type": "object",
            "title": "Logging",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable logging",
                "default": true
              },
              "_level": {
                "type": "string",
                "title": "Log level",
                "default": "info",
                "enum": [
                  "debug",
                  "info",
                  "warn",
                  "error",
                  "fatal"
                ],
                "_backboneForms": "Select"
              },
              "_console": {
                "type": "boolean",
                "title": "Log to browser console",
                "default": true
              },
              "_warnFirstOnly": {
                "type": "boolean",
                "title": "Suppress subsequent deprecation warnings",
                "default": true
              }
            }
          },
          "_scrollingContainer": {
            "type": "object",
            "title": "Inline frame support",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable fixes",
                "default": true
              },
              "_limitToSelector": {
                "type": "string",
                "title": "Limit to selector",
                "description": "CSS selector to match against the HTML element when determining whether this should be active or not",
                "default": ""
              }
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_themePreset": {
            "type": "string",
            "isObjectId": true,
            "title": "Theme preset"
          },
          "build": {
            "type": "object",
            "title": "Support for setting the course build type",
            "properties": {
              "strictMode": {
                "type": "boolean",
                "default": true,
                "inputType": "Checkbox",
                "title": "Use strict mode?",
                "description": "Strict mode improves performance by tightly restricting the declaration of variables inside code blocks and closures which may cause some older code to stop working. Please leave this at true unless you are experiencing issue with old plugins or third party libraries."
              },
              "targets": {
                "type": "string",
                "title": "Supported browsers override",
                "description": "Set the browsers that are supported. Overwrites the framework defaults if not empty. Current defaults are: 'last 2 chrome versions, last 2 firefox versions, last 2 safari versions, last 2 edge versions, last 2 ios_saf versions, last 2 and_chr versions, firefox esr'",
                "default": ""
              }
            }
          },
          "_languagePicker": {
            "type": "object",
            "title": "Language Picker",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Language Picker",
                "description": "Controls whether the Language Picker extension is enabled or disabled",
                "default": false
              },
              "title": {
                "type": "string",
                "title": "Browser window title",
                "description": "Text to be shown in the browser's title bar when the language picker is displayed",
                "default": ""
              },
              "displayTitle": {
                "type": "string",
                "title": "Language Picker title",
                "description": "Header text for the Language Picker",
                "default": ""
              },
              "body": {
                "type": "string",
                "title": "Language Picker body",
                "description": "Introductory or explanatory text for the Language Picker",
                "default": ""
              },
              "_showOnCourseLoad": {
                "type": "boolean",
                "title": "Show on course load",
                "description": "Controls whether the Language Picker should be displayed on course load or not",
                "default": true
              },
              "_languagePickerIconClass": {
                "type": "string",
                "title": "Icon class",
                "description": "Your default options here are: icon-globe, icon-language-1, icon-language-2",
                "default": "icon-language-2"
              },
              "_restoreStateOnLanguageChange": {
                "type": "boolean",
                "title": "Restore course state on language change",
                "description": "Determines whether or not the language picker will try to restore the 'state' of the course when the user changes language. It is advised that you only enable this setting if all course languages have exactly the same structure; if they do not, some loss of tracking data will occur. If this setting is disabled, tracking data will be cleared when the user switches language - the 'Confirm Message' should be used to warn the user of this",
                "default": false
              },
              "_classes": {
                "type": "string",
                "title": "Custom classes",
                "description": "",
                "default": ""
              },
              "_languages": {
                "type": "array",
                "title": "Languages",
                "items": {
                  "type": "object",
                  "properties": {
                    "_language": {
                      "type": "string",
                      "title": "Language code",
                      "description": "This text must match the name of the language-specific folder located in the course root, e.g. en, fr, es",
                      "default": ""
                    },
                    "_direction": {
                      "type": "string",
                      "title": "Text direction",
                      "description": "",
                      "default": "ltr",
                      "enum": [
                        "ltr",
                        "rtl"
                      ],
                      "_backboneForms": "Select"
                    },
                    "_isDisabled": {
                      "type": "boolean",
                      "title": "Disable selection of this language",
                      "description": "Allows you to disable selection of this language. This can be useful in situations where localisation into a particular language has not yet been completed",
                      "default": false
                    },
                    "displayName": {
                      "type": "string",
                      "title": "Language name",
                      "description": "A user friendly name for the language, e.g. English, Français, Español",
                      "default": ""
                    },
                    "warningTitle": {
                      "type": "string",
                      "title": "Confirm Title",
                      "description": "This text appears as the header of the dialog confirming the learner's intent to change languages",
                      "default": ""
                    },
                    "warningMessage": {
                      "type": "string",
                      "title": "Confirm body",
                      "description": "This text appears as the body of the dialog confirming the learner's intent to change languages.  Note: the warning message should indicate that any progress will be lost when the language is switched",
                      "default": ""
                    },
                    "_buttons": {
                      "type": "object",
                      "title": "Prompt buttons",
                      "default": {},
                      "required": [
                        "yes",
                        "no"
                      ],
                      "properties": {
                        "yes": {
                          "type": "string",
                          "title": "Confirm button text",
                          "default": "Yes"
                        },
                        "no": {
                          "type": "string",
                          "title": "Cancel button text",
                          "default": "No"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "_spoor": {
            "type": "object",
            "title": "Spoor (SCORM)",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable SCORM support",
                "description": "If enabled, the plugin will try to find and track to a SCORM conformant LMS. Uncheck to switch off SCORM tracking",
                "default": true
              },
              "_tracking": {
                "type": "object",
                "title": "Tracking",
                "default": {},
                "properties": {
                  "_shouldStoreResponses": {
                    "type": "boolean",
                    "title": "Store question state",
                    "description": "If enabled, the user's responses to questions will be saved and restored in each session. Note: this setting should be enabled in the majority of cases",
                    "default": true
                  },
                  "_shouldStoreAttempts": {
                    "type": "boolean",
                    "title": "Store question attempt states",
                    "description": "If enabled, a history of the user's responses to questions will be saved and restored in each session. Note: this setting should be disabled in the majority of cases",
                    "default": false
                  },
                  "_shouldRecordInteractions": {
                    "type": "boolean",
                    "title": "Record interactions",
                    "description": "If enabled, the course will record the user's responses to questions to the cmi.interactions SCORM data fields",
                    "default": true
                  }
                }
              },
              "_reporting": {
                "type": "object",
                "title": "Reporting",
                "default": {},
                "properties": {
                  "_onTrackingCriteriaMet": {
                    "type": "string",
                    "title": "Tracking success status",
                    "description": "What status to report back to the LMS when the tracking criteria are met",
                    "default": "completed",
                    "enum": [
                      "completed",
                      "passed",
                      "failed",
                      "incomplete"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_onAssessmentFailure": {
                    "type": "string",
                    "title": "Assessment failure status",
                    "description": "What status to report back to the LMS when the assessment is failed",
                    "default": "incomplete",
                    "enum": [
                      "completed",
                      "failed",
                      "incomplete"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_resetStatusOnLanguageChange": {
                    "type": "boolean",
                    "title": "Reset status on language change",
                    "description": "If enabled, the the course status will be reset to 'incomplete' when the user changes the course language",
                    "default": false
                  }
                }
              },
              "_advancedSettings": {
                "type": "object",
                "title": "Advanced settings",
                "default": {},
                "required": [
                  "_manifestIdentifier"
                ],
                "properties": {
                  "_scormVersion": {
                    "type": "string",
                    "title": "SCORM version",
                    "description": "The SCORM standard to use - SCORM 1.2 or SCORM 2004 4th Edition",
                    "default": "1.2",
                    "enum": [
                      "1.2",
                      "2004"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_showDebugWindow": {
                    "type": "boolean",
                    "title": "Enable SCORM debug window",
                    "description": "If enabled, a popup window will be shown on course launch that gives detailed information about what SCORM calls are being made. This can be very useful for debugging SCORM issues. Note that this popup window will appear automatically if the SCORM code encounters an error, even if this is set to false",
                    "default": false
                  },
                  "_commitOnStatusChange": {
                    "type": "boolean",
                    "title": "Commit data on status change",
                    "description": "If enabled, a 'commit' call will be made any time the lesson_status is changed",
                    "default": true
                  },
                  "_commitOnAnyChange": {
                    "type": "boolean",
                    "title": "Commit data on any change",
                    "description": "If enabled, a 'commit' (save all data) call will be made any time a value is changed. Note that enabling this setting may have a detrimental impact on the server and should only be used if absolutely necessary and only after careful load testing. Consider trying a lower value for 'Frequency of automatic commits' before changing this setting",
                    "default": false
                  },
                  "_timedCommitFrequency": {
                    "type": "number",
                    "title": "Frequency of automatic commits",
                    "description": "The frequency (in minutes) at which a 'commit' call should be made automatically. Set to 0 to disable automatic commits altogether",
                    "default": 10
                  },
                  "_maxCommitRetries": {
                    "type": "number",
                    "title": "Maximum number of commit retries",
                    "description": "If a 'commit' call fails, this setting controls how many times it should be retried before giving up and throwing an error",
                    "default": 5
                  },
                  "_commitRetryDelay": {
                    "type": "number",
                    "title": "Commit retry delay",
                    "description": "How much of a delay (in milliseconds) to leave between commit retries",
                    "default": 2000
                  },
                  "_suppressErrors": {
                    "type": "boolean",
                    "title": "Supress LMS errors",
                    "description": "If enabled, error messages will not be displayed when SCORM tracking problems occur",
                    "default": false
                  },
                  "_commitOnVisibilityChangeHidden": {
                    "type": "boolean",
                    "title": "Commit when browser tab is hidden",
                    "description": "If enabled, a 'commit' call will be made whenever the course window is hidden/minimised. Requires a browser that supports the 'visibilitychange' event",
                    "default": true
                  },
                  "_manifestIdentifier": {
                    "type": "string",
                    "title": "Manifest identifier",
                    "description": "Sets the 'identifier' attribute in the imsmanifest.xml",
                    "default": "adapt_manifest"
                  },
                  "_exitStateIfIncomplete": {
                    "type": "string",
                    "title": "Incomplete course exit status",
                    "default": "auto",
                    "enum": [
                      "auto",
                      "suspend",
                      "normal",
                      ""
                    ],
                    "_backboneForms": "Select"
                  },
                  "_exitStateIfComplete": {
                    "type": "string",
                    "title": "Complete course exit status",
                    "default": "auto",
                    "enum": [
                      "auto",
                      "suspend",
                      "normal",
                      ""
                    ],
                    "_backboneForms": "Select"
                  },
                  "_setCompletedWhenFailed": {
                    "type": "boolean",
                    "title": "Completed when failed",
                    "description": "If enabled, `cmi.completion_status` will be set to \"completed\" if the assessment is \"failed\". Only valid for SCORM 2004, where the logic for completion and success is separate.",
                    "default": true
                  },
                  "_maxCharLimitOverride": {
                    "type": "number",
                    "title": "Override value for maximum character limit on fill-in type answers",
                    "description": "If your LMS allows it, you may set a value to override the default character limit for fill-in answers (250 for SCORM2004, 255 for SCORM1.2).",
                    "default": 0
                  },
                  "_connectionTest": {
                    "type": "object",
                    "title": "Connection Test",
                    "default": {},
                    "properties": {
                      "_isEnabled": {
                        "type": "boolean",
                        "title": "Enable connection test",
                        "description": "Determines whether the connection should be tested.",
                        "default": true
                      },
                      "_testOnSetValue": {
                        "type": "boolean",
                        "title": "Test on set value",
                        "description": "Determines whether the connection should be tested for each call to set data on the LMS.",
                        "default": true
                      },
                      "_silentRetryLimit": {
                        "type": "number",
                        "title": "Silent Retry Limit",
                        "description": "The limit for silent retry attempts to establish a connection before raising an error.",
                        "default": 2
                      },
                      "_silentRetryDelay": {
                        "type": "number",
                        "title": "Silent Retry Delay",
                        "description": "The interval in milliseconds between silent connection retries.",
                        "default": 1000
                      }
                    }
                  },
                  "_uniqueInteractionIds": {
                    "type": "boolean",
                    "title": "Unique Interaction Ids",
                    "description": "If enabled, `cmi.interactions.n.id` will be prepended with an index, making the id unique. Some LMSes require unique ids, this will inhibit the grouping of interactions by id on the server-side.",
                    "default": false
                  }
                }
              },
              "_showCookieLmsResetButton": {
                "type": "boolean",
                "title": "Show reset button (scorm_test_harness.html only)",
                "description": "If enabled, a reset button will be available to relaunch the course and optionally clear tracking data (scorm_test_harness.html only).",
                "default": false
              },
              "_shouldPersistCookieLMSData": {
                "type": "boolean",
                "title": "Persist cookie data (scorm_test_harness.html only)",
                "description": "If enabled, the course data will persist over browser sessions (scorm_test_harness.html only).",
                "default": true
              }
            }
          },
          "_trickle": {
            "type": "object",
            "title": "Trickle",
            "default": {},
            "properties": {
              "_logState": {
                "type": "boolean",
                "title": "Log state",
                "default": false,
                "description": "Controls whether the Trickle extension logs its state to the browser console."
              },
              "_completionAttribute": {
                "type": "string",
                "title": "Completion attribute",
                "description": "Set which attribute is used to determine completion",
                "default": "_isComplete",
                "enum": [
                  "_isInteractionComplete",
                  "_isComplete"
                ],
                "_backboneForms": "Select"
              }
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt"
        ]
      },
      "content": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "content",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the element title that describes the completion state of the element.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt"
        ]
      },
      "localauthuser": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "localauthuser",
        "description": "Local authentication user",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "email": {
            "description": "Email address for the user",
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "description": "First name of the user",
            "type": "string",
            "default": "Adapt"
          },
          "lastName": {
            "description": "Last name of the user",
            "type": "string",
            "default": "User"
          },
          "roles": {
            "description": "Roles assigned to this user",
            "type": "array",
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "default": []
          },
          "failedLoginAttempts": {
            "description": "The number of failed login attempts",
            "type": "number",
            "default": 0
          }
        },
        "required": [
          "email",
          "authType",
          "password"
        ]
      },
      "article": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "article",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the element title that describes the completion state of the element.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_requireCompletionOf": {
            "type": "number",
            "title": "Number of blocks required for completion",
            "description": "The number of blocks within this article the learner must complete in order for this article to be set as completed. A value of -1 requires all of them to be completed",
            "default": -1,
            "_adapt": {
              "isSetting": true
            }
          },
          "_assessment": {
            "type": "object",
            "title": "Assessment",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Make this article an assessment",
                "default": false
              },
              "_id": {
                "type": "string",
                "title": "Assessment ID",
                "description": "Unique name for the assessment. This is required by other plugins such as the 'Assessment Results' component to identify the assessment and display its variables",
                "default": ""
              },
              "_attempts": {
                "type": "number",
                "title": "Allowed attempts",
                "description": "Controls the number of attempts the user is allowed to have on this assessment. Set to -1 (or 0) to allow infinite attempts",
                "default": -1
              },
              "_isPercentageBased": {
                "type": "boolean",
                "title": "Set pass mark as percentage",
                "description": "Determines whether the pass mark values should be treated as percentages (default) or as the raw score and correctness",
                "default": true
              },
              "_scoreToPass": {
                "type": "number",
                "title": "Pass mark",
                "description": "The minimum score required by the learner to pass the assessment or the minimum percentage score if percentage-based",
                "default": 60
              },
              "_correctToPass": {
                "type": "number",
                "title": "Correct pass mark",
                "description": "The minimum number of correct questions required by the learner to pass the assessment or the minimum percentage correct if percentage-based",
                "default": 60
              },
              "_includeInTotalScore": {
                "type": "boolean",
                "title": "Include score in course total",
                "description": "Determines if the score from this assessment should be sent to the LMS. The score sent is a percentage according to 'Assessment weight'",
                "default": true
              },
              "_assessmentWeight": {
                "type": "number",
                "title": "Assessment weight",
                "description": "If there are multiple assessments in the course, this value controls the proportion of the LMS score which is attributed to this assessment, i.e. 1 equals 100%, 0.5 is 50%, etc.",
                "default": 1
              },
              "_suppressMarking": {
                "type": "boolean",
                "title": "Suppress marking until complete",
                "description": "Determines whether question marking should be delayed until completion of the assessment or until all attempts have been exhausted",
                "default": false
              },
              "_isResetOnRevisit": {
                "type": "boolean",
                "title": "Reset state on revisit",
                "description": "Controls whether the assessment should be reset automatically (up to the number of available attempts) when a user revisits the page",
                "default": false
              },
              "_allowResetIfPassed": {
                "type": "boolean",
                "title": "Allow retry once passed",
                "description": "Controls whether the assessment may be reset after it has been passed (whilst there are attempts remaining)",
                "default": false
              },
              "_scrollToOnReset": {
                "type": "boolean",
                "title": "Scroll to assessment article on reset",
                "description": "Controls whether to scroll to the assessment after reset or to stay at the top of the assessment page",
                "default": false
              },
              "_randomisation": {
                "type": "object",
                "title": "Randomised blocks",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Enable",
                    "description": "If randomisation is enabled, a specified number of blocks will be displayed to the user in a random order",
                    "default": false
                  },
                  "_blockCount": {
                    "type": "number",
                    "title": "Block count",
                    "description": "The number of blocks to present to the learner. Set to -1 (or 0) to display all blocks",
                    "default": -1
                  }
                }
              },
              "_banks": {
                "type": "object",
                "title": "Question banks",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Enable",
                    "description": "Enables associating blocks of question components with a 'bank', allowing questions to be grouped then rendered via the 'Question counts' property",
                    "default": false
                  },
                  "_split": {
                    "type": "string",
                    "title": "Question counts",
                    "description": "This is a comma-separated list of numbers corresponding to the number of questions to be drawn from each question bank. The position of the number in the list corresponds to the 'Bank ID' assigned, e.g. \"3,2\" would display three questions from Bank 1 and two from Bank 2",
                    "default": ""
                  },
                  "_randomisation": {
                    "type": "boolean",
                    "title": "Randomise question banks",
                    "description": "Controls whether the questions will be displayed in a random order",
                    "default": false
                  }
                }
              },
              "_questions": {
                "type": "object",
                "title": "Question overrides",
                "default": {},
                "properties": {
                  "_resetType": {
                    "type": "string",
                    "title": "Reset type",
                    "description": "Determines whether the question will register as completed when reset. When assigned a value of 'soft', the learner may continue to interact with it, but the complete attribute remains set to true. When assigned 'hard', complete is set to false, and the learner will be forced to complete it again if it is reset. For 'soft', when using trickle, please set the trickle Completion Attribute to `_isInteractionComplete'.",
                    "default": "hard",
                    "enum": [
                      "soft",
                      "hard"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_canShowFeedback": {
                    "type": "boolean",
                    "title": "Enable feedback",
                    "description": "Allows the user to view feedback on their answer",
                    "default": false
                  },
                  "_canShowMarking": {
                    "type": "boolean",
                    "title": "Enable marking",
                    "description": "Displays ticks and crosses on question completion",
                    "default": false
                  },
                  "_canShowModelAnswer": {
                    "type": "boolean",
                    "title": "Enable correct answer toggle",
                    "description": "Allows the user to view the 'model answer' should they answer the question incorrectly",
                    "default": false
                  }
                }
              }
            }
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the article title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the article body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the article instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_backgroundImage": {
                "type": "object",
                "title": "Background image",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Extra Large",
                    "description": "Extra large background image, e.g. hd laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_large": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Large",
                    "description": "Large background image, e.g. laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_medium": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Medium",
                    "description": "Medium background image, e.g. tablet devices",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_small": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Small",
                    "description": "Small background image, e.g. mobile / cellphones",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              },
              "_backgroundStyles": {
                "type": "object",
                "title": "Background image styles",
                "default": {},
                "properties": {
                  "_backgroundRepeat": {
                    "type": "string",
                    "title": "Repeat",
                    "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                    "default": "no-repeat",
                    "enum": [
                      "repeat",
                      "repeat-x",
                      "repeat-y",
                      "no-repeat"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundSize": {
                    "type": "string",
                    "title": "Size",
                    "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible. 100% 100%: Resize the background image to match the dimensions of the container",
                    "default": "cover",
                    "enum": [
                      "auto",
                      "cover",
                      "contain",
                      "100% 100%"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundPosition": {
                    "type": "string",
                    "title": "Position",
                    "description": "The first value is the horizontal position and the second value is the vertical",
                    "default": "center top",
                    "enum": [
                      "left top",
                      "left center",
                      "left bottom",
                      "center top",
                      "center center",
                      "center bottom",
                      "right top",
                      "right center",
                      "right bottom"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_responsiveClasses": {
                "type": "object",
                "title": "Responsive classes",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "title": "Extra large",
                    "description": "Extra large CSS class, e.g. hd laptop/desktop computers",
                    "default": ""
                  },
                  "_large": {
                    "type": "string",
                    "title": "Large",
                    "description": "Large CSS class, e.g. laptop/desktop computers",
                    "default": ""
                  },
                  "_medium": {
                    "type": "string",
                    "title": "Medium",
                    "description": "Medium CSS class, e.g. tablet devices",
                    "default": ""
                  },
                  "_small": {
                    "type": "string",
                    "title": "Small",
                    "description": "Small CSS class, e.g. mobile / cellphones",
                    "default": ""
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": false
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_trickle": {
            "type": "object",
            "title": "Trickle",
            "default": {},
            "required": [
              "_scrollDuration"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Trickle",
                "default": false
              },
              "_autoScroll": {
                "type": "boolean",
                "title": "Scroll automatically",
                "default": false
              },
              "_scrollDuration": {
                "type": "number",
                "title": "Scroll duration",
                "description": "Duration of the scroll animation in milliseconds",
                "default": 500
              },
              "_onChildren": {
                "type": "boolean",
                "title": "Enable on child blocks",
                "description": "Set to false on the article to use trickle at article level",
                "default": false
              },
              "_scrollTo": {
                "type": "string",
                "title": "Scroll target",
                "description": "Set how trickle scrolls",
                "default": "@block +1"
              },
              "_completionAttribute": {
                "type": "string",
                "title": "Completion attribute",
                "description": "Set which attribute is used to determine completion",
                "default": "_isComplete",
                "enum": [
                  "_isInteractionComplete",
                  "_isComplete"
                ],
                "_backboneForms": "Select"
              },
              "_button": {
                "type": "object",
                "title": "Button",
                "default": {},
                "required": [
                  "_styleBeforeCompletion",
                  "_styleAfterClick"
                ],
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Add Trickle button",
                    "default": false
                  },
                  "_styleBeforeCompletion": {
                    "type": "string",
                    "title": "Visibility before completion",
                    "default": "hidden",
                    "enum": [
                      "hidden",
                      "visible",
                      "disabled"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_styleAfterClick": {
                    "type": "string",
                    "title": "Visibility after completion",
                    "default": "hidden",
                    "enum": [
                      "hidden",
                      "visible",
                      "disabled"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_isFullWidth": {
                    "type": "boolean",
                    "title": "Make full width",
                    "default": true
                  },
                  "_autoHide": {
                    "type": "boolean",
                    "title": "Hide button when no longer in view",
                    "description": "Hides the button when it scrolls from view; not recommended for use in courses that need to be screenreader compatible",
                    "default": false
                  },
                  "_showEndOfPage": {
                    "type": "boolean",
                    "title": "Show end of page button",
                    "default": true
                  },
                  "_className": {
                    "type": "string",
                    "title": "Custom classes",
                    "default": ""
                  },
                  "_hasIcon": {
                    "type": "boolean",
                    "title": "Enable icon",
                    "description": "Displays an icon alongside, or in place of, the Trickle button text. Default icon is a small downwards arrow",
                    "default": false
                  },
                  "text": {
                    "type": "string",
                    "title": "Default button text",
                    "default": "Continue",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Default button ARIA label",
                    "default": "Continue",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "startText": {
                    "type": "string",
                    "title": "First button text",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Begin",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "startAriaLabel": {
                    "type": "string",
                    "title": "First button ARIA label",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Begin",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "finalText": {
                    "type": "string",
                    "title": "Final button text",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Finish",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "finalAriaLabel": {
                    "type": "string",
                    "title": "Final button ARIA label",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Finish",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "_component": {
                    "type": "string",
                    "title": "Trickle plugin",
                    "default": "trickle-button"
                  }
                }
              },
              "_stepLocking": {
                "type": "object",
                "title": "Step locking",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Hide subsequent content",
                    "default": true
                  },
                  "_isCompletionRequired": {
                    "type": "boolean",
                    "title": "Require content to be completed",
                    "default": true
                  },
                  "_isLockedOnRevisit": {
                    "type": "boolean",
                    "title": "Reset state on revisit",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt"
        ]
      },
      "block": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "block",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the element title that describes the completion state of the element.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_trackingId": {
            "type": "number",
            "title": "Tracking id",
            "default": 0
          },
          "layoutOptions": {
            "type": "array",
            "title": "Layout options",
            "default": [],
            "_adapt": {
              "editorOnly": true
            }
          },
          "_requireCompletionOf": {
            "type": "number",
            "title": "Number of components required for completion",
            "description": "The number of components within this block the learner must complete in order for this block to be set as completed. A value of -1 requires all of them to be completed",
            "default": -1,
            "_adapt": {
              "isSetting": true
            }
          },
          "_assessment": {
            "type": "object",
            "title": "Assessment",
            "default": {},
            "properties": {
              "_quizBankID": {
                "type": "number",
                "title": "Bank ID",
                "description": "Used to group blocks of question components into associated banks. This works in conjunction with the 'Question counts' property when question banks are in use",
                "default": 1,
                "_backboneForms": {
                  "editorAttrs": {
                    "step": 1,
                    "min": 1
                  }
                }
              }
            }
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the block title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the block body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the block instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_backgroundImage": {
                "type": "object",
                "title": "Background image",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Extra large",
                    "description": "Extra large background image, e.g. hd laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_large": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Large",
                    "description": "Large background image, e.g. laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_medium": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Medium",
                    "description": "Medium background image, e.g. tablet devices",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_small": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Small",
                    "description": "Small background image, e.g. mobile / cellphones",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              },
              "_backgroundStyles": {
                "type": "object",
                "title": "Background image styles",
                "default": {},
                "properties": {
                  "_backgroundRepeat": {
                    "type": "string",
                    "title": "Repeat",
                    "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                    "default": "no-repeat",
                    "enum": [
                      "repeat",
                      "repeat-x",
                      "repeat-y",
                      "no-repeat"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundSize": {
                    "type": "string",
                    "title": "Size",
                    "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible. 100% 100%: Resize the background image to match the dimensions of the container",
                    "default": "cover",
                    "enum": [
                      "auto",
                      "cover",
                      "contain",
                      "100% 100%"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundPosition": {
                    "type": "string",
                    "title": "Position",
                    "description": "The first value is the horizontal position and the second value is the vertical",
                    "default": "center top",
                    "enum": [
                      "left top",
                      "left center",
                      "left bottom",
                      "center top",
                      "center center",
                      "center bottom",
                      "right top",
                      "right center",
                      "right bottom"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_minimumHeights": {
                "type": "object",
                "title": "Block minimum height",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "number",
                    "title": "Extra large",
                    "description": "Minimum height should only be used in instances where the block height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. hd laptop/desktop computers",
                    "default": 0
                  },
                  "_large": {
                    "type": "number",
                    "title": "Large",
                    "description": "Minimum height should only be used in instances where the block height needs to be greater than the content e.g. to prevent a background image being cropped.For e.g. laptop/desktop computers",
                    "default": 0
                  },
                  "_medium": {
                    "type": "number",
                    "title": "Medium",
                    "description": "Minimum height should only be used in instances where the block height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. tablet devices",
                    "default": 0
                  },
                  "_small": {
                    "type": "number",
                    "title": "Small",
                    "description": "Minimum height should only be used in instances where the block height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. mobile / cellphones",
                    "default": 0
                  }
                }
              },
              "_responsiveClasses": {
                "type": "object",
                "title": "Responsive classes",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "title": "Extra large",
                    "description": "Extra large CSS class, e.g. hd laptop/desktop computers",
                    "default": ""
                  },
                  "_large": {
                    "type": "string",
                    "title": "Large",
                    "description": "Large CSS class, e.g. laptop/desktop computers",
                    "default": ""
                  },
                  "_medium": {
                    "type": "string",
                    "title": "Medium",
                    "description": "Medium CSS class, e.g. tablet devices",
                    "default": ""
                  },
                  "_small": {
                    "type": "string",
                    "title": "Small",
                    "description": "Small CSS class, e.g. mobile / cellphones",
                    "default": ""
                  }
                }
              },
              "_isDividerBlock": {
                "type": "boolean",
                "title": "Set this block as a divider",
                "description": "If enabled, applies a divider class to the block",
                "default": false
              },
              "_paddingTop": {
                "type": "string",
                "title": "Spacing top",
                "description": "Changes the value of the blocks top spacing. Double: Doubles the blocks top spacing. Standard: Retains the standard blocks top spacing. Half: Halves the blocks top spacing. Remove: Removes the blocks top spacing. The default value is `standard`.",
                "default": "standard",
                "enum": [
                  "double",
                  "standard",
                  "half",
                  "remove"
                ],
                "_backboneForms": "Select"
              },
              "_paddingBottom": {
                "type": "string",
                "title": "Spacing bottom",
                "description": "Changes the value of the blocks bottom spacing. Double: Doubles the blocks bottom spacing. Standard: Retains the standard blocks bottom spacing. Half: Halves the blocks bottom spacing. Remove: Removes the blocks bottom spacing. The default value is `standard`.",
                "default": "standard",
                "enum": [
                  "double",
                  "standard",
                  "half",
                  "remove"
                ],
                "_backboneForms": "Select"
              },
              "_componentVerticalAlignment": {
                "type": "string",
                "title": "Set the vertical alignment of the child component(s)",
                "description": "Defines the vertical alignment of the child component(s) in relation to the block. Top: Aligns descendents to the top of the block. Center: Aligns descendents to the center of the block. Bottom: Aligns descendents to the bottom of the block. The default alignment is `top`.",
                "default": "top",
                "enum": [
                  "top",
                  "center",
                  "bottom"
                ],
                "_backboneForms": "Select"
              },
              "_componentHorizontalAlignment": {
                "type": "string",
                "title": "Set the horizontal alignment of the child component(s)",
                "description": "Defines the horizontal alignment of the child component(s) in relation to the block. The default alignment is `left`.",
                "default": "left",
                "enum": [
                  "left",
                  "center",
                  "right"
                ],
                "_backboneForms": "Select"
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": false
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_trickle": {
            "type": "object",
            "title": "Trickle",
            "default": {},
            "required": [
              "_scrollDuration"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Trickle",
                "default": false
              },
              "_isInherited": {
                "type": "boolean",
                "title": "Inherit settings from parent article",
                "default": false
              },
              "_autoScroll": {
                "type": "boolean",
                "title": "Scroll automatically",
                "default": false
              },
              "_scrollDuration": {
                "type": "number",
                "title": "Scroll duration",
                "description": "Duration of the scroll animation in milliseconds",
                "default": 500
              },
              "_scrollTo": {
                "type": "string",
                "title": "Scroll target",
                "description": "Set how trickle scrolls",
                "default": "@block +1"
              },
              "_completionAttribute": {
                "type": "string",
                "title": "Completion attribute",
                "description": "Set which attribute is used to determine completion",
                "default": "_isComplete",
                "enum": [
                  "_isInteractionComplete",
                  "_isComplete"
                ],
                "_backboneForms": "Select"
              },
              "_button": {
                "type": "object",
                "title": "Button",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Add Trickle button",
                    "default": true
                  },
                  "_styleBeforeCompletion": {
                    "type": "string",
                    "title": "Visibility before completion",
                    "default": "hidden",
                    "enum": [
                      "hidden",
                      "visible",
                      "disabled"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_styleAfterClick": {
                    "type": "string",
                    "title": "Visibility after completion",
                    "default": "hidden",
                    "enum": [
                      "hidden",
                      "visible",
                      "disabled"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_isFullWidth": {
                    "type": "boolean",
                    "title": "Make full width",
                    "default": true
                  },
                  "_autoHide": {
                    "type": "boolean",
                    "title": "Hide button when no longer in view",
                    "description": "Hides the button when it scrolls from view; not recommended for use in courses that need to be screenreader compatible",
                    "default": false
                  },
                  "_showEndOfPage": {
                    "type": "boolean",
                    "title": "Show end of page button",
                    "default": true
                  },
                  "_className": {
                    "type": "string",
                    "title": "Custom classes",
                    "default": ""
                  },
                  "_hasIcon": {
                    "type": "boolean",
                    "title": "Enable icon",
                    "description": "Displays an icon alongside, or in place of, the Trickle button text. Default icon is a small downwards arrow",
                    "default": false
                  },
                  "text": {
                    "type": "string",
                    "title": "Default button text",
                    "default": "Continue",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Default button ARIA label",
                    "default": "Continue",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "startText": {
                    "type": "string",
                    "title": "First button text",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Begin",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "startAriaLabel": {
                    "type": "string",
                    "title": "First button ARIA label",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Begin",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "finalText": {
                    "type": "string",
                    "title": "Final button text",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Finish",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "finalAriaLabel": {
                    "type": "string",
                    "title": "Final button ARIA label",
                    "description": "Only on articles when 'Enable on child blocks' set to true",
                    "default": "Finish",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "_component": {
                    "type": "string",
                    "title": "Trickle plugin",
                    "default": "trickle-button"
                  }
                }
              },
              "_stepLocking": {
                "type": "object",
                "title": "Step locking",
                "default": {},
                "properties": {
                  "_isEnabled": {
                    "type": "boolean",
                    "title": "Hide subsequent content",
                    "default": true
                  },
                  "_isCompletionRequired": {
                    "type": "boolean",
                    "title": "Require content to be completed",
                    "default": true
                  },
                  "_isLockedOnRevisit": {
                    "type": "boolean",
                    "title": "Reset state on revisit",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt"
        ]
      },
      "component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component"
        ]
      },
      "contentobject": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "contentobject",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the element title that describes the completion state of the element.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "subtitle": {
            "type": "string",
            "title": "Subtitle",
            "description": "When viewing a menu/page - this is the subtitle that will be displayed on the menu/page",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "pageBody": {
            "type": "string",
            "title": "Custom page body",
            "description": "If set, this text will be shown instead of the body text when this page is viewed",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "_htmlClasses": {
            "type": "string",
            "title": "Custom HTML classes",
            "description": "If set, this CSS class/es will be applied to the <html> element whenever this is the active page in the course. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": ""
          },
          "_graphic": {
            "type": "object",
            "title": "Graphic",
            "default": {},
            "properties": {
              "alt": {
                "type": "string",
                "title": "Alternative text",
                "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "src": {
                "type": "string",
                "isObjectId": true,
                "title": "Source",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "image"
                }
              }
            }
          },
          "linkText": {
            "type": "string",
            "title": "Menu button text",
            "default": "View",
            "_adapt": {
              "translatable": true
            }
          },
          "duration": {
            "type": "string",
            "title": "Duration",
            "description": "Indicates how long this page or section should take to complete",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_lockedBy": {
            "type": "array",
            "title": "Elements to complete before this is unlocked",
            "description": "If the course is using a 'custom' menu lock type, this should contain the unique ID of the item(s) which must be completed before this is unlocked",
            "default": [],
            "_backboneForms": "List"
          },
          "_lockType": {
            "type": "string",
            "title": "Menu lock type",
            "description": "Defines which (if any) locking mechanism will be used. To be used only on submenus",
            "default": "",
            "enum": [
              "",
              "custom",
              "lockLast",
              "sequential",
              "unlockFirst"
            ],
            "_backboneForms": "Select"
          },
          "_requireCompletionOf": {
            "type": "number",
            "title": "Number of articles required for completion",
            "description": "The number of articles within this page the learner must complete in order for this page to be set as completed. A value of -1 requires all of them to be completed",
            "default": -1,
            "_adapt": {
              "isSetting": true
            }
          },
          "menuSettings": {
            "type": "object",
            "title": "Menu settings",
            "default": {}
          },
          "_resources": {
            "type": "object",
            "title": "Resources",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add resource links to the drawer",
                "description": "Controls whether the Resources extension is enabled or disabled",
                "default": true
              },
              "_resourcesItems": {
                "type": "array",
                "title": "Items",
                "items": {
                  "type": "object",
                  "properties": {
                    "_type": {
                      "type": "string",
                      "title": "Type",
                      "enum": [
                        "document",
                        "media",
                        "link"
                      ],
                      "_backboneForms": "Select"
                    },
                    "_forceDownload": {
                      "type": "boolean",
                      "title": "Force download",
                      "description": "Forces the resource to be downloaded rather than opened in the browser. Only supported in browsers that support the 'download' attribute and for resources that are part of the course content/hosted on the same URL",
                      "default": false
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "filename": {
                      "type": "string",
                      "title": "Filename",
                      "description": "Used to set the name of the downloaded file to something different to the source filename. Only supported in browsers that support the 'download' attribute and for resources that are part of the course content/hosted on the same URL. Forces the file to be downloaded regardless of what 'Force download' is set to",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "_link": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Source",
                      "_backboneForms": "Asset"
                    }
                  }
                }
              }
            }
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_backgroundImage": {
                "type": "object",
                "title": "Background image",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Extra large",
                    "description": "Extra large background image, e.g. hd laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_large": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Large",
                    "description": "Large background image, e.g. laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_medium": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Medium",
                    "description": "Medium background image, e.g. tablet devices",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_small": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Small",
                    "description": "Small background image, e.g. mobile / cellphones",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              },
              "_backgroundStyles": {
                "type": "object",
                "title": "Background image styles",
                "default": {},
                "properties": {
                  "_backgroundRepeat": {
                    "type": "string",
                    "title": "Repeat",
                    "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                    "default": "no-repeat",
                    "enum": [
                      "repeat",
                      "repeat-x",
                      "repeat-y",
                      "no-repeat"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundSize": {
                    "type": "string",
                    "title": "Size",
                    "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible. 100% 100%: Resize the background image to match the dimensions of the container",
                    "default": "cover",
                    "enum": [
                      "auto",
                      "cover",
                      "contain",
                      "100% 100%"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundPosition": {
                    "type": "string",
                    "title": "Position",
                    "description": "The first value is the horizontal position and the second value is the vertical",
                    "default": "center top",
                    "enum": [
                      "left top",
                      "left center",
                      "left bottom",
                      "center top",
                      "center center",
                      "center bottom",
                      "right top",
                      "right center",
                      "right bottom"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_responsiveClasses": {
                "type": "object",
                "title": "Responsive classes",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "title": "Extra large",
                    "description": "Extra large CSS class, e.g. hd laptop/desktop computers",
                    "default": ""
                  },
                  "_large": {
                    "type": "string",
                    "title": "Large",
                    "description": "Large CSS class, e.g. laptop/desktop computers",
                    "default": ""
                  },
                  "_medium": {
                    "type": "string",
                    "title": "Medium",
                    "description": "Medium CSS class, e.g. tablet devices",
                    "default": ""
                  },
                  "_small": {
                    "type": "string",
                    "title": "Small",
                    "description": "Small CSS class, e.g. mobile / cellphones",
                    "default": ""
                  }
                }
              },
              "_pageHeader": {
                "type": "object",
                "title": "Header",
                "default": {},
                "properties": {
                  "_textAlignment": {
                    "type": "object",
                    "title": "Text alignment",
                    "default": {},
                    "properties": {
                      "_title": {
                        "type": "string",
                        "title": "Title alignment",
                        "description": "Set the alignment of the page title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_body": {
                        "type": "string",
                        "title": "Body alignment",
                        "description": "Set the alignment of the page body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_instruction": {
                        "type": "string",
                        "title": "Instruction alignment",
                        "description": "Set the alignment of the page instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      }
                    }
                  },
                  "_backgroundImage": {
                    "type": "object",
                    "title": "Header background image",
                    "default": {},
                    "properties": {
                      "_xlarge": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Extra large",
                        "description": "Extra large background image, e.g. hd laptop/desktop computers",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_large": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Large",
                        "description": "Large background image, e.g. laptop/desktop computers",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_medium": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Medium",
                        "description": "Medium background image, e.g. tablet devices",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_small": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Small",
                        "description": "Small background image, e.g. mobile / cellphones",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      }
                    }
                  },
                  "_backgroundStyles": {
                    "type": "object",
                    "title": "Header background image styles",
                    "default": {},
                    "properties": {
                      "_backgroundRepeat": {
                        "type": "string",
                        "title": "Repeat",
                        "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                        "default": "no-repeat",
                        "enum": [
                          "repeat",
                          "repeat-x",
                          "repeat-y",
                          "no-repeat"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_backgroundSize": {
                        "type": "string",
                        "title": "Size",
                        "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible. 100% 100%: Resize the background image to match the dimensions of the container",
                        "default": "cover",
                        "enum": [
                          "auto",
                          "cover",
                          "contain",
                          "100% 100%"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_backgroundPosition": {
                        "type": "string",
                        "title": "Position",
                        "description": "The first value is the horizontal position and the second value is the vertical",
                        "default": "center top",
                        "enum": [
                          "left top",
                          "left center",
                          "left bottom",
                          "center top",
                          "center center",
                          "center bottom",
                          "right top",
                          "right center",
                          "right bottom"
                        ],
                        "_backboneForms": "Select"
                      }
                    }
                  },
                  "_minimumHeights": {
                    "type": "object",
                    "title": "Header minimum height",
                    "default": {},
                    "properties": {
                      "_xlarge": {
                        "type": "number",
                        "title": "Extra large",
                        "description": "Minimum height should only be used in instances where the page header height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. hd laptop/desktop computers",
                        "default": 0
                      },
                      "_large": {
                        "type": "number",
                        "title": "Large",
                        "description": "Minimum height should only be used in instances where the page header height needs to be greater than the content e.g. to prevent a background image being cropped. For , e.g. laptop/desktop computers",
                        "default": 0
                      },
                      "_medium": {
                        "type": "number",
                        "title": "Medium",
                        "description": "Minimum height should only be used in instances where the page header height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. tablet devices",
                        "default": 0
                      },
                      "_small": {
                        "type": "number",
                        "title": "Small",
                        "description": "Minimum height should only be used in instances where the page header height needs to be greater than the content e.g. to prevent a background image being cropped. For e.g. mobile / cellphones",
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "_boxMenu": {
            "type": "object",
            "title": "Box Menu",
            "default": {},
            "properties": {
              "_renderAsGroup": {
                "type": "boolean",
                "title": "Make this a parent group of menu items",
                "description": "Enable this option to render items into a group on the menu. Groups can display a title, body, and instruction text",
                "default": false
              }
            }
          },
          "_bookmarking": {
            "type": "object",
            "title": "Bookmarking",
            "default": {},
            "required": [
              "_level"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Bookmarking",
                "description": "Controls whether Bookmarking is enabled or disabled for this page of the course",
                "default": true
              },
              "_level": {
                "type": "string",
                "title": "Level",
                "description": "Whether you want to inherit the 'Level' setting from Project settings or override it for this page of the course",
                "default": "inherit",
                "enum": [
                  "inherit",
                  "page",
                  "block",
                  "component"
                ],
                "_backboneForms": "Select"
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_showPageCompletion": {
                "type": "boolean",
                "title": "Include overall page completion",
                "description": "Controls whether the progress calculations for this page are based on all components and the overall page - or only the components that are set to be displayed in Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              },
              "_excludeAssessments": {
                "type": "boolean",
                "title": "Exclude assessment completion",
                "description": "Controls whether the progress calculations will include assessments",
                "default": false
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt"
        ]
      },
      "course": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "course",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the element title that describes the completion state of the element.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags to your course by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags",
            "_adapt": {
              "editorOnly": true
            }
          },
          "heroImage": {
            "type": "string",
            "isObjectId": true,
            "title": "Preview image",
            "description": "The image that will be shown in the dashboard for this course",
            "_adapt": {
              "editorOnly": true
            },
            "_backboneForms": {
              "type": "Asset",
              "media": "image"
            }
          },
          "subtitle": {
            "type": "string",
            "title": "Subtitle",
            "description": "This is the subtitle that will be displayed on the course's main menu",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "This will be added to the course's manifest file metadata. It is not (currently) displayed anywhere within the course",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_htmlClasses": {
            "type": "string",
            "title": "Custom HTML classes",
            "description": "If set, this class will be applied to the <html> element when the top-level menu in the course is displayed. These are predefined in the theme or added in Custom CSS/Less code",
            "default": ""
          },
          "_latestTrackingId": {
            "type": "number",
            "title": "Latest tracking id",
            "default": 0
          },
          "_start": {
            "type": "object",
            "title": "Start settings",
            "description": "The start settings allow you to control which page is rendered when a course loads, potentially bypassing the menu",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Route to custom start page on course load",
                "default": false,
                "_adapt": {
                  "editorOnly": true
                }
              },
              "_startIds": {
                "type": "array",
                "title": "Start pages",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "title": "ID",
                      "default": ""
                    },
                    "_skipIfComplete": {
                      "type": "boolean",
                      "title": "Skip page if complete",
                      "description": "If enabled, the page will not be selected as the first page if it has been already viewed/completed",
                      "default": false,
                      "_adapt": {
                        "editorOnly": true
                      }
                    },
                    "_className": {
                      "type": "string",
                      "title": "Limit to classes",
                      "description": "Optional comma-separated list of class names which will be used to select this start page",
                      "default": ""
                    }
                  }
                }
              },
              "_force": {
                "type": "boolean",
                "title": "Always route to start page",
                "description": "If enabled, the routing will be forced to the appropriate start page, regardless of the URL",
                "default": false,
                "_adapt": {
                  "editorOnly": true
                }
              },
              "_isMenuDisabled": {
                "type": "boolean",
                "title": "Disable menu",
                "description": "Allows you to prevent the user from seeing - or navigating to - the main menu",
                "default": false,
                "_adapt": {
                  "editorOnly": true
                }
              }
            }
          },
          "_globals": {
            "type": "object",
            "title": "Globals",
            "default": {},
            "properties": {
              "_accessibility": {
                "type": "object",
                "title": "Accessibility",
                "default": {},
                "required": [
                  "skipNavigationText"
                ],
                "properties": {
                  "skipNavigationText": {
                    "type": "string",
                    "title": "Skip to main content label",
                    "default": "Skip to main content",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "_ariaLabels": {
                    "type": "object",
                    "title": "ARIA labels",
                    "default": {},
                    "properties": {
                      "answeredIncorrectly": {
                        "type": "string",
                        "title": "Answered incorrectly",
                        "default": "You answered incorrectly",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "answeredCorrectly": {
                        "type": "string",
                        "title": "Answered correctly",
                        "default": "You answered correctly",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "selectedAnswer": {
                        "type": "string",
                        "title": "Selected answer",
                        "default": "selected",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "unselectedAnswer": {
                        "type": "string",
                        "title": "Unselected answer",
                        "default": "not selected",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "skipNavigation": {
                        "type": "string",
                        "title": "Skip navigation",
                        "default": "Skip navigation",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "previous": {
                        "type": "string",
                        "title": "Previous",
                        "default": "Back",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "navigationDrawer": {
                        "type": "string",
                        "title": "Navigation drawer",
                        "default": "Open course resources.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "close": {
                        "type": "string",
                        "title": "Close",
                        "default": "Close",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "closeDrawer": {
                        "type": "string",
                        "title": "Close drawer",
                        "default": "Close Drawer",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "closeResources": {
                        "type": "string",
                        "title": "Close resources",
                        "default": "Close resources",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "drawer": {
                        "type": "string",
                        "title": "Drawer",
                        "default": "Top of side drawer",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "closePopup": {
                        "type": "string",
                        "title": "Close popup",
                        "default": "Close popup",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "next": {
                        "type": "string",
                        "title": "Next",
                        "default": "Next",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "done": {
                        "type": "string",
                        "title": "Done",
                        "default": "Done",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "complete": {
                        "type": "string",
                        "title": "Complete",
                        "default": "Completed",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "incomplete": {
                        "type": "string",
                        "title": "Incomplete",
                        "default": "Incomplete",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "incorrect": {
                        "type": "string",
                        "title": "Incorrect",
                        "default": "Incorrect",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "correct": {
                        "type": "string",
                        "title": "Correct",
                        "default": "Correct",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "locked": {
                        "type": "string",
                        "title": "Locked",
                        "default": "Locked",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "visited": {
                        "type": "string",
                        "title": "Visited",
                        "default": "Visited",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              },
              "_extensions": {
                "type": "object",
                "title": "Extensions",
                "default": {},
                "properties": {
                  "_drawer": {
                    "type": "object",
                    "title": "Drawer",
                    "default": {},
                    "properties": {
                      "_navOrder": {
                        "type": "number",
                        "title": "Navigation bar order",
                        "description": "Determines the order in which the object is displayed in the navigation bar. Negative numbers (e.g. -100) are left-aligned. Positive numbers (e.g. 100) are right-aligned.",
                        "default": 100
                      },
                      "_navTooltip": {
                        "type": "object",
                        "title": "Navigation tooltip",
                        "default": {},
                        "properties": {
                          "_isEnabled": {
                            "type": "boolean",
                            "title": "Enabled",
                            "default": true
                          },
                          "text": {
                            "type": "string",
                            "title": "",
                            "default": "{{ariaLabel}}",
                            "_adapt": {
                              "translatable": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "_navigation": {
                    "type": "object",
                    "title": "Navigation",
                    "default": {},
                    "properties": {
                      "_skipButton": {
                        "type": "object",
                        "title": "Skip navigation button",
                        "default": {},
                        "properties": {
                          "_navOrder": {
                            "type": "number",
                            "title": "Navigation bar order",
                            "description": "Determines the order in which the object is displayed in the navigation bar. Negative numbers (e.g. -100) are left-aligned. Positive numbers (e.g. 100) are right-aligned.",
                            "default": -100
                          }
                        }
                      },
                      "_backButton": {
                        "type": "object",
                        "title": "Back button",
                        "default": {},
                        "properties": {
                          "_navOrder": {
                            "type": "number",
                            "title": "Navigation bar order",
                            "description": "Determines the order in which the object is displayed in the navigation bar. Negative numbers (e.g. -100) are left-aligned. Positive numbers (e.g. 100) are right-aligned.",
                            "default": 0
                          }
                        }
                      },
                      "_backNavTooltip": {
                        "type": "object",
                        "title": "Back tooltip",
                        "default": {},
                        "properties": {
                          "_isEnabled": {
                            "type": "boolean",
                            "title": "Enabled",
                            "default": true
                          },
                          "text": {
                            "type": "string",
                            "title": "",
                            "default": "{{ariaLabel}}",
                            "_adapt": {
                              "translatable": true
                            }
                          }
                        }
                      },
                      "_spacers": {
                        "type": "array",
                        "title": "Items",
                        "default": [
                          {
                            "_navOrder": 0
                          }
                        ],
                        "items": {
                          "type": "object",
                          "properties": {
                            "_navOrder": {
                              "type": "number",
                              "title": "Navigation bar order",
                              "description": "Determines the order in which the object is displayed in the navigation bar. Negative numbers (e.g. -100) are left-aligned. Positive numbers (e.g. 100) are right-aligned.",
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  },
                  "_resources": {
                    "type": "object",
                    "title": "Resources",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "Resources: ARIA region",
                        "default": "",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "resources": {
                        "type": "string",
                        "title": "Resources",
                        "default": "Additional resources.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_languagePicker": {
                    "type": "object",
                    "title": "Language Picker",
                    "default": {},
                    "properties": {
                      "languageSelector": {
                        "type": "string",
                        "title": "Language selector",
                        "default": "Language selector",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_navOrder": {
                        "type": "number",
                        "title": "Navigation bar order",
                        "description": "Determines the order in which the button is displayed in the navigation bar. Negative numbers (e.g. -100) are left-aligned. Positive numbers (e.g. 100) are right-aligned.",
                        "default": 0
                      },
                      "_navTooltip": {
                        "type": "object",
                        "title": "Navigation tooltip",
                        "properties": {
                          "_isEnabled": {
                            "type": "boolean",
                            "title": "Enable tooltip for language picker button",
                            "default": true
                          },
                          "text": {
                            "type": "string",
                            "title": "Tooltip text",
                            "default": "Language selector",
                            "_adapt": {
                              "translatable": true
                            }
                          }
                        }
                      },
                      "_showLabel": {
                        "type": "boolean",
                        "title": "Enable navigation button label",
                        "description": "Determines whether a label is shown on the navigation bar button.",
                        "default": true
                      },
                      "navigationBarLabel": {
                        "type": "string",
                        "title": "Navigation button label",
                        "description": "The tooltip text to display on hover.",
                        "default": "Select course language",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_drawerPosition": {
                        "type": "string",
                        "default": "auto",
                        "title": "Drawer position",
                        "description": "Determines the starting position of the drawer to open.",
                        "enum": [
                          "auto",
                          "left",
                          "right"
                        ]
                      }
                    }
                  },
                  "_tutor": {
                    "type": "object",
                    "title": "Tutor",
                    "default": {},
                    "properties": {
                      "hideFeedback": {
                        "type": "string",
                        "title": "Hide feedback",
                        "default": "Hide feedback",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_pageLevelProgress": {
                    "type": "object",
                    "title": "Page Level Progress",
                    "default": {},
                    "properties": {
                      "pageLevelProgress": {
                        "type": "string",
                        "title": "Page Level Progress",
                        "default": "List of page sections and completion status. Select incomplete sections to jump directly to the content.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "pageLevelProgressIndicatorBar": {
                        "type": "string",
                        "title": "Page Level Progress indicator bar",
                        "default": "Page progress. {{percentageComplete}}%. Open page sections.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "pageLevelProgressMenuBar": {
                        "type": "string",
                        "title": "Page Level Progress menu bar",
                        "default": "Page completion {{percentageComplete}}%",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "optionalContent": {
                        "type": "string",
                        "title": "Optional content",
                        "default": "Optional content",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_navOrder": {
                        "type": "number",
                        "title": "Navigation bar order",
                        "description": "Determines the order in which the page level progress is displayed in the navigation bar. Negative numbers (e.g. -100) are left-aligned. Positive numbers (e.g. 100) are right-aligned.",
                        "default": 90
                      },
                      "_navTooltip": {
                        "type": "object",
                        "title": "Page Level Progress navigation tooltip",
                        "properties": {
                          "_isEnabled": {
                            "type": "boolean",
                            "title": "Enable tooltip for navigation button",
                            "default": true
                          },
                          "text": {
                            "type": "string",
                            "title": "",
                            "default": "Page progress",
                            "_adapt": {
                              "translatable": true
                            }
                          }
                        }
                      },
                      "_showLabel": {
                        "type": "boolean",
                        "title": "Enable navigation bar button label",
                        "default": true
                      },
                      "navLabel": {
                        "type": "string",
                        "title": "Navigation bar button label",
                        "default": "Page Progress",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_drawerPosition": {
                        "type": "string",
                        "default": "auto",
                        "title": "Drawer position",
                        "description": "Determines the starting position of the drawer to open",
                        "enum": [
                          "auto",
                          "left",
                          "right"
                        ]
                      }
                    }
                  },
                  "_trickle": {
                    "type": "object",
                    "title": "Trickle",
                    "default": {},
                    "properties": {
                      "incompleteContent": {
                        "type": "string",
                        "title": "Incomplete content",
                        "default": "There is incomplete content above. You must complete this before you can proceed through the course.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              },
              "_components": {
                "type": "object",
                "default": {},
                "properties": {
                  "_text": {
                    "type": "object",
                    "title": "Text",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_hotgraphic": {
                    "type": "object",
                    "title": "Hotgraphic",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Image with selectable areas. Select each button to show more information.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "item": {
                        "type": "string",
                        "title": "Item",
                        "default": "Item {{{itemNumber}}} of {{{totalItems}}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "previous": {
                        "type": "string",
                        "title": "Previous",
                        "default": "{{#if title}}Back to {{{title}}} (item {{itemNumber}} of {{totalItems}}){{else}}{{_globals._accessibility._ariaLabels.previous}}{{/if}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "next": {
                        "type": "string",
                        "title": "Next",
                        "default": "{{#if title}}Forward to {{{title}}} (item {{itemNumber}} of {{totalItems}}){{else}}{{_globals._accessibility._ariaLabels.next}}{{/if}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "popupPagination": {
                        "type": "string",
                        "title": "Popup pagination",
                        "description": "This is the aria label for each item. Use {{itemNumber}} and {{totalItems}} in your text to tell the user which item they are viewing and how many items there are in total",
                        "default": "{{itemNumber}} / {{totalItems}}",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_narrative": {
                    "type": "object",
                    "title": "Narrative",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Slide show. Select the next button to progress.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "previous": {
                        "type": "string",
                        "title": "Previous",
                        "default": "{{#if title}}Back to {{{title}}} (item {{itemNumber}} of {{totalItems}}){{else}}{{_globals._accessibility._ariaLabels.previous}}{{/if}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "next": {
                        "type": "string",
                        "title": "Next",
                        "default": "{{#if title}}Forward to {{{title}}} (item {{itemNumber}} of {{totalItems}}){{else}}{{_globals._accessibility._ariaLabels.next}}{{/if}}",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_media": {
                    "type": "object",
                    "title": "Media",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Media player{{#any _transcript._inlineTranscript _transcript._externalTranscript}} and transcript{{/any}}.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "skipToTranscript": {
                        "type": "string",
                        "title": "Skip to transcript",
                        "default": "Skip to transcript",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "playText": {
                        "type": "string",
                        "title": "Play",
                        "default": "Play",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "pauseText": {
                        "type": "string",
                        "title": "Pause",
                        "default": "Pause",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "stopText": {
                        "type": "string",
                        "title": "Stop",
                        "default": "Stop",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "audioPlayerText": {
                        "type": "string",
                        "title": "Audio Player",
                        "default": "Audio Player",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "videoPlayerText": {
                        "type": "string",
                        "title": "Video Player",
                        "default": "Video Player",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "tracksText": {
                        "type": "string",
                        "title": "Captions/Subtitles",
                        "default": "Captions/Subtitles",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "timeSliderText": {
                        "type": "string",
                        "title": "Time Slider",
                        "default": "Time Slider",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "muteText": {
                        "type": "string",
                        "title": "Mute Toggle",
                        "default": "Mute Toggle",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "unmuteStatusText": {
                        "type": "string",
                        "title": "Unmute",
                        "default": "Unmute",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "muteStatusText": {
                        "type": "string",
                        "title": "Mute",
                        "default": "Mute",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "volumeSliderText": {
                        "type": "string",
                        "title": "Volume Slider",
                        "default": "Volume Slider",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "fullscreenText": {
                        "type": "string",
                        "title": "Fullscreen",
                        "default": "Fullscreen",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "goFullscreenText": {
                        "type": "string",
                        "title": "Go Fullscreen",
                        "default": "Go Fullscreen",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "turnOffFullscreenText": {
                        "type": "string",
                        "title": "Turn off Fullscreen",
                        "default": "Turn off Fullscreen",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "noneText": {
                        "type": "string",
                        "title": "None",
                        "default": "None",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "skipBackText": {
                        "type": "string",
                        "title": "Skip back %1 seconds",
                        "default": "Skip back %1 seconds",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "allyVolumeControlText": {
                        "type": "string",
                        "title": "Use Up/Down Arrow keys to increase or decrease volume.",
                        "default": "Use Up/Down Arrow keys to increase or decrease volume.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "progessHelpText": {
                        "type": "string",
                        "title": "Use Left/Right Arrow keys to advance one second, Up/Down arrows to advance ten seconds.",
                        "default": "Use Left/Right Arrow keys to advance one second, Up/Down arrows to advance ten seconds.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_textinput": {
                    "type": "object",
                    "title": "Text Input",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Text input. Type your answer and then submit.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_matching": {
                    "type": "object",
                    "title": "Matching",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Matching. Select from lists and then submit.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_graphic": {
                    "type": "object",
                    "title": "Graphic",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Graphic",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_mcq": {
                    "type": "object",
                    "title": "MCQ",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Multiple choice question",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_assessmentResults": {
                    "type": "object",
                    "title": "Assessment Results",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Assessment results.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_gmcq": {
                    "type": "object",
                    "title": "GMCQ",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Multiple choice question",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_slider": {
                    "type": "object",
                    "title": "Slider",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "Slider. Respond to the question by selecting a value on the scale and then submit.",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "labelStart": {
                        "type": "string",
                        "title": "Scale start ARIA label",
                        "default": "Start of the scale",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "labelEnd": {
                        "type": "string",
                        "title": "Scale end ARIA label",
                        "default": "End of the scale",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  },
                  "_accordion": {
                    "type": "object",
                    "title": "Accordion",
                    "default": {},
                    "properties": {
                      "ariaRegion": {
                        "type": "string",
                        "title": "ARIA region",
                        "default": "List of expandable sections. Select each button to expand the content.",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              },
              "_menu": {
                "type": "object",
                "default": {},
                "properties": {
                  "_boxMenu": {
                    "type": "object",
                    "title": "Box Menu",
                    "default": {},
                    "properties": {
                      "itemCount": {
                        "type": "string",
                        "title": "Item count label",
                        "default": "Item {{_nthChild}} of {{_totalChild}}",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "durationLabel": {
                        "type": "string",
                        "title": "Duration label",
                        "default": "Duration:",
                        "_adapt": {
                          "translatable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "_tooltips": {
            "type": "object",
            "title": "Tooltips",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enabled",
                "default": true
              }
            }
          },
          "_buttons": {
            "type": "object",
            "title": "Buttons",
            "default": {},
            "properties": {
              "_submit": {
                "type": "object",
                "title": "Submit",
                "default": {},
                "required": [
                  "buttonText",
                  "ariaLabel"
                ],
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "Submit",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "Submit",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_reset": {
                "type": "object",
                "title": "Reset",
                "default": {},
                "required": [
                  "buttonText",
                  "ariaLabel"
                ],
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "Reset",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "Reset",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showCorrectAnswer": {
                "type": "object",
                "title": "Show correct answer",
                "default": {},
                "required": [
                  "buttonText",
                  "ariaLabel"
                ],
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "Show correct answer",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "Show correct answer",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_hideCorrectAnswer": {
                "type": "object",
                "title": "Hide correct answer",
                "default": {},
                "required": [
                  "buttonText",
                  "ariaLabel"
                ],
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "Show your answer",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "Show your answer",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showFeedback": {
                "type": "object",
                "title": "Show feedback",
                "default": {},
                "required": [
                  "buttonText",
                  "ariaLabel"
                ],
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "Show feedback",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "Show feedback",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "remainingAttemptsText": {
                "type": "string",
                "title": "Remaining attempts label",
                "default": "attempts remaining",
                "_adapt": {
                  "translatable": true
                }
              },
              "remainingAttemptText": {
                "type": "string",
                "title": "Final attempt label",
                "default": "final attempt",
                "_adapt": {
                  "translatable": true
                }
              },
              "disabledAriaLabel": {
                "type": "string",
                "title": "Disabled ARIA label",
                "default": "This button is disabled at the moment",
                "_adapt": {
                  "translatable": true
                }
              }
            },
            "_adapt": {
              "isSetting": false
            }
          },
          "_navigation": {
            "type": "object",
            "title": "Navigation settings",
            "description": "The navigation settings allow you to control the behaviour of the navigation bar.",
            "default": {},
            "properties": {
              "_isDefaultNavigationDisabled": {
                "type": "boolean",
                "title": "Disable default navigation bar",
                "default": false,
                "_adapt": {
                  "editorOnly": true
                }
              },
              "_navigationAlignment": {
                "type": "string",
                "title": "Navigation alignment",
                "description": "The CSS selector that determines where the navigation bar is displayed. Must be a selector targeting the HTML element.",
                "default": "top",
                "enum": [
                  "top",
                  "bottom"
                ],
                "_backboneForms": "Select",
                "_adapt": {
                  "editorOnly": true
                }
              },
              "_isBottomOnTouchDevices": {
                "type": "boolean",
                "title": "Is bottom on touch devices",
                "default": false,
                "_adapt": {
                  "editorOnly": true
                }
              },
              "_showLabel": {
                "type": "boolean",
                "title": "Show navigation button labels",
                "default": false,
                "_adapt": {
                  "editorOnly": true
                }
              },
              "_showLabelAtWidth": {
                "type": "string",
                "title": "Show label at this breakpoint and higher",
                "description": "When the user's browser window is at least this wide, the labels will be shown. Options refer to the standard Adapt breakpoints. The 'any' option will show the label at any size.",
                "default": "medium",
                "enum": [
                  "any",
                  "small",
                  "medium",
                  "large"
                ],
                "_backboneForms": "Select",
                "_adapt": {
                  "editorOnly": true
                }
              },
              "_labelPosition": {
                "type": "string",
                "title": "Label position",
                "description": "Where to show the label in relation to the button icons",
                "default": "auto",
                "enum": [
                  "auto",
                  "top",
                  "bottom",
                  "left",
                  "right"
                ],
                "_backboneForms": "Select",
                "_adapt": {
                  "editorOnly": true
                }
              }
            }
          },
          "_requireCompletionOf": {
            "type": "number",
            "title": "Number of pages/submenus required for completion",
            "description": "The number of content objects within this course the learner must complete in order for this course to be set as completed. A value of -1 requires all of them to be completed",
            "default": -1,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isSelected": {
            "type": "boolean",
            "title": "Is selected",
            "default": false,
            "_adapt": {
              "editorOnly": true
            }
          },
          "_hasPreview": {
            "type": "boolean",
            "title": "Has preview",
            "default": false,
            "_adapt": {
              "editorOnly": true
            }
          },
          "_isShared": {
            "type": "boolean",
            "title": "Share with all users",
            "description": "Defines whether this course will be editable by all users",
            "default": false,
            "_adapt": {
              "editorOnly": true
            }
          },
          "_shareWithUsers": {
            "type": "array",
            "title": "Share with specific users",
            "description": "Defines which individual users are able to edit this course",
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Users"
          },
          "themeVariables": {
            "type": "object",
            "title": "Theme variables",
            "default": {}
          },
          "menuSettings": {
            "type": "object",
            "title": "Menu settings",
            "default": {}
          },
          "_lockType": {
            "type": "string",
            "title": "Menu lock type",
            "description": "Defines which (if any) locking mechanism will be used for menu items",
            "default": "",
            "enum": [
              "",
              "custom",
              "lockLast",
              "sequential",
              "unlockFirst"
            ],
            "_backboneForms": "Select"
          },
          "customStyle": {
            "type": "string",
            "title": "Custom CSS/Less code",
            "description": "Add any custom CSS or valid Less code here",
            "default": "",
            "_backboneForms": {
              "type": "CodeEditor",
              "mode": "less"
            }
          },
          "externalReferences": {
            "type": "object",
            "title": "External references",
            "default": {}
          },
          "_assessment": {
            "type": "object",
            "title": "Assessment",
            "default": {},
            "properties": {
              "_isPercentageBased": {
                "type": "boolean",
                "title": "Set pass mark as percentage",
                "description": "Determines whether the pass mark values should be treated as percentages (default) or as the raw score and correctness",
                "default": true
              },
              "_scoreToPass": {
                "type": "number",
                "title": "Pass mark",
                "description": "The minimum score required by the learner to pass the assessment or the minimum percentage score if percentage-based",
                "default": 60
              },
              "_correctToPass": {
                "type": "number",
                "title": "Correct pass mark",
                "description": "The minimum number of correct questions required by the learner to pass the assessment or the minimum percentage correct if percentage-based",
                "default": 60
              }
            }
          },
          "_resources": {
            "type": "object",
            "title": "Resources",
            "default": {},
            "required": [
              "title"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add resource links to the drawer",
                "description": "Controls whether the Resources extension is enabled or disabled",
                "default": true
              },
              "_drawerOrder": {
                "type": "number",
                "title": "Index position in the drawer",
                "description": "The order in which this extension should appear as a drawer item",
                "default": 0
              },
              "title": {
                "type": "string",
                "title": "Title",
                "default": "Resources",
                "description": "The title for the resources button which displays when more than one extension is using the drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "description": {
                "type": "string",
                "title": "Description",
                "default": "Select here to view resources for this course",
                "description": "The description text for the resources button which displays when more than one extension is using the drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "displayTitle": {
                "type": "string",
                "title": "Display title",
                "default": "",
                "description": "The title for the resources which displays at the top of the resources drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "body": {
                "type": "string",
                "title": "Body",
                "default": "",
                "description": "The body text for the resources which displays at the top of the resources drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "instruction": {
                "type": "string",
                "title": "Instruction",
                "default": "",
                "description": "The instruction text for the resources which displays at the top of the resources drawer.",
                "_adapt": {
                  "translatable": true
                }
              },
              "_filterButtons": {
                "type": "object",
                "title": "Filter buttons",
                "default": {},
                "properties": {
                  "all": {
                    "type": "string",
                    "title": "All",
                    "default": "All",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "document": {
                    "type": "string",
                    "title": "Documents",
                    "default": "Documents",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "media": {
                    "type": "string",
                    "title": "Media",
                    "default": "Media",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "link": {
                    "type": "string",
                    "title": "Links",
                    "default": "Links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom1": {
                    "type": "string",
                    "title": "Custom type 1",
                    "default": "Custom type 1",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom2": {
                    "type": "string",
                    "title": "Custom type 2",
                    "default": "Custom type 2",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom3": {
                    "type": "string",
                    "title": "Custom type 3",
                    "default": "Custom type 3",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom4": {
                    "type": "string",
                    "title": "Custom type 4",
                    "default": "Custom type 4",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom5": {
                    "type": "string",
                    "title": "Custom type 5",
                    "default": "Custom type 5",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom6": {
                    "type": "string",
                    "title": "Custom type 6",
                    "default": "Custom type 6",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom7": {
                    "type": "string",
                    "title": "Custom type 7",
                    "default": "Custom type 7",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom8": {
                    "type": "string",
                    "title": "Custom type 8",
                    "default": "Custom type 8",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom9": {
                    "type": "string",
                    "title": "Custom type 9",
                    "default": "Custom type 9",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom10": {
                    "type": "string",
                    "title": "Custom type 10",
                    "default": "Custom type 10",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_filterAria": {
                "type": "object",
                "title": "Filter ARIA labels",
                "default": {},
                "properties": {
                  "allAria": {
                    "type": "string",
                    "title": "All",
                    "default": "View all resources",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "documentAria": {
                    "type": "string",
                    "title": "Documents",
                    "default": "View document resources",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "mediaAria": {
                    "type": "string",
                    "title": "Media",
                    "default": "View media resources",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "linkAria": {
                    "type": "string",
                    "title": "Links",
                    "default": "View resource links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom1Aria": {
                    "type": "string",
                    "title": "Custom type 1",
                    "default": "View custom type 1 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom2Aria": {
                    "type": "string",
                    "title": "Custom type 2",
                    "default": "View custom type 2 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom3Aria": {
                    "type": "string",
                    "title": "Custom type 3",
                    "default": "View custom type 3 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom4Aria": {
                    "type": "string",
                    "title": "Custom type 4",
                    "default": "View custom type 4 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom5Aria": {
                    "type": "string",
                    "title": "Custom type 5",
                    "default": "View custom type 5 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom6Aria": {
                    "type": "string",
                    "title": "Custom type 6",
                    "default": "View custom type 6 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom7Aria": {
                    "type": "string",
                    "title": "Custom type 7",
                    "default": "View custom type 7 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom8Aria": {
                    "type": "string",
                    "title": "Custom type 8",
                    "default": "View custom type 8 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom9Aria": {
                    "type": "string",
                    "title": "Custom type 9",
                    "default": "View custom type 9 links",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "custom10Aria": {
                    "type": "string",
                    "title": "Custom type 10",
                    "default": "View custom type 10 links",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_resourcesItems": {
                "type": "array",
                "title": "Items",
                "items": {
                  "type": "object",
                  "properties": {
                    "_type": {
                      "type": "string",
                      "title": "Type",
                      "enum": [
                        "document",
                        "media",
                        "link"
                      ],
                      "_backboneForms": "Select"
                    },
                    "_forceDownload": {
                      "type": "boolean",
                      "title": "Force download",
                      "description": "Forces the resource to be downloaded rather than opened in the browser. Only supported in browsers that support the 'download' attribute and for resources that are part of the course content/hosted on the same URL",
                      "default": false
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "filename": {
                      "type": "string",
                      "title": "Filename",
                      "description": "Used to set the name of the downloaded file to something different to the source filename. Only supported in browsers that support the 'download' attribute and for resources that are part of the course content/hosted on the same URL. Forces the file to be downloaded regardless of what 'Force download' is set to",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "_link": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Source",
                      "_backboneForms": "Asset"
                    },
                    "_isGlobal": {
                      "type": "boolean",
                      "title": "Is displayed on every page",
                      "default": true
                    }
                  }
                }
              }
            }
          },
          "_vanilla": {
            "type": "object",
            "title": "Theme",
            "default": {},
            "properties": {
              "_favIcon": {
                "type": "object",
                "default": {},
                "title": "Favicon",
                "properties": {
                  "_src": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Image",
                    "description": "Select a favicon to improve user experience and enforce brand consistency. This will be displayed in places like your browser's address bar, page tabs and bookmarks menu. Usually, a favicon is 16 x 16 pixels in size and stored in the GIF, PNG, or ICO file format.",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              }
            }
          },
          "_boxMenu": {
            "type": "object",
            "title": "Box Menu",
            "default": {},
            "properties": {
              "_graphic": {
                "type": "object",
                "title": "Menu logo image",
                "default": {},
                "properties": {
                  "_src": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Source",
                    "description": "This image will appear above the menu page title",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "alt": {
                    "type": "string",
                    "title": "Alternative text",
                    "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_backgroundImage": {
                "type": "object",
                "title": "Background image",
                "default": {},
                "properties": {
                  "_xlarge": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Extra large",
                    "description": "Extra large background image, e.g. hd laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_large": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Large",
                    "description": "Large background image, e.g. laptop/desktop computers",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_medium": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Medium",
                    "description": "Medium background image, e.g. tablet devices",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  },
                  "_small": {
                    "type": "string",
                    "isObjectId": true,
                    "title": "Small",
                    "description": "Small background image, e.g. mobile / cellphones",
                    "_backboneForms": {
                      "type": "Asset",
                      "media": "image"
                    }
                  }
                }
              },
              "_backgroundStyles": {
                "type": "object",
                "title": "Background image styles",
                "default": {},
                "properties": {
                  "_backgroundRepeat": {
                    "type": "string",
                    "title": "Repeat",
                    "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                    "default": "",
                    "enum": [
                      "",
                      "repeat",
                      "repeat-x",
                      "repeat-y",
                      "no-repeat"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundSize": {
                    "type": "string",
                    "title": "Size",
                    "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible",
                    "default": "",
                    "enum": [
                      "",
                      "auto",
                      "cover",
                      "contain"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_backgroundPosition": {
                    "type": "string",
                    "title": "Position",
                    "description": "The first value is the horizontal position and the second value is the vertical",
                    "default": "",
                    "enum": [
                      "",
                      "left top",
                      "left center",
                      "left bottom",
                      "center top",
                      "center center",
                      "center bottom",
                      "right top",
                      "right center",
                      "right bottom"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              },
              "_menuHeader": {
                "type": "object",
                "title": "Header",
                "default": {},
                "properties": {
                  "_textAlignment": {
                    "type": "object",
                    "title": "Text alignment",
                    "default": {},
                    "properties": {
                      "_title": {
                        "type": "string",
                        "title": "Title alignment",
                        "description": "Set the alignment of the menu title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_body": {
                        "type": "string",
                        "title": "Body alignment",
                        "description": "Set the alignment of the menu body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_instruction": {
                        "type": "string",
                        "title": "Instruction alignment",
                        "description": "Set the alignment of the menu instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                        "default": "",
                        "enum": [
                          "",
                          "left",
                          "center",
                          "right"
                        ],
                        "_backboneForms": "Select"
                      }
                    }
                  },
                  "_backgroundImage": {
                    "type": "object",
                    "title": "Header background image",
                    "default": {},
                    "properties": {
                      "_xlarge": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Extra large",
                        "description": "Extra large background image, e.g. hd laptop/desktop computers",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_large": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Large",
                        "description": "Large background image, e.g. laptop/desktop computers",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_medium": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Medium",
                        "description": "Medium background image, e.g. tablet devices",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      },
                      "_small": {
                        "type": "string",
                        "isObjectId": true,
                        "title": "Small",
                        "description": "Small background image, e.g. mobile / cellphones",
                        "_backboneForms": {
                          "type": "Asset",
                          "media": "image"
                        }
                      }
                    }
                  },
                  "_backgroundStyles": {
                    "type": "object",
                    "title": "Header background image styles",
                    "default": {},
                    "properties": {
                      "_backgroundRepeat": {
                        "type": "string",
                        "title": "Repeat",
                        "description": "Repeat-x: The background image is repeated only horizontally. Repeat-y: The background image is repeated only vertically",
                        "default": "",
                        "enum": [
                          "",
                          "repeat",
                          "repeat-x",
                          "repeat-y",
                          "no-repeat"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_backgroundSize": {
                        "type": "string",
                        "title": "Size",
                        "description": "Auto: The background image is displayed in its original size. Cover: Resize the background image to cover the entire container, even if it has to stretch or crop the image. Contain: Resize the background image to make sure the image is fully visible",
                        "default": "",
                        "enum": [
                          "",
                          "auto",
                          "cover",
                          "contain"
                        ],
                        "_backboneForms": "Select"
                      },
                      "_backgroundPosition": {
                        "type": "string",
                        "title": "Position",
                        "description": "The first value is the horizontal position and the second value is the vertical",
                        "default": "",
                        "enum": [
                          "",
                          "left top",
                          "left center",
                          "left bottom",
                          "center top",
                          "center center",
                          "center bottom",
                          "right top",
                          "right center",
                          "right bottom"
                        ],
                        "_backboneForms": "Select"
                      }
                    }
                  },
                  "_minimumHeights": {
                    "type": "object",
                    "title": "Header minimum height",
                    "default": {},
                    "properties": {
                      "_xlarge": {
                        "type": "number",
                        "title": "Extra Large",
                        "description": "Minimum height should only be used in instances where the menu header height needs to be greater than the content e.g. to prevent a background image being cropped",
                        "default": 0
                      },
                      "_large": {
                        "type": "number",
                        "title": "Large",
                        "description": "Minimum height should only be used in instances where the menu header height needs to be greater than the content e.g. to prevent a background image being cropped",
                        "default": 0
                      },
                      "_medium": {
                        "type": "number",
                        "title": "Medium",
                        "description": "Minimum height should only be used in instances where the menu header height needs to be greater than the content e.g. to prevent a background image being cropped",
                        "default": 0
                      },
                      "_small": {
                        "type": "number",
                        "title": "Small",
                        "description": "Minimum height should only be used in instances where the menu header height needs to be greater than the content e.g. to prevent a background image being cropped",
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "_bookmarking": {
            "type": "object",
            "title": "Bookmarking",
            "default": {},
            "required": [
              "_level"
            ],
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Bookmarking",
                "description": "Controls whether the Bookmarking extension is enabled or disabled",
                "default": true
              },
              "_level": {
                "type": "string",
                "title": "Level",
                "description": "Allows you to set whether Bookmarking is done at page, block or component level",
                "default": "component",
                "enum": [
                  "page",
                  "block",
                  "component"
                ],
                "_backboneForms": "Select"
              },
              "_showPrompt": {
                "type": "boolean",
                "title": "Enable prompt",
                "description": "Controls whether the Bookmarking prompt is enabled or disabled. If not enabled, the user will be returned to their bookmarked position automatically",
                "default": true
              },
              "title": {
                "type": "string",
                "title": "Prompt title",
                "default": "Bookmarking",
                "_adapt": {
                  "translatable": true
                }
              },
              "body": {
                "type": "string",
                "title": "Prompt body",
                "default": "Would you like to continue where you left off?",
                "_adapt": {
                  "translatable": true
                }
              },
              "_buttons": {
                "type": "object",
                "title": "Prompt buttons",
                "default": {},
                "properties": {
                  "yes": {
                    "type": "string",
                    "title": "Confirm button text",
                    "default": "Yes",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "no": {
                    "type": "string",
                    "title": "Cancel button text",
                    "default": "No",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_spoor": {
            "type": "object",
            "title": "Spoor (SCORM)",
            "default": {},
            "properties": {
              "_messages": {
                "type": "object",
                "title": "Error messages",
                "description": "Optional object that can be used to amend/translate the error messages shown by the spoor extension",
                "default": {},
                "_backboneForms": {
                  "type": "CodeEditor",
                  "mode": "json"
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_showPageCompletion": {
                "type": "boolean",
                "title": "Include overall page completion",
                "description": "Controls whether the progress calculations are based on all components - or only those that are set to be displayed in Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              },
              "_isShownInNavigationBar": {
                "type": "boolean",
                "title": "Show progress in the navigation bar",
                "default": true
              },
              "_showAtCourseLevel": {
                "type": "boolean",
                "title": "Display all content objects and the current page components",
                "description": "Controls whether to display all content objects and the current page components together, or just the current page components",
                "default": false
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt"
        ]
      },
      "text-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "text-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "both",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component"
        ]
      },
      "hotgraphic-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "hotgraphic-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Select the icons to find out more.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "full-width",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "_setCompletionOn": {
            "type": "string",
            "title": "Completion criteria",
            "description": "Whether completion is based on the learner having viewed all the items - or just having viewed the component",
            "default": "allItems",
            "enum": [
              "inview",
              "allItems"
            ],
            "_backboneForms": "Select"
          },
          "_graphic": {
            "type": "object",
            "title": "Main graphic",
            "default": {},
            "properties": {
              "src": {
                "type": "string",
                "isObjectId": true,
                "title": "Source",
                "description": "This is the image that appears behind the pins",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "image"
                }
              },
              "alt": {
                "type": "string",
                "title": "Alternative text",
                "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "attribution": {
                "type": "string",
                "title": "Attribution",
                "description": "Text to be displayed as an attribution",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              }
            }
          },
          "mobileBody": {
            "type": "string",
            "title": "Mobile body",
            "description": "This body text is displayed on mobile devices when this component turns into a Narrative",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "mobileInstruction": {
            "type": "string",
            "title": "Mobile instruction",
            "description": "This instruction text is displayed on mobile devices when this component turns into a Narrative",
            "default": "Select the plus icon followed by the next arrow to find out more.",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "Text"
          },
          "_hidePagination": {
            "type": "boolean",
            "title": "Hide pagination",
            "description": "If enabled, the progress indicator and previous and next links will not be shown on the popup toolbar",
            "default": false
          },
          "_canCycleThroughPagination": {
            "type": "boolean",
            "title": "Loop items",
            "description": "If enabled, the popup navigation buttons will cycle continuously through the popup items (i.e. clicking next whilst on the last item will cause the first item to be shown)",
            "default": false
          },
          "_isNarrativeOnMobile": {
            "type": "boolean",
            "title": "Replace with Narrative component on mobile",
            "description": "If disabled, the Hotgraphic will render a scaled down 'desktop' version (pins over image / tiles) of the component in 'mobile' view instead of being replaced by a Narrative interaction",
            "default": true
          },
          "_useNumberedPins": {
            "type": "boolean",
            "title": "Use numbered pins",
            "description": "If enabled, the pin icons will be replaced with the item number. Useful if you want pins to be visited in a set order or show steps in a process",
            "default": false
          },
          "_useGraphicsAsPins": {
            "type": "boolean",
            "title": "Use grid layout",
            "description": "If enabled, the main graphic will be hidden and pins will be displayed as images which can be positioned using classes",
            "default": false
          },
          "_isRound": {
            "type": "boolean",
            "title": "Use circular popup item images",
            "description": "If enabled, a 50% border radius will be applied to the items pop up images",
            "default": false
          },
          "_items": {
            "type": "array",
            "title": "Items",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "Title displayed in the popup",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "body": {
                  "type": "string",
                  "title": "Body",
                  "description": "Body text displayed in the popup",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  },
                  "_backboneForms": "TextArea"
                },
                "strapline": {
                  "type": "string",
                  "title": "Strapline",
                  "description": "Strapline - displayed on mobile version only",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "_imageAlignment": {
                  "type": "string",
                  "title": "Image alignment",
                  "description": "Defines the horizontal alignment of the item image in the pop up. Left: Image aligned to the left of the text area. Right: Image aligned to the right of the text area. The default alignment is `right`",
                  "default": "right",
                  "enum": [
                    "left",
                    "right"
                  ],
                  "_backboneForms": "Select"
                },
                "_graphic": {
                  "type": "object",
                  "title": "Graphic",
                  "default": {},
                  "required": [
                    "src"
                  ],
                  "properties": {
                    "src": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Source",
                      "description": "Image to be displayed in a popup when this item is selected",
                      "_backboneForms": {
                        "type": "Asset",
                        "media": "image"
                      }
                    },
                    "alt": {
                      "type": "string",
                      "title": "Alternative text",
                      "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "attribution": {
                      "type": "string",
                      "title": "Attribution",
                      "description": "Text to be displayed as an attribution for the popup image",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "_classes": {
                      "type": "string",
                      "title": "Pin custom classes",
                      "description": "Allows you to specify custom CSS classes to be applied to the hotgraphic pin or, alternatively, to the hotspot tile when _useGraphicsAsPins is set to true",
                      "default": ""
                    }
                  }
                },
                "_pin": {
                  "type": "object",
                  "title": "Pin",
                  "default": {},
                  "properties": {
                    "src": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Source",
                      "description": "This is the pin image, leave blank for default",
                      "_backboneForms": {
                        "type": "Asset",
                        "media": "image"
                      }
                    },
                    "alt": {
                      "type": "string",
                      "title": "Alternative text",
                      "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    }
                  }
                },
                "_classes": {
                  "type": "string",
                  "title": "Popup item custom classes",
                  "description": "Allows you to specify custom CSS classes to be applied to the popup item. Supported classes are 'align-image-left', 'hide-desktop-image', and 'hide-popup-image' which aligns the item image to the left, hides the pop up image in desktop view, and hides the pop up image for all screen sizes respectively",
                  "default": ""
                },
                "_left": {
                  "type": "number",
                  "title": "Pin horizontal position (%)",
                  "default": 0
                },
                "_top": {
                  "type": "number",
                  "title": "Pin vertical position (%)",
                  "default": 0
                },
                "_tooltip": {
                  "type": "object",
                  "title": "Tooltip",
                  "properties": {
                    "_isEnabled": {
                      "type": "boolean",
                      "default": false,
                      "title": "Is enabled?",
                      "help": "If enabled, a tooltip will be displayed on hover over this item."
                    },
                    "text": {
                      "type": "string",
                      "default": "{{ariaLabel}}",
                      "title": "Tooltip text",
                      "help": "The tooltip text to display on hover over this item",
                      "translatable": true
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component"
        ]
      },
      "narrative-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "narrative-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Select the next and back arrows to find out more.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "full-width",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "mobileInstruction": {
            "type": "string",
            "title": "Mobile instruction",
            "description": "This is the mobile only instruction text",
            "default": "Select the plus icon followed by the next arrow to find out more.",
            "_adapt": {
              "translatable": true
            }
          },
          "_isTextBelowImage": {
            "type": "boolean",
            "title": "Move text area below image",
            "description": "If enabled, the text area drops below the image instead of being beside it",
            "default": false
          },
          "_isMobileTextBelowImage": {
            "type": "boolean",
            "title": "Move text area below image on mobile",
            "description": "If enabled, on mobile, the text area drops below the image instead of being behind the strapline button",
            "default": false
          },
          "_isStackedOnMobile": {
            "type": "boolean",
            "title": "Stack images and text on mobile",
            "description": "If enabled, on mobile, text and images will be stacked vertically. No interaction will be required to view all items as the user will simply scroll down.",
            "default": false
          },
          "_hasNavigationInTextArea": {
            "type": "boolean",
            "title": "Move navigation to text area",
            "description": "If enabled, all navigation elements will be moved to the text area",
            "default": false
          },
          "_setCompletionOn": {
            "type": "string",
            "title": "Completion criteria",
            "description": "Whether completion is based on the learner having viewed all the narrative items - or just having viewed the component",
            "default": "allItems",
            "enum": [
              "inview",
              "allItems"
            ],
            "_backboneForms": "Select"
          },
          "_items": {
            "type": "array",
            "title": "Items",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "body": {
                  "type": "string",
                  "title": "Body",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  },
                  "_backboneForms": "TextArea"
                },
                "_graphic": {
                  "type": "object",
                  "title": "Graphic",
                  "default": {},
                  "required": [
                    "src"
                  ],
                  "properties": {
                    "src": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Source",
                      "_backboneForms": {
                        "type": "Asset",
                        "media": "image"
                      }
                    },
                    "alt": {
                      "type": "string",
                      "title": "Alternative text",
                      "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "attribution": {
                      "type": "string",
                      "title": "Attribution",
                      "description": "Text to be displayed as an attribution",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    }
                  }
                },
                "strapline": {
                  "type": "string",
                  "title": "Strapline",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component",
          "_setCompletionOn"
        ]
      },
      "textinput-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "textinput-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Input your answer and select Submit.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "both",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "ariaQuestion": {
            "type": "string",
            "title": "ARIA Question",
            "description": "This will be read out by screen readers instead of reading the 'Display title', 'Body' & 'Instruction' fields when focusing on the options. To be clear and concise, ensure the text encompasses only the question associated.",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_items": {
            "type": "array",
            "title": "Items",
            "items": {
              "type": "object",
              "properties": {
                "_answers": {
                  "type": "array",
                  "title": "Answers",
                  "items": {
                    "type": "string"
                  }
                },
                "prefix": {
                  "type": "string",
                  "title": "Prefix",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "suffix": {
                  "type": "string",
                  "title": "Suffix",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "placeholder": {
                  "type": "string",
                  "title": "Placeholder",
                  "description": "Hint or expected value of the input field",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                }
              }
            }
          },
          "_attempts": {
            "type": "number",
            "title": "Allowed attempts",
            "description": "How many attempts the learner is allowed",
            "default": 1
          },
          "_canShowModelAnswer": {
            "type": "boolean",
            "title": "Enable correct answer toggle",
            "description": "Allow the user to view the 'model answer' if they answer the question incorrectly",
            "default": true
          },
          "_canShowFeedback": {
            "type": "boolean",
            "title": "Enable feedback",
            "default": true
          },
          "_canShowMarking": {
            "type": "boolean",
            "title": "Enable marking",
            "default": true
          },
          "_shouldDisplayAttempts": {
            "type": "boolean",
            "title": "Show number of remaining attempts",
            "default": false
          },
          "_isRandom": {
            "type": "boolean",
            "title": "Randomise items",
            "default": false
          },
          "_recordInteraction": {
            "type": "boolean",
            "title": "Record interaction",
            "description": "If disabled, recording the user's answer(s) to this question to cmi.interactions on the LMS will be disabled for this component only",
            "default": true
          },
          "_questionWeight": {
            "type": "number",
            "title": "Question weight",
            "description": "How much this question is worth",
            "default": 1
          },
          "_allowsAnyCase": {
            "type": "boolean",
            "title": "Disable case sensitivity",
            "description": "Should the check of the user's answer(s) be case-insensitive or case-sensitive?",
            "default": false
          },
          "_allowsPunctuation": {
            "type": "boolean",
            "title": "Remove punctuation from user input",
            "default": false
          },
          "_feedback": {
            "type": "object",
            "title": "Feedback",
            "default": {},
            "properties": {
              "title": {
                "type": "string",
                "title": "Title",
                "description": "Title text for the feedback",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "altTitle": {
                "type": "string",
                "title": "Alternative Feedback Title",
                "description": "Text read out by screen readers if no visual title is included",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "correct": {
                "type": "string",
                "title": "Correct feedback",
                "description": "Correct answer feedback for this question",
                "default": "",
                "_adapt": {
                  "translatable": true
                },
                "_backboneForms": "TextArea"
              },
              "_incorrect": {
                "type": "object",
                "title": "Incorrect",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default incorrect feedback",
                    "description": "Incorrect answer feedback for the final attempt",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Incorrect answer feedback for any attempt apart from the last attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              },
              "_partlyCorrect": {
                "type": "object",
                "title": "Partly correct",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default partly correct feedback",
                    "description": "Partly correct answer feedback for the final attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Partly correct answer feedback for any attempt apart from the last attempt. If you leave this blank, the default partly correct feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              }
            }
          },
          "_buttons": {
            "type": "object",
            "title": "Button overrides",
            "default": {},
            "properties": {
              "_submit": {
                "type": "object",
                "title": "Submit",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_reset": {
                "type": "object",
                "title": "Reset",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showCorrectAnswer": {
                "type": "object",
                "title": "Show correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_hideCorrectAnswer": {
                "type": "object",
                "title": "Hide correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showFeedback": {
                "type": "object",
                "title": "Show feedback",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "remainingAttemptsText": {
                "type": "string",
                "title": "Remaining attempts label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "remainingAttemptText": {
                "type": "string",
                "title": "Final attempt label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component",
          "_attempts"
        ]
      },
      "media-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "media-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Select the play button to start the video.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "both",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "_media": {
            "type": "object",
            "title": "Media",
            "default": {},
            "properties": {
              "mp4": {
                "type": "string",
                "isObjectId": true,
                "title": "MP4 source",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "video"
                }
              },
              "ogv": {
                "type": "string",
                "isObjectId": true,
                "title": "OGV source",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "video"
                }
              },
              "webm": {
                "type": "string",
                "isObjectId": true,
                "title": "WebM source",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "video"
                }
              },
              "mp3": {
                "type": "string",
                "isObjectId": true,
                "title": "MP3 source",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "audio"
                }
              },
              "source": {
                "type": "string",
                "title": "External source",
                "description": "Enter an external link, such as a YouTube URL",
                "default": ""
              },
              "type": {
                "type": "string",
                "title": "External source type",
                "description": "Select the external source type, for a YouTube link this would be 'video/youtube', and 'video/vimeo' for Vimeo",
                "default": "",
                "enum": [
                  "",
                  "video/youtube",
                  "video/vimeo"
                ],
                "_backboneForms": "Select"
              },
              "poster": {
                "type": "string",
                "isObjectId": true,
                "title": "Poster frame",
                "description": "Image displayed before the video is played (except on Vimeo)",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "image"
                }
              },
              "cc": {
                "type": "array",
                "title": "Closed captions",
                "items": {
                  "type": "object",
                  "properties": {
                    "srclang": {
                      "type": "string",
                      "title": "Language code",
                      "default": ""
                    },
                    "src": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "WebVTT source",
                      "_backboneForms": {
                        "type": "Asset",
                        "media": "other"
                      }
                    }
                  }
                }
              }
            }
          },
          "_setCompletionOn": {
            "type": "string",
            "title": "Completion trigger",
            "description": "Defines what media event should trigger completion of this component",
            "default": "play",
            "enum": [
              "inview",
              "play",
              "ended"
            ],
            "_backboneForms": "Select"
          },
          "_useClosedCaptions": {
            "type": "boolean",
            "title": "Enable closed captions",
            "default": false
          },
          "_startLanguage": {
            "type": "string",
            "title": "Initial closed captions language",
            "description": "Select which closed caption language to display by default. Only required when closed captions are enabled and there are multiple languages",
            "default": "en"
          },
          "_showVolumeControl": {
            "type": "boolean",
            "title": "Show volume control (not supported on mobile)",
            "description": "When enabled, the volume control will appear in the media player. On mobile devices the audio level is controlled the device's physical volume controls",
            "default": false
          },
          "_startVolume": {
            "type": "string",
            "title": "Default volume (not supported on mobile)",
            "description": "Defines the default volume. On mobile devices the audio level is under the user's physical control",
            "default": "80%",
            "enum": [
              "0%",
              "10%",
              "20%",
              "30%",
              "40%",
              "50%",
              "60%",
              "70%",
              "80%",
              "90%",
              "100%"
            ],
            "_backboneForms": "Select"
          },
          "_allowFullScreen": {
            "type": "boolean",
            "title": "Allow full screen",
            "default": false
          },
          "_aspectRatio": {
            "type": "string",
            "title": "Aspect ratio",
            "default": "landscape",
            "enum": [
              "landscape",
              "portrait",
              "square"
            ],
            "_backboneForms": "Select"
          },
          "_pauseWhenOffScreen": {
            "type": "boolean",
            "title": "Pause playback when no longer in view",
            "default": false
          },
          "_playsinline": {
            "type": "boolean",
            "title": "Play videos inline on iOS",
            "description": "If enabled, videos will play 'inline' on iPhones (the same way they do on iPads). Note that this feature is only available in iOS10 and above",
            "default": false
          },
          "_preventForwardScrubbing": {
            "type": "boolean",
            "title": "Attempt to prevent media scrubbing",
            "description": "If enabled, will attempt to prevent users from skipping ahead in audio/video",
            "default": false
          },
          "_transcript": {
            "type": "object",
            "title": "Transcript",
            "default": {},
            "properties": {
              "_setCompletionOnView": {
                "type": "boolean",
                "title": "Mark this component as complete when transcript is shown",
                "default": true
              },
              "_inlineTranscript": {
                "type": "boolean",
                "title": "Enable inline transcript",
                "default": false
              },
              "_externalTranscript": {
                "type": "boolean",
                "title": "Enable linked transcript file",
                "default": false
              },
              "inlineTranscriptButton": {
                "type": "string",
                "title": "Inline transcript open button label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "inlineTranscriptCloseButton": {
                "type": "string",
                "title": "Inline transcript close button label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "inlineTranscriptBody": {
                "type": "string",
                "title": "Inline transcript",
                "default": "",
                "_adapt": {
                  "translatable": true
                },
                "_backboneForms": "TextArea"
              },
              "transcriptLinkButton": {
                "type": "string",
                "title": "Linked transcript file button label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "transcriptLink": {
                "type": "string",
                "isObjectId": true,
                "title": "Linked transcript file source",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "other"
                }
              }
            }
          },
          "_playerOptions": {
            "type": "object",
            "title": "Player options",
            "description": "Optional object that can be used to customize the player",
            "default": {},
            "_backboneForms": {
              "type": "CodeEditor",
              "mode": "json"
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component",
          "_setCompletionOn",
          "_startVolume"
        ]
      },
      "matching-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "matching-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Choose an option from each dropdown list and select Submit.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "half-width",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "ariaQuestion": {
            "type": "string",
            "title": "ARIA question",
            "description": "This will be read out by screen readers instead of reading the 'Display title', 'Body' & 'Instruction' fields when focusing on the options. To be clear and concise, ensure the text encompasses only the question associated.",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_attempts": {
            "type": "number",
            "title": "Allowed attempts",
            "description": "How many attempts the learner is allowed",
            "default": 1
          },
          "_canShowModelAnswer": {
            "type": "boolean",
            "title": "Enable correct answer toggle",
            "description": "Allow the user to view the 'model answer' if they answer the question incorrectly",
            "default": true
          },
          "_canShowFeedback": {
            "type": "boolean",
            "title": "Enable feedback",
            "default": true
          },
          "_canShowMarking": {
            "type": "boolean",
            "title": "Enable marking",
            "default": true
          },
          "_shouldResetAllAnswers": {
            "type": "boolean",
            "title": "Reset correct answers between attempts",
            "description": "Controls whether all - or just incorrect - answers should be reset when the question is reset",
            "default": true
          },
          "_shouldDisplayAttempts": {
            "type": "boolean",
            "title": "Show number of remaining attempts",
            "default": false
          },
          "_isRandom": {
            "type": "boolean",
            "title": "Randomise answers",
            "default": false
          },
          "_isRandomQuestionOrder": {
            "type": "boolean",
            "title": "Randomise questions",
            "default": false
          },
          "_questionWeight": {
            "type": "number",
            "title": "Question weight",
            "description": "How much this question is worth",
            "default": 1
          },
          "_recordInteraction": {
            "type": "boolean",
            "title": "Record interaction",
            "description": "If disabled, recording the user's answer(s) to this question to cmi.interactions on the LMS will be disabled for this component only",
            "default": true
          },
          "placeholder": {
            "type": "string",
            "title": "Placeholder",
            "description": "Text that will be displayed at the top of each list of options",
            "default": "Please select an option",
            "_adapt": {
              "translatable": true
            }
          },
          "_items": {
            "type": "array",
            "title": "Items",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "title": "Text",
                  "description": "Title text displayed above the matching option",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "_options": {
                  "type": "array",
                  "title": "Options",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "title": "Text",
                        "description": "Option text",
                        "default": "",
                        "_adapt": {
                          "translatable": true
                        }
                      },
                      "_isCorrect": {
                        "type": "boolean",
                        "title": "Mark this option as correct",
                        "default": false
                      }
                    }
                  }
                }
              }
            }
          },
          "_feedback": {
            "type": "object",
            "title": "Feedback",
            "default": {},
            "properties": {
              "title": {
                "type": "string",
                "title": "Title",
                "description": "Title text for the feedback",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "altTitle": {
                "type": "string",
                "title": "Alternative Feedback Title",
                "description": "Text read out by screen readers if no visual title is included",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "correct": {
                "type": "string",
                "title": "Correct feedback",
                "description": "Correct answer feedback for this question",
                "default": "",
                "_adapt": {
                  "translatable": true
                },
                "_backboneForms": "TextArea"
              },
              "_incorrect": {
                "type": "object",
                "title": "Incorrect",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default incorrect feedback",
                    "description": "Incorrect answer feedback for the final attempt",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Incorrect answer feedback for any attempt apart from the last attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              },
              "_partlyCorrect": {
                "type": "object",
                "title": "Partly correct",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default partly correct feedback",
                    "description": "Partly correct answer feedback for the final attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Partly correct answer feedback for any attempt apart from the last attempt. If you leave this blank, the default partly correct feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              }
            }
          },
          "_buttons": {
            "type": "object",
            "title": "Button overrides",
            "default": {},
            "properties": {
              "_submit": {
                "type": "object",
                "title": "Submit",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_reset": {
                "type": "object",
                "title": "Reset",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showCorrectAnswer": {
                "type": "object",
                "title": "Show correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_hideCorrectAnswer": {
                "type": "object",
                "title": "Hide correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showFeedback": {
                "type": "object",
                "title": "Show feedback",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "remainingAttemptsText": {
                "type": "string",
                "title": "Remaining attempts label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "remainingAttemptText": {
                "type": "string",
                "title": "Final attempt label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component",
          "_attempts",
          "placeholder"
        ]
      },
      "graphic-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "graphic-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "both",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "_graphic": {
            "type": "object",
            "title": "Graphic",
            "default": {},
            "required": [
              "large",
              "small"
            ],
            "properties": {
              "alt": {
                "type": "string",
                "title": "Alternative text",
                "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "longdescription": {
                "type": "string",
                "title": "Long image description",
                "help": "A long description of the image. This text appear below the image.",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "large": {
                "type": "string",
                "isObjectId": true,
                "title": "Large",
                "description": "The large sized image for desktop devices",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "image"
                }
              },
              "small": {
                "type": "string",
                "isObjectId": true,
                "title": "Small",
                "description": "The small sized image for mobile devices",
                "_backboneForms": {
                  "type": "Asset",
                  "media": "image"
                }
              },
              "attribution": {
                "type": "string",
                "title": "Attribution",
                "description": "Text to be displayed as an attribution",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "_url": {
                "type": "string",
                "title": "URL",
                "description": "When the graphic is selected this is the url it will follow.",
                "default": ""
              },
              "_target": {
                "type": "string",
                "title": "Target attribute",
                "description": "This targets where to open the link. Acceptable values are '_blank' (opens the linked document in a new window or tab), '_parent' (opens the linked document in the parent frame), '_top' (opens the linked document in the full body of the window) or '_self' (opens the linked document in the same frame as it was selected. If no value is set, the default is '_blank'.",
                "enum": [
                  "_blank",
                  "_self",
                  "_parent",
                  "_top"
                ],
                "default": "_blank",
                "_backboneForms": "Select"
              }
            }
          },
          "_isScrollable": {
            "type": "boolean",
            "title": "Enable horizontal scrolling",
            "description": "Allow the user to view the 'model answer' if they answer the question incorrectly",
            "default": false
          },
          "_defaultScrollPercent": {
            "type": "number",
            "title": "Scroll percent",
            "description": "0 is left most, 50 is in the middle, 100 is right most.",
            "default": 0
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component"
        ]
      },
      "mcq-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "mcq-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Choose {{#if _isRadio}}one option{{else}}one or more options{{/if}} then select Submit.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "half-width",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "ariaQuestion": {
            "type": "string",
            "title": "ARIA question",
            "description": "This will be read out by screen readers instead of reading the 'Display title', 'Body' & 'Instruction' fields when focusing on the options. To be clear and concise, ensure the text encompasses only the question associated.",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_items": {
            "type": "array",
            "title": "Items",
            "description": "The possible answers available to the learner",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "title": "Text",
                  "description": "This text will display as the answer text",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "altText": {
                  "type": "string",
                  "description": "This will be read out by screen readers instead of reading 'text'. Optional for providing alternative text, for example, to specify how a word should be pronounced.",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "_shouldBeSelected": {
                  "type": "boolean",
                  "title": "Mark this option as correct",
                  "default": false
                },
                "_isPartlyCorrect": {
                  "type": "boolean",
                  "title": "Mark this option as partly correct",
                  "default": false
                },
                "feedback": {
                  "type": "string",
                  "title": "Answer-specific feedback",
                  "description": "When 'Selectable items' is set to 1, this can be used to give the user feedback specific to the answer they selected - if incorrect",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  },
                  "_backboneForms": "TextArea"
                },
                "_score": {
                  "type": "number",
                  "title": "Score",
                  "description": "If item scoring is enabled, selected item scores are summed to give the question score",
                  "default": 0
                }
              }
            }
          },
          "_attempts": {
            "type": "number",
            "title": "Allowed attempts",
            "description": "How many attempts the learner is allowed",
            "default": 1
          },
          "_canShowModelAnswer": {
            "type": "boolean",
            "title": "Enable correct answer toggle",
            "description": "Allow the user to view the 'model answer' if they answer the question incorrectly",
            "default": true
          },
          "_canShowFeedback": {
            "type": "boolean",
            "title": "Enable feedback",
            "default": true
          },
          "_canShowMarking": {
            "type": "boolean",
            "title": "Enable marking",
            "default": true
          },
          "_shouldDisplayAttempts": {
            "type": "boolean",
            "title": "Show number of remaining attempts",
            "default": false
          },
          "_isRandom": {
            "type": "boolean",
            "title": "Randomise answers",
            "default": false
          },
          "_recordInteraction": {
            "type": "boolean",
            "title": "Record interaction",
            "description": "If disabled, recording the user's answer(s) to this question to cmi.interactions on the LMS will be disabled for this component only",
            "default": true
          },
          "_hasItemScoring": {
            "type": "boolean",
            "title": "Enable item scoring",
            "description": "When disabled, this question scores 0 for incorrect and 'Question weight' for correct. When enabled, this question scores by summing the scores of the selected options",
            "default": false
          },
          "_questionWeight": {
            "type": "number",
            "title": "Question weight",
            "description": "When item scoring is disabled, this is the question score for a correct response",
            "default": 1
          },
          "_selectable": {
            "type": "number",
            "title": "Selectable items",
            "description": "How many items are selectable",
            "default": 1
          },
          "_feedback": {
            "type": "object",
            "title": "Feedback",
            "default": {},
            "properties": {
              "title": {
                "type": "string",
                "title": "Title",
                "description": "Title text for the feedback",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "altTitle": {
                "type": "string",
                "title": "Alternative Feedback Title",
                "description": "Text read out by screen readers if no visual title is included",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "correct": {
                "type": "string",
                "title": "Correct feedback",
                "description": "Correct answer feedback for this question",
                "default": "",
                "_adapt": {
                  "translatable": true
                },
                "_backboneForms": "TextArea"
              },
              "_incorrect": {
                "type": "object",
                "title": "Incorrect",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default incorrect feedback",
                    "description": "Incorrect answer feedback for the final attempt",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Incorrect answer feedback for any attempt apart from the last attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              },
              "_partlyCorrect": {
                "type": "object",
                "title": "Partly correct",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default partly correct feedback",
                    "description": "Partly correct answer feedback for the final attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Partly correct answer feedback for any attempt apart from the last attempt. If you leave this blank, the default partly correct feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              }
            }
          },
          "_buttons": {
            "type": "object",
            "title": "Button overrides",
            "default": {},
            "properties": {
              "_submit": {
                "type": "object",
                "title": "Submit",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_reset": {
                "type": "object",
                "title": "Reset",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showCorrectAnswer": {
                "type": "object",
                "title": "Show correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_hideCorrectAnswer": {
                "type": "object",
                "title": "Hide correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showFeedback": {
                "type": "object",
                "title": "Show feedback",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "remainingAttemptsText": {
                "type": "string",
                "title": "Remaining attempts label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "remainingAttemptText": {
                "type": "string",
                "title": "Final attempt label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component",
          "_attempts",
          "_selectable"
        ]
      },
      "assessmentResults-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "assessmentResults-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "both",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "_isVisibleBeforeCompletion": {
            "type": "boolean",
            "title": "Show before assessment completion",
            "description": "Controls whether this component will be visible or hidden prior to the assessment having been completed",
            "default": true
          },
          "_setCompletionOn": {
            "type": "string",
            "title": "Completion criterion",
            "description": "Set to 'pass' to have the component mark as completed only if the learner passed the associated assessment",
            "default": "inview",
            "enum": [
              "inview",
              "pass"
            ],
            "_backboneForms": "Select"
          },
          "_resetType": {
            "type": "string",
            "title": "Reset type",
            "description": "Set to 'inherit' to use the same reset type as the assessment. Set to 'hard' to have the component's completion reset when the assessment is reset, set to 'soft' if you don't want completion to be reset",
            "default": "inherit",
            "enum": [
              "inherit",
              "hard",
              "soft"
            ],
            "_backboneForms": "Select"
          },
          "_assessmentId": {
            "type": "string",
            "title": "Linked assessment ID",
            "description": "This is the unique name of the assessment for which results should be displayed. If you only have one assessment you can leave this blank",
            "default": ""
          },
          "_retry": {
            "type": "object",
            "title": "Retry",
            "default": {},
            "properties": {
              "button": {
                "type": "string",
                "title": "Retry button text",
                "default": "Retry Assessment",
                "_adapt": {
                  "translatable": true
                }
              },
              "feedback": {
                "type": "string",
                "title": "Retry feedback",
                "description": "This text is displayed only when more attempts remain. You can use the following variables: {{attemptsSpent}}, {{attempts}}, {{attemptsLeft}}, {{{score}}}, {{{maxScore}}}",
                "default": "",
                "_adapt": {
                  "translatable": true
                },
                "_backboneForms": "TextArea"
              },
              "_routeToAssessment": {
                "type": "boolean",
                "title": "Redirect to assessment on retry",
                "description": "When enabled, this will take the user back to the assessment when the \"Retry Assessment\" button is clicked",
                "default": false
              }
            }
          },
          "_completionBody": {
            "type": "string",
            "title": "Default feedback",
            "description": "This text overwrites the standard body attribute upon completion of the assessment. It may make use of the following variables: {{attemptsSpent}}, {{attempts}}, {{attemptsLeft}}, {{{score}}}, {{{maxScore}}}. {{{feedback}}}, representing the feedback assigned to the appropriate band, is also allowed",
            "default": "This component you're reading is a results component.<br>You have finished the assessment.<br>You scored {{{score}}} out of {{{maxScore}}}. {{{feedback}}}",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "_bands": {
            "type": "array",
            "title": "Feedback bands",
            "items": {
              "type": "object",
              "properties": {
                "_score": {
                  "type": "number",
                  "title": "Minimum score",
                  "description": "Enter a value representing the raw score or percentage for the start of the range",
                  "default": 0
                },
                "feedback": {
                  "type": "string",
                  "title": "Feedback",
                  "description": "This text will be displayed to the learner when the learner's score falls within this band's range",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  },
                  "_backboneForms": "TextArea"
                },
                "feedbackNotFinal": {
                  "type": "string",
                  "title": "Feedback (not final attempt)",
                  "description": "This optional text will be displayed to the learner when the learner's score falls within this band's range and when the learner still has attempts remaining.",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  },
                  "_backboneForms": "TextArea"
                },
                "_allowRetry": {
                  "type": "boolean",
                  "title": "Allow retry",
                  "description": "Determines whether the learner will be allowed to re-attempt the assessment. If not set, the learner will not be allowed to retry the assessment regardless of any remaining attempts",
                  "default": true
                },
                "_classes": {
                  "type": "string",
                  "title": "Custom article classes",
                  "description": "Classes to be applied to the containing article. Allows for custom styling based on the band the learner's score falls into",
                  "default": ""
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component"
        ]
      },
      "gmcq-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "gmcq-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Choose {{#if _isRadio}}one option{{else}}one or more options{{/if}} then select Submit.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "both",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "ariaQuestion": {
            "type": "string",
            "title": "ARIA question",
            "description": "This will be read out by screen readers instead of reading the 'Display title', 'Body' & 'Instruction' fields when focusing on the options. To be clear and concise, ensure the text encompasses only the question associated.",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_items": {
            "type": "array",
            "title": "Items",
            "items": {
              "type": "object",
              "properties": {
                "_graphic": {
                  "type": "object",
                  "title": "Graphic",
                  "default": {},
                  "properties": {
                    "large": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Large",
                      "description": "Large image for this item - used on desktop",
                      "default": "",
                      "_backboneForms": {
                        "type": "Asset",
                        "media": "image"
                      }
                    },
                    "small": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Small",
                      "description": "Small image for this item - used on mobiles",
                      "_backboneForms": {
                        "type": "Asset",
                        "media": "image"
                      }
                    },
                    "alt": {
                      "type": "string",
                      "title": "Alternative text",
                      "description": "A description of the image; required when it has meaning that must be conveyed to the learner. Avoid duplication if the item text already provides context and leave blank",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "attribution": {
                      "type": "string",
                      "title": "Attribution",
                      "description": "Text to be displayed as an attribution",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    }
                  }
                },
                "text": {
                  "type": "string",
                  "title": "Text",
                  "description": "Text that will be displayed with the image",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "altText": {
                  "type": "string",
                  "description": "This will be read out by screen readers instead of reading 'text'. Optional for providing alternative text, for example, to specify how a word should be pronounced.",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "_shouldBeSelected": {
                  "type": "boolean",
                  "title": "Mark this option as correct",
                  "default": false
                },
                "_isPartlyCorrect": {
                  "type": "boolean",
                  "title": "Mark this option as partly correct",
                  "default": false
                },
                "feedback": {
                  "type": "string",
                  "title": "Answer-specific feedback",
                  "description": "When 'Selectable items' is set to 1, this can be used to give the user feedback specific to the answer they selected - if incorrect",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "_score": {
                  "type": "number",
                  "title": "Score",
                  "description": "If item scoring is enabled, selected item scores are summed to give the question score",
                  "default": 0
                }
              }
            }
          },
          "_attempts": {
            "type": "number",
            "title": "Allowed attempts",
            "description": "How many attempts the learner is allowed",
            "default": 1
          },
          "_canShowModelAnswer": {
            "type": "boolean",
            "title": "Enable correct answer toggle",
            "description": "Allow the user to view the 'model answer' if they answer the question incorrectly",
            "default": true
          },
          "_canShowFeedback": {
            "type": "boolean",
            "title": "Enable feedback",
            "default": true
          },
          "_canShowMarking": {
            "type": "boolean",
            "title": "Enable marking",
            "default": true
          },
          "_shouldDisplayAttempts": {
            "type": "boolean",
            "title": "Show number of remaining attempts",
            "default": false
          },
          "_isRandom": {
            "type": "boolean",
            "title": "Randomise answers",
            "default": false
          },
          "_hasItemScoring": {
            "type": "boolean",
            "title": "Enable item scoring",
            "description": "When disabled, this question scores 0 for incorrect and 'Question weight' for correct. When enabled, this question scores by summing the scores of the selected options",
            "default": false
          },
          "_questionWeight": {
            "type": "number",
            "title": "Question weight",
            "description": "When item scoring is disabled, this is the question score for a correct response",
            "default": 1
          },
          "_recordInteraction": {
            "type": "boolean",
            "title": "Record interaction",
            "description": "If disabled, recording the user's answer(s) to this question to cmi.interactions on the LMS will be disabled for this component only",
            "default": true
          },
          "_columns": {
            "type": "number",
            "title": "Columns",
            "description": "Set the number of columns. If value is '0', component uses the default layout",
            "default": 0
          },
          "_selectable": {
            "type": "number",
            "title": "Selectable items",
            "description": "How many items are selectable",
            "default": 1
          },
          "_feedback": {
            "type": "object",
            "title": "Feedback",
            "default": {},
            "properties": {
              "title": {
                "type": "string",
                "title": "Title",
                "description": "Title text for the feedback",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "altTitle": {
                "type": "string",
                "title": "Alternative Feedback Title",
                "description": "Text read out by screen readers if no visual title is included",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "correct": {
                "type": "string",
                "title": "Correct",
                "description": "Correct answer feedback for this question",
                "default": "",
                "_adapt": {
                  "translatable": true
                },
                "_backboneForms": "TextArea"
              },
              "_incorrect": {
                "type": "object",
                "title": "Incorrect",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default incorrect feedback",
                    "description": "Incorrect answer feedback for the final attempt",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Incorrect answer feedback for any attempt apart from the last attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              },
              "_partlyCorrect": {
                "type": "object",
                "title": "Partly correct",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default partly correct feedback",
                    "description": "Partly correct answer feedback for the final attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Partly correct answer feedback for any attempt apart from the last attempt. If you leave this blank, the default partly correct feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              }
            }
          },
          "_buttons": {
            "type": "object",
            "title": "Button overrides",
            "default": {},
            "properties": {
              "_submit": {
                "type": "object",
                "title": "Submit",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_reset": {
                "type": "object",
                "title": "Reset",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showCorrectAnswer": {
                "type": "object",
                "title": "Show correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_hideCorrectAnswer": {
                "type": "object",
                "title": "Hide correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showFeedback": {
                "type": "object",
                "title": "Show feedback",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "remainingAttemptsText": {
                "type": "string",
                "title": "Remaining attempts label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "remainingAttemptText": {
                "type": "string",
                "title": "Final attempt label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component",
          "_attempts",
          "_selectable"
        ]
      },
      "slider-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "slider-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Drag the slider to make your choice and select Submit.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "both",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "ariaQuestion": {
            "type": "string",
            "title": "ARIA question",
            "description": "This will be read out by screen readers instead of reading the 'Display title', 'Body' & 'Instruction' fields when focusing on the options. To be clear and concise, ensure the text encompasses only the question associated.",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "ariaScaleName": {
            "type": "string",
            "title": "ARIA scale name",
            "description": "This will be read out by screen readers when focusing on the scale input (slider handle). An appropriate name should give context to which the scale is a measurement of.",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_attempts": {
            "type": "number",
            "title": "Allowed attempts",
            "description": "How many attempts the learner is allowed",
            "default": 1
          },
          "_canShowModelAnswer": {
            "type": "boolean",
            "title": "Enable correct answer toggle",
            "description": "Allow the user to view the 'model answer' if they answer the question incorrectly",
            "default": true
          },
          "_canShowFeedback": {
            "type": "boolean",
            "title": "Enable feedback",
            "default": true
          },
          "_canShowMarking": {
            "type": "boolean",
            "title": "Enable marking",
            "default": true
          },
          "_shouldDisplayAttempts": {
            "type": "boolean",
            "title": "Show number of remaining attempts",
            "default": false
          },
          "_questionWeight": {
            "type": "number",
            "title": "Question weight",
            "description": "How much this question is worth",
            "default": 1
          },
          "_recordInteraction": {
            "type": "boolean",
            "title": "Record interaction",
            "description": "If disabled, recording the user's answer(s) to this question to cmi.interactions on the LMS will be disabled for this component only",
            "default": true
          },
          "labelStart": {
            "type": "string",
            "title": "Scale start label",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "labelEnd": {
            "type": "string",
            "title": "Scale end label",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_scaleStart": {
            "type": "number",
            "title": "Scale start number",
            "default": 1
          },
          "_scaleEnd": {
            "type": "number",
            "title": "Scale end number",
            "default": 1
          },
          "_scaleStep": {
            "type": "number",
            "title": "Scale step",
            "description": "The amount the scale should increment by",
            "default": 1
          },
          "scaleStepPrefix": {
            "type": "string",
            "title": "Prefix to add to each slider step",
            "description": "For instance, a '$' can be used as a prefix to indicate currency in dollars (ex. $100)",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "scaleStepSuffix": {
            "type": "string",
            "title": "Suffix to add to each slider step",
            "description": "For instance, a 'V' can be used as a suffix to indicate voltage (ex. 4V)",
            "default": "",
            "_adapt": {
              "translatable": true
            }
          },
          "_correctAnswer": {
            "type": "string",
            "title": "Correct answer",
            "description": "Correct answer on the scale",
            "default": ""
          },
          "_correctRange": {
            "type": "object",
            "title": "Correct range",
            "default": {},
            "properties": {
              "_bottom": {
                "type": "number",
                "title": "Minimum",
                "description": "Correct bottom range answer on the scale -- ignored when 'Correct answer' is set",
                "default": 0
              },
              "_top": {
                "type": "number",
                "title": "Maximum",
                "description": "Correct top range answer on the scale -- ignored when 'Correct answer' is set",
                "default": 0
              }
            }
          },
          "_showScaleIndicator": {
            "type": "boolean",
            "title": "Show position indicator",
            "description": "Controls whether a position indicator on the scale should be shown or not",
            "default": true
          },
          "_showNumber": {
            "type": "boolean",
            "title": "Show number on indicator",
            "description": "Controls whether the position number on the indicator should be shown or not",
            "default": true
          },
          "_showScale": {
            "type": "boolean",
            "title": "Show scale",
            "description": "Controls whether to show the lines and numbers of the scale or not",
            "default": true
          },
          "_showScaleNumbers": {
            "type": "boolean",
            "title": "Show scale numbers",
            "description": "Controls whether the numbers on the scale should be shown or not",
            "default": true
          },
          "_feedback": {
            "type": "object",
            "title": "Feedback",
            "default": {},
            "properties": {
              "title": {
                "type": "string",
                "title": "Title",
                "description": "Title text for the feedback",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "altTitle": {
                "type": "string",
                "title": "Alternative Feedback Title",
                "description": "Text read out by screen readers if no visual title is included",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "correct": {
                "type": "string",
                "title": "Correct feedback",
                "description": "Correct answer feedback for this question",
                "default": "",
                "_adapt": {
                  "translatable": true
                },
                "_backboneForms": "TextArea"
              },
              "_incorrect": {
                "type": "object",
                "title": "Incorrect",
                "default": {},
                "properties": {
                  "final": {
                    "type": "string",
                    "title": "Default incorrect feedback",
                    "description": "Incorrect answer feedback for the final attempt",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  },
                  "notFinal": {
                    "type": "string",
                    "title": "Retry feedback",
                    "description": "Incorrect answer feedback for any attempt apart from the last attempt. If you leave this blank, the default incorrect feedback will be used instead",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    },
                    "_backboneForms": "TextArea"
                  }
                }
              }
            }
          },
          "_buttons": {
            "type": "object",
            "title": "Button overrides",
            "default": {},
            "properties": {
              "_submit": {
                "type": "object",
                "title": "Submit",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_reset": {
                "type": "object",
                "title": "Reset",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showCorrectAnswer": {
                "type": "object",
                "title": "Show correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_hideCorrectAnswer": {
                "type": "object",
                "title": "Hide correct answer",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "_showFeedback": {
                "type": "object",
                "title": "Show feedback",
                "default": {},
                "properties": {
                  "buttonText": {
                    "type": "string",
                    "title": "Button text",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "ARIA label",
                    "default": "",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              },
              "remainingAttemptsText": {
                "type": "string",
                "title": "Remaining attempts label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              },
              "remainingAttemptText": {
                "type": "string",
                "title": "Final attempt label",
                "default": "",
                "_adapt": {
                  "translatable": true
                }
              }
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component",
          "ariaScaleName",
          "_attempts",
          "_scaleStart",
          "_scaleEnd"
        ]
      },
      "blank-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "blank-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "",
            "_adapt": {
              "translatable": false
            },
            "_backboneForms": {
              "type": "DisplayTitle",
              "showInUi": false
            }
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": false
            },
            "_backboneForms": {
              "type": "TextArea",
              "showInUi": false
            }
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": {
              "showInUi": false
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Is this optional?",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": true,
            "_adapt": {
              "isSetting": true
            },
            "isSetting": true,
            "inputType": "Checkbox",
            "validators": [],
            "help": "An optional component does not have to be completed by the user."
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "both",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component"
        ]
      },
      "accordion-component": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$anchor": "accordion-component",
        "description": "The base schema inherited by all other schemas",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "isObjectId": true
          },
          "_type": {
            "type": "string",
            "title": "Type"
          },
          "_friendlyId": {
            "type": "string",
            "title": "Friendly id",
            "description": "A human-readable ID for this content object which will replace the standard _id field on course build (useful in instances where the _id must be specified in the config of an extension). Must be unique to this course."
          },
          "_parentId": {
            "type": "string",
            "isObjectId": true,
            "title": "Parent id"
          },
          "_courseId": {
            "type": "string",
            "isObjectId": true,
            "title": "Course id",
            "_adapt": {
              "editorOnly": true
            }
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            }
          },
          "displayTitle": {
            "type": "string",
            "title": "Display title",
            "description": "When viewing an element - this is the title that will be displayed on the page",
            "default": "Untitled",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "DisplayTitle"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "default": "",
            "_adapt": {
              "translatable": true
            },
            "_backboneForms": "TextArea"
          },
          "instruction": {
            "type": "string",
            "title": "Instruction",
            "default": "Select the headings to find out more.",
            "_adapt": {
              "translatable": true
            }
          },
          "_classes": {
            "type": "string",
            "title": "Custom classes",
            "description": "Used to style or manipulate the look and feel of this element. These are predefined in the theme or added in Project Settings > Custom CSS/Less code",
            "default": "",
            "_adapt": {
              "isSetting": true
            }
          },
          "_isOptional": {
            "type": "boolean",
            "title": "Make this element optional",
            "description": "An optional element does not have to be completed, nor do any of the elements contained within it",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isAvailable": {
            "type": "boolean",
            "title": "Make this element available",
            "description": "Controls whether this element and its contents are available in the course or not",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isHidden": {
            "type": "boolean",
            "title": "Hide this element",
            "description": "Enabling this is equivalent to applying the CSS 'display:none' to the element",
            "default": false,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isVisible": {
            "type": "boolean",
            "title": "Make this element visible",
            "description": "Disabling this is equivalent to applying the CSS 'visibility:hidden' to the element",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_isA11yCompletionDescriptionEnabled": {
            "type": "boolean",
            "title": "Enable accessibility completion description",
            "description": "Controls whether a hidden label is appended to the component title that describes the completion state of the component.",
            "default": true,
            "_adapt": {
              "isSetting": true
            }
          },
          "_onScreen": {
            "type": "object",
            "title": "Animation classes",
            "description": "These settings allow you to attach classes to the element when it is within the browser's viewport; helpful for running CSS-based animations on elements as they scroll into view",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Add classes when this element is in view",
                "default": false,
                "_adapt": {
                  "isSetting": true
                }
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "The CSS class(es) to add to the element",
                "default": "",
                "_adapt": {
                  "isSetting": true
                }
              },
              "_percentInviewVertical": {
                "type": "number",
                "title": "Percent in view",
                "description": "Controls what percentage of the element's height needs to be in the viewport in order for the CSS class(es) to be added",
                "default": 50,
                "_adapt": {
                  "isSetting": true
                }
              }
            }
          },
          "_extensions": {
            "type": "object",
            "title": "Extensions",
            "default": {}
          },
          "_sortOrder": {
            "type": "number",
            "title": "Sort order",
            "_adapt": {
              "editorOnly": true
            }
          },
          "themeSettings": {
            "type": "object",
            "title": "Theme settings",
            "default": {}
          },
          "_colorLabel": {
            "type": "string",
            "title": "Color label",
            "default": "",
            "_adapt": {
              "editorOnly": true
            }
          },
          "createdAt": {
            "description": "Date that the data was created",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "createdBy": {
            "description": "Author of the data",
            "type": "string",
            "isObjectId": true
          },
          "updatedAt": {
            "description": "Date that the data was last modified",
            "type": "string",
            "format": "date-time",
            "isDate": true
          },
          "tags": {
            "title": "Tags",
            "description": "Add tags by entering one or more words, separated with a comma (,)",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "isObjectId": true
            },
            "_backboneForms": "Tags"
          },
          "_component": {
            "type": "string",
            "title": "Component"
          },
          "_layout": {
            "type": "string",
            "title": "Layout",
            "default": ""
          },
          "_isResetOnRevisit": {
            "type": "string",
            "title": "Reset state on revisit",
            "description": "Controls whether this component will be reset when the learner leaves the page then returns to it. The 'soft' setting will reset the component to allow the learner to attempt it again, but will not require them to do so; whereas the 'hard' setting will require them to do so. The default (false) will not cause the component to be reset",
            "default": "false",
            "enum": [
              "false",
              "soft",
              "hard"
            ],
            "_adapt": {
              "isSetting": true
            },
            "_backboneForms": "Select"
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "default": {}
          },
          "_vanilla": {
            "type": "object",
            "title": "Vanilla",
            "default": {},
            "properties": {
              "_textAlignment": {
                "type": "object",
                "title": "Text alignment",
                "default": {},
                "properties": {
                  "_title": {
                    "type": "string",
                    "title": "Title alignment",
                    "description": "Set the alignment of the component title. Left: Aligns the title to the left of the container. Center: Aligns the title to the center of the container. Right: Aligns the title to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_body": {
                    "type": "string",
                    "title": "Body alignment",
                    "description": "Set the alignment of the component body. Left: Aligns the body to the left of the container. Center: Aligns the body to the center of the container. Right: Aligns the body to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  },
                  "_instruction": {
                    "type": "string",
                    "title": "Instruction alignment",
                    "description": "Set the alignment of the component instruction. Left: Aligns the instruction to the left of the container. Center: Aligns the instruction to the center of the container. Right: Aligns the instruction to the right of the container. The alignment automatically inverses for right-to-left languages. The default is `` which inherits the natural page direction.",
                    "default": "",
                    "enum": [
                      "",
                      "left",
                      "center",
                      "right"
                    ],
                    "_backboneForms": "Select"
                  }
                }
              }
            }
          },
          "_tutor": {
            "type": "object",
            "title": "Tutor",
            "default": {},
            "properties": {
              "_isInherited": {
                "type": "boolean",
                "title": "Use course defaults",
                "description": "If disabled, these settings will override the course defaults",
                "default": true
              },
              "_type": {
                "type": "string",
                "title": "Type",
                "description": "Question feedback display type",
                "default": "notify",
                "enum": [
                  "notify",
                  "inline",
                  "overlay",
                  "none"
                ],
                "_backboneForms": "Select"
              },
              "_classes": {
                "type": "string",
                "title": "Classes",
                "description": "Question feedback classes",
                "default": ""
              },
              "_hasNotifyBottomButton": {
                "type": "boolean",
                "title": "Enable notify bottom button",
                "description": "If disabled and of type notify, the default close icon will be displayed",
                "default": false
              },
              "_button": {
                "type": "object",
                "title": "Close button",
                "default": {},
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Text",
                    "description": "For notify and inline feedback buttons. Overlay will always show a cross.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  },
                  "ariaLabel": {
                    "type": "string",
                    "title": "Aria label",
                    "description": "For the inline button and overlay close button. Notify will always read the Text.",
                    "default": "{{_globals._extensions._tutor.hideFeedback}}",
                    "_adapt": {
                      "translatable": true
                    }
                  }
                }
              }
            }
          },
          "_pageLevelProgress": {
            "type": "object",
            "title": "Page Level Progress",
            "default": {},
            "properties": {
              "_isEnabled": {
                "type": "boolean",
                "title": "Enable Page Level Progress",
                "default": true
              },
              "_isCompletionIndicatorEnabled": {
                "type": "boolean",
                "title": "Show inline completion indicator",
                "default": false
              }
            }
          },
          "_supportedLayout": {
            "type": "string",
            "title": "Supported layout",
            "default": "full-width",
            "enum": [
              "full-width",
              "half-width",
              "both"
            ],
            "_adapt": {
              "editorOnly": true
            }
          },
          "_setCompletionOn": {
            "type": "string",
            "title": "Completion criteria",
            "description": "Whether completion is based on the learner having viewed all the accordion items - or just having viewed the component",
            "default": "allItems",
            "enum": [
              "inview",
              "allItems"
            ],
            "_backboneForms": "Select"
          },
          "_items": {
            "type": "array",
            "title": "Items",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  }
                },
                "body": {
                  "type": "string",
                  "title": "Body",
                  "description": "This is the item body text that is hidden until the item title is clicked on",
                  "default": "",
                  "_adapt": {
                    "translatable": true
                  },
                  "_backboneForms": "TextArea"
                },
                "_imageAlignment": {
                  "type": "string",
                  "title": "Image alignment",
                  "description": "Defines the alignment of the item image. Full: Image spans the entire width of the container below the text area. Left: Image aligned to the left of the text area. Right: Image aligned to the right of the text area. The default alignment is `full`. For smaller screens the alignment defaults to `full`.",
                  "default": "full",
                  "enum": [
                    "full",
                    "left",
                    "right"
                  ],
                  "_backboneForms": "Select"
                },
                "_graphic": {
                  "type": "object",
                  "title": "Graphic",
                  "default": {},
                  "properties": {
                    "alt": {
                      "type": "string",
                      "title": "Alternative text",
                      "description": "A description of the image; required when it has meaning that must be conveyed to the learner. For 'decorative' images, leave this blank",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    },
                    "src": {
                      "type": "string",
                      "isObjectId": true,
                      "title": "Source",
                      "description": "Optional image which will be rendered with the item body text",
                      "_backboneForms": {
                        "type": "Asset",
                        "media": "image"
                      }
                    },
                    "attribution": {
                      "type": "string",
                      "title": "Attribution",
                      "description": "Text to be displayed as an attribution",
                      "default": "",
                      "_adapt": {
                        "translatable": true
                      }
                    }
                  }
                },
                "_classes": {
                  "type": "string",
                  "title": "Custom classes",
                  "description": "Custom classes that are applied to the accordion item. Supported classes 'align-image-left' and 'align-image-right' are available to align item image to the left or right in desktop view. On smaller screens the item image defaults underneath the item body text. Additional classes can be used but they must be predefined in one of the Less files. Separate multiple classes with a space",
                  "default": ""
                }
              }
            }
          },
          "_shouldCollapseItems": {
            "type": "boolean",
            "title": "Automatically collapse items",
            "description": "If disabled, upon expansion of an accordion item, any previously expanded items will not be collapsed",
            "default": true
          },
          "_shouldExpandFirstItem": {
            "type": "boolean",
            "title": "Expand first item by default",
            "default": false
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "updatedAt",
          "_component"
        ]
      }
    }
  },
  "paths": {
    "/api/adapt/export/:id": {
      "post": {
        "summary": "Create an export zip of an Adapt course",
        "responses": {
          "200": {
            "description": "The Adapt build data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/adaptbuild"
                }
              }
            }
          }
        },
        "tags": [
          "adapt"
        ],
        "description": "Required scopes: <span>export:adapt</span>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "security": {
          "roles": [
            "export:adapt"
          ]
        }
      },
      "get": {
        "summary": "Retrieve an Adapt course export zip",
        "responses": {
          "200": {
            "description": "Course build zip file",
            "content": {
              "application/zip": {}
            }
          }
        },
        "tags": [
          "adapt"
        ],
        "description": "Required scopes: <span>export:adapt</span>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "security": {
          "roles": [
            "export:adapt"
          ]
        }
      }
    },
    "/api/adapt/import": {
      "post": {
        "summary": "Import an Adapt course",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "isDryRun": {
                    "type": "Boolean",
                    "default": false
                  },
                  "importContent": {
                    "type": "Boolean",
                    "default": true
                  },
                  "importPlugins": {
                    "type": "Boolean",
                    "default": true
                  },
                  "updatePlugins": {
                    "type": "Boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "courseId": {
                      "type": "string"
                    },
                    "versions": {
                      "type": "object"
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "course": {
                          "type": "number"
                        },
                        "config": {
                          "type": "number"
                        },
                        "menu": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "article": {
                          "type": "number"
                        },
                        "block": {
                          "type": "number"
                        },
                        "component": {
                          "type": "number"
                        }
                      }
                    },
                    "statusReport": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "data": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "warn": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "data": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "info": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "data": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "adapt"
        ],
        "description": "Required scopes: <span>import:adapt</span>",
        "parameters": [],
        "security": {
          "roles": [
            "import:adapt"
          ]
        }
      }
    },
    "/api/adapt/preview/:id": {
      "post": {
        "summary": "Build a preview of an Adapt course",
        "responses": {
          "200": {
            "description": "The Adapt build data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/adaptbuild"
                }
              }
            }
          }
        },
        "tags": [
          "adapt"
        ],
        "description": "Required scopes: <span>preview:adapt</span>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "security": {
          "roles": [
            "preview:adapt"
          ]
        }
      }
    },
    "/api/adapt/publish/:id": {
      "post": {
        "summary": "Create a publish zip of an Adapt course",
        "responses": {
          "200": {
            "description": "The Adapt build data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/adaptbuild"
                }
              }
            }
          }
        },
        "tags": [
          "adapt"
        ],
        "description": "Required scopes: <span>publish:adapt</span>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "security": {
          "roles": [
            "publish:adapt"
          ]
        }
      },
      "get": {
        "summary": "Retrieve an Adapt course publish zip",
        "responses": {
          "200": {
            "description": "Course build zip file",
            "content": {
              "application/zip": {}
            }
          }
        },
        "tags": [
          "adapt"
        ],
        "description": "Required scopes: <span>publish:adapt</span>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "security": {
          "roles": [
            "publish:adapt"
          ]
        }
      }
    },
    "/api/adapt/update": {
      "post": {
        "summary": "Updates the installed framework",
        "responses": {
          "200": {
            "description": "Describes the upgraded elements",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "from": {
                      "type": "string"
                    },
                    "to": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "adapt"
        ],
        "description": "Required scopes: <span>update:adapt</span>",
        "parameters": [],
        "security": {
          "roles": [
            "update:adapt"
          ]
        }
      },
      "get": {
        "summary": "Retrieve framework update data",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "canBeUpdated": {
                      "type": "boolean"
                    },
                    "currentVersion": {
                      "type": "string"
                    },
                    "latestCompatibleVersion": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "adapt"
        ],
        "description": "Required scopes: <span>update:adapt</span>",
        "parameters": [],
        "security": {
          "roles": [
            "update:adapt"
          ]
        }
      }
    },
    "/api/assets": {
      "post": {
        "summary": "Insert a new asset document",
        "parameters": [],
        "requestBody": {
          "description": "The asset data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/asset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The asset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asset"
                }
              }
            }
          }
        },
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>write:assets</span>",
        "security": {
          "roles": [
            "write:assets"
          ]
        }
      },
      "get": {
        "summary": "Retrieve all assets documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/asset"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>read:assets</span>",
        "security": {
          "roles": [
            "read:assets"
          ]
        }
      }
    },
    "/api/assets/:_id": {
      "put": {
        "summary": "Replace an existing asset document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The asset data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/asset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The asset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asset"
                }
              }
            }
          }
        },
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>write:assets</span>",
        "security": {
          "roles": [
            "write:assets"
          ]
        }
      },
      "get": {
        "summary": "Retrieve an existing asset document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The asset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asset"
                }
              }
            }
          }
        },
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>read:assets</span>",
        "security": {
          "roles": [
            "read:assets"
          ]
        }
      },
      "patch": {
        "summary": "Update an existing asset document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The asset data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/asset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The asset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asset"
                }
              }
            }
          }
        },
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>write:assets</span>",
        "security": {
          "roles": [
            "write:assets"
          ]
        }
      },
      "delete": {
        "summary": "Delete an existing asset document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The asset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asset"
                }
              }
            }
          }
        },
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>write:assets</span>",
        "security": {
          "roles": [
            "write:assets"
          ]
        }
      }
    },
    "/api/assets/query": {
      "post": {
        "summary": "Query all assets",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/asset"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>read:assets</span>",
        "security": {
          "roles": [
            "read:assets"
          ]
        }
      }
    },
    "/api/assets/schema": {
      "get": {
        "summary": "Retrieve asset schema",
        "parameters": [],
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>read:schema</span>",
        "security": {
          "roles": [
            "read:schema"
          ]
        }
      }
    },
    "/api/assets/serve/:_id": {
      "get": {
        "summary": "Retrieve an asset file",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          },
          {
            "name": "thumb",
            "in": "query",
            "description": "Whether the thumbnail should be sent",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The asset file"
          }
        },
        "tags": [
          "assets"
        ],
        "description": "Required scopes: <span>read:assets</span>",
        "security": {
          "roles": [
            "read:assets"
          ]
        }
      }
    },
    "/api/auth/check": {
      "get": {
        "summary": "Checks current authentication status",
        "description": "Route requires no authentication<br/><br/>A HTTP status code of 200 will be returned if request could be authenticated successfully, otherwise an error will be returned.",
        "responses": {
          "200": {
            "description": "User authentication data",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSuper": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "parameters": [],
        "security": {
          "roles": []
        }
      }
    },
    "/api/auth/disavow": {
      "post": {
        "summary": "De-authenticates the current user from the API",
        "responses": {
          "204": {}
        },
        "tags": [
          "auth"
        ],
        "description": "Required scopes: <span>disavow:auth</span>",
        "parameters": [],
        "security": {
          "roles": [
            "disavow:auth"
          ]
        }
      }
    },
    "/api/auth/generatetoken": {
      "post": {
        "summary": "Creates a new authentication token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "lifespan": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "description": "Required scopes: <span>generatetoken:auth</span>",
        "parameters": [],
        "security": {
          "roles": [
            "generatetoken:auth"
          ]
        }
      }
    },
    "/api/auth/local": {
      "post": {
        "summary": "Authenticate with the API",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  },
                  "persistSession": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {}
        },
        "tags": [
          "auth local"
        ],
        "description": "Route requires no authentication",
        "parameters": [],
        "security": {
          "roles": []
        }
      }
    },
    "/api/auth/local/changepass": {
      "post": {
        "summary": "Change the password of a user",
        "description": "Route requires no authentication<br/><br/>Can be used with or without authentication. If authenticated, an email/password combination will be acepted. If unauthenticated, a valid reset token and password must be specified.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {}
        },
        "tags": [
          "auth local"
        ],
        "parameters": [],
        "security": {
          "roles": []
        }
      }
    },
    "/api/auth/local/disable": {
      "post": {
        "summary": "Disable user account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {}
        },
        "tags": [
          "auth local"
        ],
        "description": "Required scopes: <span>write:users</span>",
        "parameters": [],
        "security": {
          "roles": [
            "write:users"
          ]
        }
      }
    },
    "/api/auth/local/enable": {
      "post": {
        "summary": "Enable user account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {}
        },
        "tags": [
          "auth local"
        ],
        "description": "Required scopes: <span>write:users</span>",
        "parameters": [],
        "security": {
          "roles": [
            "write:users"
          ]
        }
      }
    },
    "/api/auth/local/forgotpass": {
      "post": {
        "summary": "Trigger a password reset",
        "description": "Route requires no authentication<br/><br/>Generates a password reset and emails this to the user with instructions on updating their password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth local"
        ],
        "parameters": [],
        "security": {
          "roles": []
        }
      }
    },
    "/api/auth/local/invite": {
      "post": {
        "summary": "Invite a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {}
        },
        "tags": [
          "auth local"
        ],
        "description": "Required scopes: <span>register:users</span>",
        "parameters": [],
        "security": {
          "roles": [
            "register:users"
          ]
        }
      }
    },
    "/api/auth/local/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "firstName": {
                    "type": "string",
                    "required": true
                  },
                  "lastName": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/localauthuser"
                }
              }
            }
          }
        },
        "tags": [
          "auth local"
        ],
        "description": "Required scopes: <span>register:users</span>",
        "parameters": [],
        "security": {
          "roles": [
            "register:users"
          ]
        }
      }
    },
    "/api/auth/local/registersuper": {
      "post": {
        "summary": "Register a new super user",
        "description": "ROUTE IS ONLY ACCESSIBLE FROM LOCALHOST.<br/><br/>Route requires no authentication<br/><br/>Only one user can be registered in this way, and if a super user already exists the request will fail.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/localauthuser"
                }
              }
            }
          }
        },
        "tags": [
          "auth local"
        ],
        "parameters": [],
        "security": {
          "roles": []
        }
      }
    },
    "/api/auth/local/validatepass": {
      "post": {
        "summary": "Validate password",
        "description": "Required scopes: <span>read:me</span><br/><br/>Checks that a password passes the required complexity specified in the application's configuration settings.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth local"
        ],
        "parameters": [],
        "security": {
          "roles": [
            "read:me"
          ]
        }
      }
    },
    "/api/auth/tokens": {
      "get": {
        "summary": "Retrieve all authentication tokens for current user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "usedAt": {
                        "type": "string"
                      },
                      "authType": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "description": "Required scopes: <span>read:me</span>",
        "parameters": [],
        "security": {
          "roles": [
            "read:me"
          ]
        }
      }
    },
    "/api/config": {
      "get": {
        "summary": "Retrieve public config data",
        "responses": {
          "200": {
            "description": "The public config item data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "config"
        ],
        "description": "Route requires no authentication",
        "parameters": [],
        "security": {
          "roles": []
        }
      }
    },
    "/api/content": {
      "post": {
        "summary": "Insert a new content document",
        "parameters": [],
        "requestBody": {
          "description": "The content data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The content data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/content"
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "security": {
          "roles": [
            "write:content"
          ]
        }
      },
      "get": {
        "summary": "Retrieve all content documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The content data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/content"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Required scopes: <span>read:content</span>",
        "security": {
          "roles": [
            "read:content"
          ]
        }
      }
    },
    "/api/content/:_id": {
      "put": {
        "summary": "Replace an existing content document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The content data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The content data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/content"
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "security": {
          "roles": [
            "write:content"
          ]
        }
      },
      "get": {
        "summary": "Retrieve an existing content document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The content data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/content"
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Required scopes: <span>read:content</span>",
        "security": {
          "roles": [
            "read:content"
          ]
        }
      },
      "patch": {
        "summary": "Update an existing content document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The content data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The content data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/content"
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "security": {
          "roles": [
            "write:content"
          ]
        }
      },
      "delete": {
        "summary": "Delete an existing content document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The content data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/content"
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "security": {
          "roles": [
            "write:content"
          ]
        }
      }
    },
    "/api/content/clone": {
      "post": {
        "summary": "Clones a content item",
        "description": "Required scopes: <span>write:content</span><br/><br/>Duplicates a content item as well as all its children.",
        "responses": {
          "201": {
            "description": "The newly cloned data",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "$ref": "#components/schemas/content"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "parameters": [],
        "security": {
          "roles": [
            "write:content"
          ]
        }
      }
    },
    "/api/content/insertrecusive": {
      "post": {
        "summary": "Insert hierarchical content data",
        "description": "Required scopes: <span>write:content</span><br/><br/>Recursively inserts content data",
        "parameters": [
          {
            "name": "rootId",
            "in": "path",
            "description": "The parent content item _id",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/content"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly inserted data",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "$ref": "#components/schemas/content"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "security": {
          "roles": [
            "write:content"
          ]
        }
      }
    },
    "/api/content/query": {
      "post": {
        "summary": "Query all content",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The content data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/content"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ],
        "description": "Required scopes: <span>read:content</span>",
        "security": {
          "roles": [
            "read:content"
          ]
        }
      }
    },
    "/api/content/schema": {
      "get": {
        "summary": "Retrieve content schema",
        "parameters": [],
        "tags": [
          "content"
        ],
        "description": "Required scopes: <span>read:schema</span>",
        "security": {
          "roles": [
            "read:schema"
          ]
        }
      }
    },
    "/api/contentplugins": {
      "get": {
        "summary": "Retrieve all contentplugins documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The contentplugin data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/contentplugin"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>read:contentplugins</span>",
        "security": {
          "roles": [
            "read:contentplugins"
          ]
        }
      }
    },
    "/api/contentplugins/:_id": {
      "get": {
        "summary": "Retrieve an existing contentplugin document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The contentplugin data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contentplugin"
                }
              }
            }
          }
        },
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>read:contentplugins</span>",
        "security": {
          "roles": [
            "read:contentplugins"
          ]
        }
      },
      "patch": {
        "summary": "Update an existing contentplugin document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The contentplugin data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contentplugin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The contentplugin data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contentplugin"
                }
              }
            }
          }
        },
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>write:contentplugins</span>",
        "security": {
          "roles": [
            "write:contentplugins"
          ]
        }
      },
      "delete": {
        "summary": "Delete an existing contentplugin document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The contentplugin data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contentplugin"
                }
              }
            }
          }
        },
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>write:contentplugins</span>",
        "security": {
          "roles": [
            "write:contentplugins"
          ]
        }
      }
    },
    "/api/contentplugins/:_id/update": {
      "post": {
        "summary": "Update a single content plugin",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Content plugin _id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/contentplugin"
                }
              }
            }
          }
        },
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>update:contentplugin</span>",
        "security": {
          "roles": [
            "update:contentplugin"
          ]
        }
      }
    },
    "/api/contentplugins/:_id/uses": {
      "get": {
        "summary": "Return courses using a single content plugin",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Content plugin _id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#components/schemas/course"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>read:contentplugin</span>",
        "security": {
          "roles": [
            "read:contentplugin"
          ]
        }
      }
    },
    "/api/contentplugins/install": {
      "post": {
        "summary": "Import an Adapt course",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "force": {
                    "type": "Boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/contentplugin"
                }
              }
            }
          }
        },
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>install:contentplugin</span>",
        "parameters": [],
        "security": {
          "roles": [
            "install:contentplugin"
          ]
        }
      }
    },
    "/api/contentplugins/query": {
      "post": {
        "summary": "Query all contentplugins",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The contentplugin data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/contentplugin"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>read:contentplugins</span>",
        "security": {
          "roles": [
            "read:contentplugins"
          ]
        }
      }
    },
    "/api/contentplugins/schema": {
      "get": {
        "summary": "Retrieve contentplugin schema",
        "parameters": [],
        "tags": [
          "contentplugins"
        ],
        "description": "Required scopes: <span>read:schema</span>",
        "security": {
          "roles": [
            "read:schema"
          ]
        }
      }
    },
    "/api/coursethemepresets": {
      "post": {
        "summary": "Insert a new coursethemepreset document",
        "parameters": [],
        "requestBody": {
          "description": "The coursethemepreset data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/coursethemepreset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The coursethemepreset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/coursethemepreset"
                }
              }
            }
          }
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "security": {
          "roles": [
            "write:content"
          ]
        }
      },
      "get": {
        "summary": "Retrieve all coursethemepresets documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The coursethemepreset data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/coursethemepreset"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>read:content</span>",
        "security": {
          "roles": [
            "read:content"
          ]
        }
      }
    },
    "/api/coursethemepresets/:_id": {
      "put": {
        "summary": "Replace an existing coursethemepreset document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The coursethemepreset data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/coursethemepreset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The coursethemepreset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/coursethemepreset"
                }
              }
            }
          }
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "security": {
          "roles": [
            "write:content"
          ]
        }
      },
      "get": {
        "summary": "Retrieve an existing coursethemepreset document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The coursethemepreset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/coursethemepreset"
                }
              }
            }
          }
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>read:content</span>",
        "security": {
          "roles": [
            "read:content"
          ]
        }
      },
      "patch": {
        "summary": "Update an existing coursethemepreset document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The coursethemepreset data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/coursethemepreset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The coursethemepreset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/coursethemepreset"
                }
              }
            }
          }
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "security": {
          "roles": [
            "write:content"
          ]
        }
      },
      "delete": {
        "summary": "Delete an existing coursethemepreset document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The coursethemepreset data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/coursethemepreset"
                }
              }
            }
          }
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "security": {
          "roles": [
            "write:content"
          ]
        }
      }
    },
    "/api/coursethemepresets/:_id/apply/:courseId": {
      "post": {
        "summary": "Apply theme preset to a course",
        "responses": {
          "204": {}
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          },
          {
            "name": "courseId",
            "in": "path",
            "required": true
          }
        ],
        "security": {
          "roles": [
            "write:content"
          ]
        }
      }
    },
    "/api/coursethemepresets/:_id/remove/:courseId": {
      "post": {
        "summary": "Remove theme preset from a course",
        "responses": {
          "204": {}
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>write:content</span>",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          },
          {
            "name": "courseId",
            "in": "path",
            "required": true
          }
        ],
        "security": {
          "roles": [
            "write:content"
          ]
        }
      }
    },
    "/api/coursethemepresets/query": {
      "post": {
        "summary": "Query all coursethemepresets",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The coursethemepreset data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/coursethemepreset"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>read:content</span>",
        "security": {
          "roles": [
            "read:content"
          ]
        }
      }
    },
    "/api/coursethemepresets/schema": {
      "get": {
        "summary": "Retrieve coursethemepreset schema",
        "parameters": [],
        "tags": [
          "coursethemepresets"
        ],
        "description": "Required scopes: <span>read:schema</span>",
        "security": {
          "roles": [
            "read:schema"
          ]
        }
      }
    },
    "/api/lang/:lang?": {
      "get": {
        "summary": "Retrieve lang strings for single locale",
        "responses": {
          "200": {
            "description": "Lang strings for the specified locale",
            "content": {
              "application/json": {}
            }
          }
        },
        "tags": [
          "lang"
        ],
        "description": "Route requires no authentication",
        "parameters": [
          {
            "name": "lang",
            "in": "path",
            "required": false
          }
        ],
        "security": {
          "roles": []
        }
      }
    },
    "/api/logs/:_id?": {
      "get": {
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": false
          }
        ],
        "tags": [
          "logs"
        ],
        "description": "Required scopes: <span>read:logs</span>",
        "security": {
          "roles": [
            "read:logs"
          ]
        }
      }
    },
    "/api/logs/query": {
      "post": {
        "summary": "Query all logs",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The log data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/log"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "logs"
        ],
        "description": "Required scopes: <span>read:logs</span>",
        "security": {
          "roles": [
            "read:logs"
          ]
        }
      }
    },
    "/api/mailer/test": {
      "post": {
        "summary": "Send test email",
        "responses": {
          "200": {}
        },
        "tags": [
          "mailer"
        ],
        "description": "ROUTE IS ONLY ACCESSIBLE FROM LOCALHOST.<br/><br/>Route requires no authentication",
        "parameters": [],
        "security": {
          "roles": []
        }
      }
    },
    "/api/roles": {
      "post": {
        "summary": "Insert a new role document",
        "parameters": [],
        "requestBody": {
          "description": "The role data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The role data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "description": "Required scopes: <span>write:roles</span>",
        "security": {
          "roles": [
            "write:roles"
          ]
        }
      },
      "get": {
        "summary": "Retrieve all roles documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The role data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/role"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "description": "Required scopes: <span>read:roles</span>",
        "security": {
          "roles": [
            "read:roles"
          ]
        }
      }
    },
    "/api/roles/:_id": {
      "put": {
        "summary": "Replace an existing role document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The role data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The role data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "description": "Required scopes: <span>write:roles</span>",
        "security": {
          "roles": [
            "write:roles"
          ]
        }
      },
      "get": {
        "summary": "Retrieve an existing role document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The role data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "description": "Required scopes: <span>read:roles</span>",
        "security": {
          "roles": [
            "read:roles"
          ]
        }
      },
      "patch": {
        "summary": "Update an existing role document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The role data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The role data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "description": "Required scopes: <span>write:roles</span>",
        "security": {
          "roles": [
            "write:roles"
          ]
        }
      },
      "delete": {
        "summary": "Delete an existing role document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The role data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "description": "Required scopes: <span>write:roles</span>",
        "security": {
          "roles": [
            "write:roles"
          ]
        }
      }
    },
    "/api/roles/query": {
      "post": {
        "summary": "Query all roles",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The role data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/role"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "description": "Required scopes: <span>read:roles</span>",
        "security": {
          "roles": [
            "read:roles"
          ]
        }
      }
    },
    "/api/roles/schema": {
      "get": {
        "summary": "Retrieve role schema",
        "parameters": [],
        "tags": [
          "roles"
        ],
        "description": "Required scopes: <span>read:schema</span>",
        "security": {
          "roles": [
            "read:schema"
          ]
        }
      }
    },
    "/api/spoortracking/reset/:_courseId": {
      "post": {
        "summary": "Reset course tracking IDs",
        "description": "Required scopes: <span>write:content</span><br/><br/>Fully resets all tracking IDs for a single course.",
        "responses": {
          "204": {}
        },
        "tags": [
          "spoortracking"
        ],
        "parameters": [
          {
            "name": "_courseId",
            "in": "path",
            "required": true
          }
        ],
        "security": {
          "roles": [
            "write:content"
          ]
        }
      }
    },
    "/api/tags": {
      "post": {
        "summary": "Insert a new tag document",
        "parameters": [],
        "requestBody": {
          "description": "The tag data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tag"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The tag data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tag"
                }
              }
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Required scopes: <span>write:tags</span>",
        "security": {
          "roles": [
            "write:tags"
          ]
        }
      },
      "get": {
        "summary": "Retrieve all tags documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The tag data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tag"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Required scopes: <span>read:tags</span>",
        "security": {
          "roles": [
            "read:tags"
          ]
        }
      }
    },
    "/api/tags/:_id": {
      "put": {
        "summary": "Replace an existing tag document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The tag data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tag data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tag"
                }
              }
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Required scopes: <span>write:tags</span>",
        "security": {
          "roles": [
            "write:tags"
          ]
        }
      },
      "get": {
        "summary": "Retrieve an existing tag document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The tag data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tag"
                }
              }
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Required scopes: <span>read:tags</span>",
        "security": {
          "roles": [
            "read:tags"
          ]
        }
      },
      "patch": {
        "summary": "Update an existing tag document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The tag data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tag data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tag"
                }
              }
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Required scopes: <span>write:tags</span>",
        "security": {
          "roles": [
            "write:tags"
          ]
        }
      },
      "delete": {
        "summary": "Delete an existing tag document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The tag data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tag"
                }
              }
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Required scopes: <span>write:tags</span>",
        "security": {
          "roles": [
            "write:tags"
          ]
        }
      }
    },
    "/api/tags/autocomplete": {
      "get": {
        "summary": "Retrieve tags for UI autocomplete",
        "description": "Required scopes: <span>read:content</span><br/><br/>A streamlined query API to allow searching of tag data.",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "Search term",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tags"
        ],
        "security": {
          "roles": [
            "read:content"
          ]
        }
      }
    },
    "/api/tags/query": {
      "post": {
        "summary": "Query all tags",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The tag data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tag"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "Required scopes: <span>read:tags</span>",
        "security": {
          "roles": [
            "read:tags"
          ]
        }
      }
    },
    "/api/tags/schema": {
      "get": {
        "summary": "Retrieve tag schema",
        "parameters": [],
        "tags": [
          "tags"
        ],
        "description": "Required scopes: <span>read:schema</span>",
        "security": {
          "roles": [
            "read:schema"
          ]
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Retrieve all users documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "description": "Required scopes: <span>read:users</span>",
        "security": {
          "roles": [
            "read:users"
          ]
        }
      }
    },
    "/api/users/:_id": {
      "put": {
        "summary": "Replace an existing user document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The user data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "description": "Required scopes: <span>write:users</span>",
        "security": {
          "roles": [
            "write:users"
          ]
        }
      },
      "get": {
        "summary": "Retrieve an existing user document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "description": "Required scopes: <span>read:users</span>",
        "security": {
          "roles": [
            "read:users"
          ]
        }
      },
      "patch": {
        "summary": "Update an existing user document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The user data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "description": "Required scopes: <span>write:users</span>",
        "security": {
          "roles": [
            "write:users"
          ]
        }
      },
      "delete": {
        "summary": "Delete an existing user document",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "description": "Required scopes: <span>write:users</span>",
        "security": {
          "roles": [
            "write:users"
          ]
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Retrieve your own user data",
        "description": "Required scopes: <span>read:me</span><br/><br/>This endpoint is shorthand for `GET` `/api/users/:_id`, see the documentation for that endpoint for more details",
        "tags": [
          "users"
        ],
        "parameters": [],
        "security": {
          "roles": [
            "read:me"
          ]
        }
      },
      "put": {
        "summary": "Replace your own user data",
        "description": "Required scopes: <span>write:me</span><br/><br/>This endpoint is shorthand for `PUT` `/api/users/:_id`, see the documentation for that endpoint for more details",
        "tags": [
          "users"
        ],
        "parameters": [],
        "security": {
          "roles": [
            "write:me"
          ]
        }
      },
      "patch": {
        "summary": "Update your own user data",
        "description": "Required scopes: <span>write:me</span><br/><br/>This endpoint is shorthand for `PATCH` `/api/users/:_id`, see the documentation for that endpoint for more details",
        "tags": [
          "users"
        ],
        "parameters": [],
        "security": {
          "roles": [
            "write:me"
          ]
        }
      }
    },
    "/api/users/query": {
      "post": {
        "summary": "Query all users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results should be returned Default value is 100 (max value is 250)"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return (determined from the limit value)"
          }
        ],
        "responses": {
          "200": {
            "description": "The user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "description": "Required scopes: <span>read:users</span>",
        "security": {
          "roles": [
            "read:users"
          ]
        }
      }
    },
    "/api/users/schema": {
      "get": {
        "summary": "Retrieve user schema",
        "parameters": [],
        "tags": [
          "users"
        ],
        "description": "Required scopes: <span>read:schema</span>",
        "security": {
          "roles": [
            "read:schema"
          ]
        }
      }
    }
  }
}